{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "d5d7c033-d737-495b-a84c-bdd7e4e78a08",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\r\n| where type =~ 'microsoft.keyvault/vaults'\r\n| summarize by subscriptionId\r\n| union (Resources\r\n| where type =~ 'microsoft.keyvault/vaults'\r\n| summarize Count = count() by subscriptionId\r\n| top 1 by Count desc)\r\n| summarize Count = count() by subscriptionId\r\n| project value = subscriptionId, label = subscriptionId, selected = Count > 1",
            "crossComponentResources": [
              "value::selected"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "827a53dc-62fe-49ee-88a6-f9f751ed5ab3",
            "version": "KqlParameterItem/1.0",
            "name": "Vaults",
            "label": "Key vaults",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "\"",
            "delimiter": ",",
            "query": "Resources\r\n| where type =~ 'microsoft.keyvault/vaults'\r\n| project name, id\r\n| union (Resources\r\n| where type =~ 'microsoft.keyvault/vaults'\r\n| order by name asc\r\n| take 5\r\n| project id, name)\r\n| summarize Count = count() by id, name\r\n| order by name asc\r\n| project value = id, label = id, selected = Count > 1",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "",
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "65f81355-b707-45be-b7e1-f8450b537da4",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time Range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 86400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            }
          },
          {
            "id": "ed145907-5677-426b-8737-66ac01714250",
            "version": "KqlParameterItem/1.0",
            "name": "Message",
            "type": 1,
            "query": "where type == 'microsoft.keyvault/vaults' \r\n| summarize Selected = countif(id in ({Vaults:value})), Total = count()\r\n| extend Selected = iff(Selected > 200, 200, Selected)\r\n| project Message = strcat('# ', Selected, ' / ', Total)",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          }
        ],
        "style": "above",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "KeyVault-Parameters",
      "styleSettings": {
        "margin": "15px 0 0 0"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "{Message}\r\n_Key vaults_"
      },
      "name": "text - 5",
      "styleSettings": {
        "margin": "15px 0 10px 10px"
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Failures",
            "subTarget": "Failures",
            "style": "link"
          },
          {
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Logs",
            "subTarget": "Diagnose",
            "style": "link"
          }
        ]
      },
      "name": "links - 3",
      "styleSettings": {
        "margin": "15px 0 0 0"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "## Overview section"
      },
      "conditionalVisibility": {
        "parameterName": "1",
        "comparison": "isEqualTo",
        "value": "2"
      },
      "name": "Overview section"
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbook6f5ece70-86e7-4a7e-9a20-72fe3c12eeb4",
        "version": "MetricsItem/2.0",
        "size": 2,
        "chartType": 0,
        "resourceIds": [
          "{Vaults}"
        ],
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "resourceType": "microsoft.keyvault/vaults",
        "resourceParameter": "Vaults",
        "metrics": [
          {
            "namespace": "microsoft.keyvault/vaults",
            "metric": "microsoft.keyvault/vaults--ServiceApiResult",
            "aggregation": 1,
            "splitBy": "ActivityName",
            "splitBySortOrder": -1,
            "splitByLimit": 10,
            "columnName": "Api hits"
          },
          {
            "namespace": "microsoft.keyvault/vaults",
            "metric": "microsoft.keyvault/vaults--ServiceApiResult",
            "aggregation": 1,
            "splitBy": "ActivityName",
            "splitBySortOrder": -1,
            "splitByLimit": 5,
            "columnName": "Api hit failures",
            "filters": [
              {
                "key": "StatusCode",
                "operator": 1,
                "values": [
                  "200",
                  "201",
                  "202",
                  "206"
                ]
              }
            ]
          },
          {
            "namespace": "microsoft.keyvault/vaults",
            "metric": "microsoft.keyvault/vaults--ServiceApiLatency",
            "aggregation": 4,
            "splitBy": "ActivityName",
            "splitBySortOrder": -1,
            "splitByLimit": 5
          }
        ],
        "gridFormatType": 2,
        "showExpandCollapseGrid": true,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Subscription",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Name",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Segment",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Api hits",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "palette": "blue",
                "showIcon": true,
                "aggregation": "Sum"
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "Api hits Timeline",
              "formatter": 21,
              "formatOptions": {
                "min": 0,
                "palette": "blue",
                "showIcon": true,
                "aggregation": "Sum"
              }
            },
            {
              "columnMatch": "Api hit failures",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "palette": "red",
                "showIcon": true,
                "aggregation": "Sum"
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "Api hit failures Timeline",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "microsoft.keyvault/vaults--ServiceApiLatency",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "palette": "gray",
                "showIcon": true,
                "aggregation": "Max"
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "microsoft.keyvault/vaults--ServiceApiLatency Timeline",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": ".*\\/Total Service Api Hits$",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "microsoft.keyvault/vaults--ServiceApiResult Timeline",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "microsoft.keyvault/vaults--ServiceApiResult",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              },
              "numberFormat": {
                "unit": 0,
                "options": null
              }
            }
          ],
          "rowLimit": 10000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Subscription",
              "Name"
            ],
            "expandTopLevel": true,
            "finalBy": "Segment"
          },
          "sortBy": [
            {
              "itemKey": "$gen_heatmap_Api hits_4",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "Subscription"
            },
            {
              "columnId": "Name"
            },
            {
              "columnId": "Segment"
            },
            {
              "columnId": "Api hits",
              "label": "Requests"
            },
            {
              "columnId": "Api hits Timeline",
              "label": "Requests timeline"
            },
            {
              "columnId": "Api hit failures",
              "label": "Request failures"
            },
            {
              "columnId": "Api hit failures Timeline",
              "label": "Api hit failures Timeline"
            },
            {
              "columnId": "microsoft.keyvault/vaults--ServiceApiLatency",
              "label": "Average latency (worst rolled up)"
            },
            {
              "columnId": "microsoft.keyvault/vaults--ServiceApiLatency Timeline",
              "label": "Overall Service Api Latency (Average) Timeline"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "$gen_heatmap_Api hits_4",
            "sortOrder": 2
          }
        ],
        "showExportToExcel": true,
        "exportToExcelOptions": "visible"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Overview"
      },
      "showPin": true,
      "name": "Key vault overview metrics"
    },
    {
      "type": 1,
      "content": {
        "json": "## Failures section"
      },
      "conditionalVisibility": {
        "parameterName": "1",
        "comparison": "isEqualTo",
        "value": "2"
      },
      "name": "Failures section"
    },
    {
      "type": 10,
      "content": {
        "chartId": "workbook6f5ece70-86e7-4a7e-9a20-72fe3c12eeb4",
        "version": "MetricsItem/2.0",
        "size": 2,
        "chartType": 0,
        "resourceIds": [
          "{Vaults}"
        ],
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "resourceType": "microsoft.keyvault/vaults",
        "resourceParameter": "Vaults",
        "metrics": [
          {
            "namespace": "microsoft.keyvault/vaults",
            "metric": "microsoft.keyvault/vaults--ServiceApiHit",
            "aggregation": 1,
            "splitBy": null
          },
          {
            "namespace": "microsoft.keyvault/vaults",
            "metric": "microsoft.keyvault/vaults--ServiceApiResult",
            "aggregation": 1,
            "splitBy": "StatusCode",
            "splitBySortOrder": -1,
            "splitByLimit": 10,
            "columnName": "response"
          }
        ],
        "showExpandCollapseGrid": true,
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "$gen_group",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Subscription",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Name",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "microsoft.keyvault/vaults--ServiceApiHit",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "palette": "blue",
                "showIcon": true,
                "aggregation": "Sum"
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "microsoft.keyvault/vaults--ServiceApiHit Timeline",
              "formatter": 21,
              "formatOptions": {
                "min": 0,
                "palette": "blue",
                "showIcon": true,
                "aggregation": "Sum"
              }
            },
            {
              "columnMatch": "(20|30).*\\/response",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "palette": "green",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "(401|404)/response",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "palette": "gray",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": ".*\\/response$",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "palette": "red",
                "showIcon": true,
                "aggregation": "Sum"
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "Segment",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "rowLimit": 10000,
          "filter": true,
          "hierarchySettings": {
            "treeType": 1,
            "groupBy": [
              "Subscription"
            ],
            "expandTopLevel": true,
            "finalBy": "Name"
          },
          "sortBy": [
            {
              "itemKey": "$gen_heatmap_microsoft.keyvault/vaults--ServiceApiHit_3",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "Subscription"
            },
            {
              "columnId": "Name"
            },
            {
              "columnId": "microsoft.keyvault/vaults--ServiceApiHit",
              "label": "Api hits"
            },
            {
              "columnId": "microsoft.keyvault/vaults--ServiceApiHit Timeline",
              "label": "Api hits timeline"
            },
            {
              "columnId": "200/response",
              "label": "200/response"
            },
            {
              "columnId": "401/response",
              "label": "401/response"
            },
            {
              "columnId": "403/response",
              "label": "403/response"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "$gen_heatmap_microsoft.keyvault/vaults--ServiceApiHit_3",
            "sortOrder": 2
          }
        ],
        "showExportToExcel": true,
        "exportToExcelOptions": "visible"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Failures"
      },
      "showPin": true,
      "name": "Key vault failure metrics"
    },
    {
      "type": 1,
      "content": {
        "json": "## Logs section"
      },
      "conditionalVisibility": {
        "parameterName": "1",
        "comparison": "isEqualTo",
        "value": "2"
      },
      "name": "Logs section"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let onboardedResources = union withsource=TableName *\r\n| where TableName == 'AzureDiagnostics'\r\n| extend ResourceId = tolower(column_ifexists('ResourceId', ''))\r\n| summarize by ResourceId;\r\nlet data = range i from 1 to 1 step 1\r\n| project resource = todynamic(tolower(strcat('[', '{Vaults}', ']')))\r\n| mvexpand resource to typeof(string) limit 10000\r\n| join kind = fullouter (onboardedResources) on $left.resource == $right.ResourceId;\r\ndata\r\n| summarize Resources = countif(ResourceId != '')\r\n| extend Rank = 1, Title = 'Enabled'\r\n| union (data\r\n| summarize Resources = countif(ResourceId == '')\r\n| extend Rank = 2, Title = 'Disabled', Footer = 'Change')\r\n| order by Rank asc\r\n| extend Subtitle = '⎯⎯⎯'",
        "size": 4,
        "title": "Key vaults with diagnostic logs collection",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "exportToExcelOptions": "visible",
        "queryType": 0,
        "resourceType": "microsoft.keyvault/vaults",
        "crossComponentResources": [
          "{Vaults}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Title",
            "formatter": 1,
            "formatOptions": {
              "linkColumn": "Resources",
              "linkTarget": "Resource",
              "showIcon": true
            }
          },
          "subtitleContent": {
            "columnMatch": "Subtitle",
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Resources",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "rightContent": {
            "columnMatch": "Title",
            "formatter": 18,
            "formatOptions": {
              "showIcon": true,
              "thresholdsOptions": "icons",
              "thresholdsGrid": [
                {
                  "operator": "==",
                  "thresholdValue": "Disabled",
                  "representation": "2",
                  "text": ""
                },
                {
                  "operator": "Default",
                  "thresholdValue": null,
                  "representation": "success",
                  "text": ""
                }
              ]
            }
          },
          "showBorder": false
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Diagnose"
      },
      "name": "Onboarding status"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "paragraph",
        "links": [
          {
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Start collecting",
            "style": "link",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/KeyVault/Azure Monitor Onboarding",
              "typeSource": "static",
              "type": "keyvaults-insights",
              "gallerySource": "static",
              "gallery": "Azure Monitor"
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Diagnose"
      },
      "name": "Start collecting link",
      "styleSettings": {
        "margin": "-47px 0 0 192px"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = union withsource=TableName *\r\n| where TableName == 'AzureDiagnostics'\r\n| extend Category = column_ifexists('Category', ''), OperationName = column_ifexists('OperationName', ''), ResultStatus = column_ifexists('ResultStatus', ''), TimeGenerated = column_ifexists('TimeGenerated', now()), ResourceId = tolower(column_ifexists('ResourceId', '')), DurationMs = column_ifexists('DurationMs', 0.0), httpStatusCode_d = column_ifexists('httpStatusCode_d', '')\r\n// Ignore Authentication operations with a 401. This is normal when using Key Vault SDK, first an unauthenticated request is done then the response is used for authentication.\r\n| where Category==\"AuditEvent\" and not (OperationName == \"Authentication\" and httpStatusCode_d == 401);\r\n// Data aggregated to the Resource\r\nlet allData = materialize(data\r\n| summarize Count = count() by ResourceId, OperationName, httpStatusCode_d\r\n| extend key = strcat(ResourceId, '/', OperationName, '/', httpStatusCode_d)\r\n| join kind = inner (data\r\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by ResourceId, OperationName, httpStatusCode_d\r\n    | extend key = strcat(ResourceId, '/', OperationName, '/', httpStatusCode_d)) on key\r\n| project ResourceId, OperationName, StatusCode = replace(@'\\.0', '', tostring(httpStatusCode_d)), Count, Trend, TimeGenerated);\r\nallData\r\n| summarize Count = sum(Count) by ResourceId, OperationName\r\n| extend key = strcat(ResourceId, '/', OperationName, '/')\r\n| join kind = inner (allData\r\n| mv-expand Trend to typeof(long), TimeGenerated to typeof(datetime)\r\n| make-series Trend = sum(Trend) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by ResourceId, OperationName \r\n| extend key = strcat(ResourceId, '/', OperationName, '/')) on key\r\n| project Id = strcat(ResourceId, '/', OperationName), ParentId = ResourceId, Name = OperationName, Kind = 'Operation', Count, Trend\r\n| union (allData\r\n| summarize Count = sum(Count) by ResourceId\r\n| extend key = ResourceId\r\n| join kind = inner (allData\r\n| mv-expand Trend to typeof(long), TimeGenerated to typeof(datetime)\r\n| make-series Trend = sum(Trend) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by ResourceId \r\n| extend key = ResourceId) on key\r\n| project Id = ResourceId, ParentId = '', Name = ResourceId, Kind = 'Key vault', Count, Trend)\r\n| union (allData\r\n| project Id = strcat(ResourceId, '/', OperationName, '/', StatusCode), ParentId = strcat(ResourceId, '/', OperationName), Name = StatusCode, Kind = 'Status code', Count, Trend)\r\n",
        "size": 0,
        "title": "Operations and Status codes",
        "noDataMessage": "There are no logs in this time range. Enable diagnostics log collection for your vaults to see insights here.",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "exportedParameters": [
          {
            "fieldName": "Id",
            "parameterName": "Id",
            "parameterType": 1,
            "defaultValue": "*"
          },
          {
            "fieldName": "Kind",
            "parameterName": "Kind",
            "parameterType": 1,
            "defaultValue": "*"
          }
        ],
        "exportToExcelOptions": "visible",
        "queryType": 0,
        "resourceType": "microsoft.keyvault/vaults",
        "crossComponentResources": [
          "{Vaults}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Id",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "ParentId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Name",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Kind",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Count",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "blue",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "Trend",
              "formatter": 21,
              "formatOptions": {
                "min": 0,
                "palette": "blue",
                "showIcon": true
              }
            }
          ],
          "filter": true,
          "hierarchySettings": {
            "idColumn": "Id",
            "parentColumn": "ParentId",
            "treeType": 0,
            "expanderColumn": "Name",
            "expandTopLevel": true
          },
          "sortBy": [
            {
              "itemKey": "$gen_bar_Count_4",
              "sortOrder": 2
            }
          ],
          "labelSettings": [
            {
              "columnId": "Id",
              "label": "Id"
            },
            {
              "columnId": "ParentId",
              "label": "ParentId"
            },
            {
              "columnId": "Name",
              "label": "Name"
            },
            {
              "columnId": "Kind",
              "label": "Kind"
            },
            {
              "columnId": "Count",
              "label": "Count"
            },
            {
              "columnId": "Trend",
              "label": "Trend"
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "$gen_bar_Count_4",
            "sortOrder": 2
          }
        ],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Title",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Resources",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "rightContent": {
            "columnMatch": "Title",
            "formatter": 18,
            "formatOptions": {
              "showIcon": true,
              "thresholdsOptions": "icons",
              "thresholdsGrid": [
                {
                  "operator": "==",
                  "thresholdValue": "Disabled",
                  "representation": "2",
                  "text": ""
                },
                {
                  "operator": "Default",
                  "thresholdValue": null,
                  "representation": "success",
                  "text": ""
                }
              ]
            }
          },
          "secondaryContent": {
            "columnMatch": "Footer",
            "formatter": 1,
            "formatOptions": {
              "linkTarget": "Url",
              "showIcon": true
            }
          },
          "showBorder": false
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Diagnose"
      },
      "customWidth": "40",
      "name": "Operations and Status codes"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = union withsource=TableName *\r\n| where TableName == 'AzureDiagnostics'\r\n| extend Category = column_ifexists('Category', ''), OperationName = column_ifexists('OperationName', ''), TimeGenerated = column_ifexists('TimeGenerated', now()), ResourceId = tolower(column_ifexists('ResourceId', '')), httpStatusCode_d = column_ifexists('httpStatusCode_d', ''), DurationMs = column_ifexists('DurationMs_long', -1.0)\r\n// Ignore Authentication operations with a 401. This is normal when using Key Vault SDK, first an unauthenticated request is done then the response is used for authentication.\r\n| where Category==\"AuditEvent\" and not (OperationName == \"Authentication\" and httpStatusCode_d == 401);\r\ndata\r\n| extend StatusCode = replace(@'\\.0', '', tostring(httpStatusCode_d))\r\n| where '{Id}' == '*' or ('{Kind}' == 'Key vault' and '{Id}' == ResourceId) or ('{Kind}' == 'Operation' and '{Id}' == strcat(ResourceId, '/', OperationName)) or ('{Kind}' == 'Status code' and '{Id}' == strcat(ResourceId, '/', OperationName, '/', StatusCode))\r\n| extend p = pack_all()\r\n| mv-apply p on \r\n( \r\n    extend key = tostring(bag_keys(p)[0])\r\n    | where isnotempty(p[key]) and isnotnull(p[key])\r\n    | where key !in (\"SourceSystem\",\"Type\")\r\n    | summarize make_bag(p)\r\n)\r\n| order by TimeGenerated desc\r\n| project ['Status code'] = httpStatusCode_d, TimeGenerated, DurationMs, OperationName, ResourceId, Details = bag_p\r\n",
        "size": 0,
        "title": "Logs",
        "noDataMessage": "There are no logs in this time range. Enable diagnostics log collection for you Key vaults to see insights here.",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "showExportToExcel": true,
        "exportToExcelOptions": "visible",
        "queryType": 0,
        "resourceType": "microsoft.keyvault/vaults",
        "crossComponentResources": [
          "{Vaults}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Status code",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "200",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "201",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "202",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "205",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "3",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "TimeGenerated",
              "formatter": 6,
              "formatOptions": {
                "showIcon": true
              },
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal"
                }
              },
              "dateFormat": {
                "formatName": "shortDateTimePattern"
              }
            },
            {
              "columnMatch": "DurationMs",
              "formatter": 8,
              "formatOptions": {
                "min": 0,
                "palette": "gray",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "OperationName",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "ResourceId",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "Details",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            }
          ],
          "rowLimit": 400,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "Status code",
              "label": "Status"
            },
            {
              "columnId": "TimeGenerated",
              "label": "Time"
            },
            {
              "columnId": "DurationMs",
              "label": "Latency"
            },
            {
              "columnId": "OperationName",
              "label": "Operation"
            },
            {
              "columnId": "ResourceId",
              "label": "Key vault"
            },
            {
              "columnId": "Details"
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Title",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Resources",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "rightContent": {
            "columnMatch": "Title",
            "formatter": 18,
            "formatOptions": {
              "showIcon": true,
              "thresholdsOptions": "icons",
              "thresholdsGrid": [
                {
                  "operator": "==",
                  "thresholdValue": "Disabled",
                  "representation": "2",
                  "text": ""
                },
                {
                  "operator": "Default",
                  "thresholdValue": null,
                  "representation": "success",
                  "text": ""
                }
              ]
            }
          },
          "secondaryContent": {
            "columnMatch": "Footer",
            "formatter": 1,
            "formatOptions": {
              "linkTarget": "Url",
              "showIcon": true
            }
          },
          "showBorder": false
        }
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Diagnose"
      },
      "customWidth": "60",
      "name": "Key vault logs"
    },
    {
      "type": 1,
      "content": {
        "json": "💡 _Select a row to see just the logs for that scope_"
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Diagnose"
      },
      "name": "Tip"
    }
  ],
  "styleSettings": {},
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}