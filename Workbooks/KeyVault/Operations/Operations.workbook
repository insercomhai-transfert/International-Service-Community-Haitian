{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "65f81355-b707-45be-b7e1-f8450b537da4",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time Range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 604800000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ]
            },
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "5148ddec-5184-4fc2-aa3a-78797fd2c97c",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "isRequired": true,
            "query": "Resources\r\n| where type =~ 'microsoft.keyvault/vaults'\r\n| summarize by subscriptionId\r\n| union (Resources\r\n| where type =~ 'microsoft.keyvault/vaults'\r\n| summarize Count = count() by subscriptionId\r\n| top 1 by Count desc)\r\n| summarize Count = count() by subscriptionId\r\n| project value = subscriptionId, label = subscriptionId, selected = Count > 1",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "667d8ad3-370d-4f4d-932f-ea741a47246f",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceGroups",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "where type in~('microsoft.keyvault/vaults')\r\n| summarize Count = count() by resourceGroup\r\n| order by Count desc\r\n| extend Rank = row_number()\r\n| project value = resourceGroup, label = resourceGroup, selected = Rank == 1",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "6e52c4a4-5930-4742-b0f3-9462ec5d76a8",
            "version": "KqlParameterItem/1.0",
            "name": "Vault",
            "type": 5,
            "isRequired": true,
            "value": "value::1",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ]
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "resourceType": "microsoft.insights/components"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "name": "KeyVault-Parameters"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "nav",
        "links": [
          {
            "cellValue": "",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/KeyVault/Overview",
              "typeSource": "workbook",
              "gallerySource": "workbook",
              "locationSource": "default"
            }
          },
          {
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Failures",
            "style": "secondary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/KeyVault/Failures",
              "typeSource": "workbook",
              "gallerySource": "workbook",
              "locationSource": "default"
            }
          },
          {
            "cellValue": "",
            "linkTarget": "WorkbookTemplate",
            "linkLabel": "Operations",
            "subTarget": "Operations",
            "style": "primary",
            "workbookContext": {
              "componentIdSource": "workbook",
              "resourceIdsSource": "workbook",
              "templateIdSource": "static",
              "templateId": "Community-Workbooks/KeyVault/Operations",
              "typeSource": "workbook",
              "gallerySource": "workbook",
              "locationSource": "default"
            }
          }
        ]
      },
      "name": "links - 11"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Vault}"
        ],
        "parameters": [
          {
            "id": "16c64e5e-8e43-4b46-ab15-13ff7b11db6b",
            "version": "KqlParameterItem/1.0",
            "name": "Operations",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "let data = union withsource=TableName *\r\n| where TableName == 'AzureDiagnostics'\r\n| extend Category = column_ifexists('Category', ''), OperationName = column_ifexists('OperationName', ''), ResultStatus = column_ifexists('ResultStatus', ''), TimeGenerated = column_ifexists('TimeGenerated', now()), ResourceId = tolower(column_ifexists('ResourceId', '')), DurationMs = column_ifexists('DurationMs', 0.0), httpStatusCode_d = column_ifexists('httpStatusCode_d', '')\r\n// Ignore Authentication operations with a 401. This is normal when using Key Vault SDK, first an unauthenticated request is done then the response is used for authentication.\r\n| where Category==\"AuditEvent\" and not (OperationName == \"Authentication\" and httpStatusCode_d == 401);\r\ndata\r\n| distinct OperationName\r\n| sort by OperationName asc",
            "crossComponentResources": [
              "{Vault}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ]
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.keyvault/vaults"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.keyvault/vaults"
      },
      "name": "parameters - 12"
    },
    {
      "type": 1,
      "content": {
        "json": "⚠️ Either there are no operations selected or there is no Key Vault log data for this resource.\r\n\r\nFor additional assistance on how to configure additional monitoring coverage through diagnostic logs, visit the guide on how to [enable Azure Key Vault logging](https://docs.microsoft.com/azure/key-vault/key-vault-logging)."
      },
      "conditionalVisibility": {
        "parameterName": "Operations",
        "comparison": "isEqualTo",
        "value": ""
      },
      "name": "No data message"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "paragraph",
        "links": [
          {
            "cellValue": "{Vaults}",
            "linkTarget": "Resource",
            "linkLabel": "Enable Logs for Monitoring",
            "subTarget": "diagnostics",
            "style": "primary"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Operations",
        "comparison": "isEqualTo"
      },
      "name": "links - 13"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let rawData = AzureDiagnostics \n// Ignore Authentication operations with a 401. This is normal when using Key Vault SDK, first an unauthenticated request is done then the response is used for authentication.\n| where Category==\"AuditEvent\" and not (OperationName == \"Authentication\" and httpStatusCode_d == 401)\n| where OperationName in ({Operations}) or '*' in ({Operations})\n// Create ResultStatus with all the 'success' results bucked as 'Success'\n// Certain operations like StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success' as well\n| extend ResultStatus = case ( ResultSignature == \"\", \"Success\",\n                               ResultSignature == \"OK\", \"Success\",\n                               ResultSignature == \"Accepted\", \"Success\",\n                               ResultSignature);                            \nrawData \n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by ResultStatus\n| join kind = inner (rawData\n    | summarize Count = count() by ResultStatus\n    ) on ResultStatus\n| union (rawData\n| summarize Count = count()\n| extend jkey = 1\n| join kind=inner (rawData\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\n    | extend jkey = 1 \n    ) on jkey\n    | extend ResultStatus = 'All'\n)\n| project ResultStatus, Count, Trend\n| order by Count desc;",
        "size": 3,
        "showAnalytics": true,
        "title": "Operations by Result Status",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "exportFieldName": "ResultStatus",
        "exportParameterName": "ResultStatus",
        "exportDefaultValue": "All",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.keyvault/vaults",
        "crossComponentResources": [
          "{Vault}"
        ],
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "ResultStatus",
            "formatter": 18,
            "formatOptions": {
              "showIcon": true,
              "thresholdsOptions": "colors",
              "thresholdsGrid": [
                {
                  "operator": "==",
                  "thresholdValue": "All",
                  "text": "{0}{1}"
                },
                {
                  "operator": "regex",
                  "thresholdValue": "Success",
                  "representation": "green",
                  "text": "{0}{1}"
                },
                {
                  "operator": "Default",
                  "thresholdValue": null,
                  "representation": "redBright",
                  "text": "{0}{1}"
                }
              ]
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 1,
                "maximumSignificantDigits": 2
              }
            }
          },
          "rightContent": {
            "columnMatch": "Level",
            "formatter": 18,
            "formatOptions": {
              "showIcon": true,
              "thresholdsOptions": "icons",
              "thresholdsGrid": [
                {
                  "operator": "==",
                  "thresholdValue": "Error",
                  "representation": "3",
                  "text": ""
                },
                {
                  "operator": "==",
                  "thresholdValue": "Warning",
                  "representation": "2",
                  "text": ""
                },
                {
                  "operator": "Default",
                  "thresholdValue": null,
                  "representation": "1",
                  "text": ""
                }
              ]
            }
          },
          "secondaryContent": {
            "columnMatch": "Trend",
            "formatter": 9,
            "formatOptions": {
              "min": 0,
              "palette": "blue",
              "showIcon": true
            }
          },
          "showBorder": false
        }
      },
      "conditionalVisibility": {
        "parameterName": "Operations",
        "comparison": "isNotEqualTo"
      },
      "showPin": true,
      "name": "KeyVault-Status"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = AzureDiagnostics \r\n| where TimeGenerated {TimeRange}\r\n// Ignore Authentication operations with a 401. This is normal when using Key Vault SDK, first an unauthenticated request is done then the response is used for authentication.\r\n| where Category==\"AuditEvent\" and not (OperationName == \"Authentication\" and httpStatusCode_d == 401)\r\n| where OperationName in ({Operations}) or '*' in ({Operations})\r\n// Create ResultStatus with all the 'success' results bucked as 'Success'\r\n// Certain operations like StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success' as well\r\n| extend ResultStatus = case ( ResultSignature == \"\", \"Success\",\r\n                               ResultSignature == \"OK\", \"Success\",\r\n                               ResultSignature == \"Accepted\", \"Success\",\r\n                               ResultSignature)\r\n| where ResultStatus == '{ResultStatus}' or '{ResultStatus}' == 'All';\r\ndata\r\n// Data aggregated to the OperationName\r\n| summarize OperationCount = count(), SuccessCount = countif(ResultStatus == \"Success\"), FailureCount = countif(ResultStatus != \"Success\"), PDurationMs = percentile(DurationMs, 99) by Resource, OperationName\r\n| join kind=inner (data\r\n  | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by OperationName\r\n  | project-away TimeGenerated) on OperationName\r\n| order by OperationCount desc\r\n| project Name = strcat('⚡ ', OperationName), Id = strcat(Resource, '/', OperationName), ['Operation count'] = OperationCount, ['Operation count trend'] = Trend, ['Success count'] = SuccessCount, ['Failure count'] = FailureCount, ['p99 Duration'] = PDurationMs",
        "size": 1,
        "showAnalytics": true,
        "exportFieldName": "",
        "exportParameterName": "GridRow",
        "exportDefaultValue": "{ \"Id\":\"*\" }",
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.keyvault/vaults",
        "crossComponentResources": [
          "{Vault}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Name",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Id",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Operation count",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "blue",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "Operation count trend",
              "formatter": 9,
              "formatOptions": {
                "min": 0,
                "palette": "blue",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Success count",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "Failure count",
              "formatter": 18,
              "formatOptions": {
                "min": 0,
                "palette": "orange",
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "<=",
                    "thresholdValue": "0",
                    "representation": "Blank",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "3",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "p99 Duration",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": ">=",
                    "thresholdValue": "5000",
                    "representation": "4",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": ">=",
                    "thresholdValue": "1000",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "is Empty",
                    "representation": "more",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "ParentId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "ResourceId",
              "formatter": 5,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "Operations",
        "comparison": "isNotEqualTo"
      },
      "showPin": true,
      "name": "KeyVault-SummaryTable"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let gridRowSelected = dynamic({GridRow});\r\nlet resourceName = split(gridRowSelected.Id, \"/\")[0];\r\nlet operationName = split(gridRowSelected.Id, \"/\")[1];\r\nAzureDiagnostics \r\n| where TimeGenerated {TimeRange}\r\n// Ignore Authentication operations with a 401. This is normal when using Key Vault SDK, first an unauthenticated request is done then the response is used for authentication.\r\n| where Category==\"AuditEvent\" and not (OperationName == \"Authentication\" and httpStatusCode_d == 401)\r\n| where OperationName in ({Operations}) or '*' in ({Operations})\r\n| where resourceName == \"*\" or Resource == resourceName\r\n| where operationName == \"\" or OperationName == operationName\r\n// Create ResultStatus with all the 'success' results bucked as 'Success'\r\n// Certain operations like StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success' as well\r\n| extend ResultStatus = case ( ResultSignature == \"\", \"Success\",\r\n                               ResultSignature == \"OK\", \"Success\",\r\n                               ResultSignature == \"Accepted\", \"Success\",\r\n                               ResultSignature)\r\n| where ResultStatus == '{ResultStatus}' or '{ResultStatus}' == 'All'\r\n| extend p = pack_all()\r\n| mv-apply p on \r\n( \r\n    extend key = tostring(bag_keys(p)[0])\r\n    | where isnotempty(p[key]) and isnotnull(p[key])\r\n    | where key !in (\"SourceSystem\",\"Type\")\r\n    | summarize make_bag(p)\r\n)\r\n| project Time=TimeGenerated, Operation=OperationName, Result=ResultSignature, Duration = DurationMs, [\"Details\"]=bag_p\r\n| sort by Time desc",
        "size": 0,
        "showAnalytics": true,
        "showExportToExcel": true,
        "queryType": 0,
        "resourceType": "microsoft.keyvault/vaults",
        "crossComponentResources": [
          "{Vault}"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Time",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Vault",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Operation",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Result",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "OK",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Accepted",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "3",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "Duration",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": ">",
                    "thresholdValue": "1000",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "5000",
                    "representation": "4",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "🔍 View Details",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            },
            {
              "columnMatch": "Packed",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "filter": true
        }
      },
      "conditionalVisibility": {
        "parameterName": "Operations",
        "comparison": "isNotEqualTo"
      },
      "showPin": true,
      "name": "KeyVault-EventsTable"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
