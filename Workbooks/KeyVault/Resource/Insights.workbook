{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "65f81355-b707-45be-b7e1-f8450b537da4",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time Range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 604800000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ]
            }
          },
          {
            "id": "86c93d71-ea59-49f1-aac8-556d34ddb6bb",
            "version": "KqlParameterItem/1.0",
            "name": "Operations",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "AzureDiagnostics\r\n// Ignore Authentication operations with a 401. This is normal when using Key Vault SDK, first an unauthenticated request is done then the response is used for authentication.\r\n| where Category==\"AuditEvent\" and not (OperationName == \"Authentication\" and httpStatusCode_d == 401)\r\n| distinct OperationName\r\n| sort by OperationName asc",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "*"
            },
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.keyvault/vaults"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.keyvault/vaults"
      },
      "name": "KeyVault-Parameters"
    },
    {
      "type": 1,
      "content": {
        "json": "⚠️ Either there are no operations selected or there is no Key Vault log data for this resource.\r\n\r\nTo learn how to configure logging see:<br>\r\nhttps://docs.microsoft.com/en-us/azure/azure-monitor/insights/azure-key-vault#enable-key-vault-diagnostics-in-the-portal"
      },
      "conditionalVisibility": {
        "parameterName": "Operations",
        "comparison": "isEqualTo",
        "value": ""
      },
      "name": "No data message"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let rawData = AzureDiagnostics \n// Ignore Authentication operations with a 401. This is normal when using Key Vault SDK, first an unauthenticated request is done then the response is used for authentication.\n| where Category==\"AuditEvent\" and not (OperationName == \"Authentication\" and httpStatusCode_d == 401)\n| where OperationName in ({Operations}) or '*' in ({Operations})\n// Create ResultStatus with all the 'success' results bucked as 'Success'\n// Certain operations like StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success' as well\n| extend ResultStatus = case ( ResultSignature == \"\", \"Success\",\n                               ResultSignature == \"OK\", \"Success\",\n                               ResultSignature == \"Accepted\", \"Success\",\n                               ResultSignature);                            \nrawData \n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by ResultStatus\n| join kind = inner (rawData\n    | summarize Count = count() by ResultStatus\n    ) on ResultStatus\n| union (rawData\n| summarize Count = count()\n| extend jkey = 1\n| join kind=inner (rawData\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\n    | extend jkey = 1 \n    ) on jkey\n    | extend ResultStatus = 'All'\n)\n| project ResultStatus, Count, Trend\n| order by Count desc;",
        "size": 3,
        "exportFieldName": "ResultStatus",
        "exportParameterName": "ResultStatus",
        "exportDefaultValue": "All",
        "showAnalytics": true,
        "showExportToExcel": true,
        "exportToExcelOptions": "visible",
        "title": "Operations by Result Status",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "queryType": 0,
        "resourceType": "microsoft.keyvault/vaults",
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "ResultStatus",
            "formatter": 18,
            "formatOptions": {
              "showIcon": true,
              "thresholdsOptions": "colors",
              "thresholdsGrid": [
                {
                  "operator": "==",
                  "thresholdValue": "All",
                  "text": "{0}{1}"
                },
                {
                  "operator": "regex",
                  "thresholdValue": "Success",
                  "representation": "green",
                  "text": "{0}{1}"
                },
                {
                  "operator": "Default",
                  "thresholdValue": null,
                  "representation": "redBright",
                  "text": "{0}{1}"
                }
              ]
            }
          },
          "leftContent": {
            "columnMatch": "Count",
            "formatter": 12,
            "formatOptions": {
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 1,
                "maximumSignificantDigits": 2
              }
            }
          },
          "rightContent": {
            "columnMatch": "Level",
            "formatter": 18,
            "formatOptions": {
              "showIcon": true,
              "thresholdsOptions": "icons",
              "thresholdsGrid": [
                {
                  "operator": "==",
                  "thresholdValue": "Error",
                  "representation": "3",
                  "text": ""
                },
                {
                  "operator": "==",
                  "thresholdValue": "Warning",
                  "representation": "2",
                  "text": ""
                },
                {
                  "operator": "Default",
                  "thresholdValue": null,
                  "representation": "1",
                  "text": ""
                }
              ]
            }
          },
          "secondaryContent": {
            "columnMatch": "Trend",
            "formatter": 9,
            "formatOptions": {
              "min": 0,
              "palette": "blue",
              "showIcon": true
            }
          },
          "showBorder": false
        }
      },
      "conditionalVisibility": {
        "parameterName": "Operations",
        "comparison": "isNotEqualTo"
      },
      "showPin": true,
      "name": "KeyVault-Status"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let data = AzureDiagnostics \r\n| where TimeGenerated {TimeRange}\r\n// Ignore Authentication operations with a 401. This is normal when using Key Vault SDK, first an unauthenticated request is done then the response is used for authentication.\r\n| where Category==\"AuditEvent\" and not (OperationName == \"Authentication\" and httpStatusCode_d == 401)\r\n| where OperationName in ({Operations}) or '*' in ({Operations})\r\n// Create ResultStatus with all the 'success' results bucked as 'Success'\r\n// Certain operations like StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success' as well\r\n| extend ResultStatus = case ( ResultSignature == \"\", \"Success\",\r\n                               ResultSignature == \"OK\", \"Success\",\r\n                               ResultSignature == \"Accepted\", \"Success\",\r\n                               ResultSignature)\r\n| where ResultStatus == '{ResultStatus}' or '{ResultStatus}' == 'All';\r\ndata\r\n// Data aggregated to the OperationName\r\n| summarize OperationCount = count(), SuccessCount = countif(ResultStatus == \"Success\"), FailureCount = countif(ResultStatus != \"Success\"), PDurationMs = percentile(DurationMs, 99) by Resource, OperationName\r\n| join kind=inner (data\r\n  | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by OperationName\r\n  | project-away TimeGenerated) on OperationName\r\n| order by OperationCount desc\r\n| project Name = strcat('⚡ ', OperationName), Id = strcat(Resource, '/', OperationName), ['Operation count'] = OperationCount, ['Operation count trend'] = Trend, ['Success count'] = SuccessCount, ['Failure count'] = FailureCount, ['p99 Duration'] = PDurationMs",
        "size": 1,
        "exportFieldName": "",
        "exportParameterName": "GridRow",
        "exportDefaultValue": "{ \"Id\":\"*\" }",
        "showAnalytics": true,
        "showExportToExcel": true,
        "exportToExcelOptions": "visible",
        "queryType": 0,
        "resourceType": "microsoft.keyvault/vaults",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Name",
              "formatter": 1,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Id",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Operation count",
              "formatter": 4,
              "formatOptions": {
                "min": 0,
                "palette": "blue",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "Operation count trend",
              "formatter": 9,
              "formatOptions": {
                "min": 0,
                "palette": "blue",
                "showIcon": true
              }
            },
            {
              "columnMatch": "Success count",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "Failure count",
              "formatter": 18,
              "formatOptions": {
                "min": 0,
                "palette": "orange",
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "<=",
                    "thresholdValue": "0",
                    "representation": "Blank",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "3",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 1
                }
              }
            },
            {
              "columnMatch": "p99 Duration",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": ">=",
                    "thresholdValue": "5000",
                    "representation": "4",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": ">=",
                    "thresholdValue": "1000",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "is Empty",
                    "representation": "more",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "ParentId",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "ResourceId",
              "formatter": 5,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true
              }
            }
          ],
          "rowLimit": 1000,
          "filter": true,
          "labelSettings": [
            {
              "columnId": "Name",
              "label": "Name"
            },
            {
              "columnId": "Id",
              "label": "Id"
            },
            {
              "columnId": "Operation count",
              "label": "Operation count"
            },
            {
              "columnId": "Operation count trend",
              "label": "Operation count trend"
            },
            {
              "columnId": "Success count",
              "label": "Success count"
            },
            {
              "columnId": "Failure count",
              "label": "Failure count"
            },
            {
              "columnId": "p99 Duration",
              "label": "p99 Duration"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "Operations",
        "comparison": "isNotEqualTo"
      },
      "showPin": true,
      "name": "KeyVault-SummaryTable"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let gridRowSelected = dynamic({GridRow});\r\nlet resourceName = split(gridRowSelected.Id, \"/\")[0];\r\nlet operationName = split(gridRowSelected.Id, \"/\")[1];\r\nAzureDiagnostics \r\n| where TimeGenerated {TimeRange}\r\n// Ignore Authentication operations with a 401. This is normal when using Key Vault SDK, first an unauthenticated request is done then the response is used for authentication.\r\n| where Category==\"AuditEvent\" and not (OperationName == \"Authentication\" and httpStatusCode_d == 401)\r\n| where OperationName in ({Operations}) or '*' in ({Operations})\r\n| where resourceName == \"*\" or Resource == resourceName\r\n| where operationName == \"\" or OperationName == operationName\r\n// Create ResultStatus with all the 'success' results bucked as 'Success'\r\n// Certain operations like StorageAccountAutoSyncKey have no ResultSignature, for now set to 'Success' as well\r\n| extend ResultStatus = case ( ResultSignature == \"\", \"Success\",\r\n                               ResultSignature == \"OK\", \"Success\",\r\n                               ResultSignature == \"Accepted\", \"Success\",\r\n                               ResultSignature)\r\n| where ResultStatus == '{ResultStatus}' or '{ResultStatus}' == 'All'\r\n| extend p = pack_all()\r\n| mv-apply p on \r\n( \r\n    extend key = tostring(bag_keys(p)[0])\r\n    | where isnotempty(p[key]) and isnotnull(p[key])\r\n    | where key !in (\"SourceSystem\",\"Type\")\r\n    | summarize make_bag(p)\r\n)\r\n| project Time=TimeGenerated, Operation=OperationName, Result=ResultSignature, Duration = DurationMs, [\"Details\"]=bag_p\r\n| sort by Time desc",
        "size": 0,
        "showAnalytics": true,
        "showExportToExcel": true,
        "exportToExcelOptions": "visible",
        "queryType": 0,
        "resourceType": "microsoft.keyvault/vaults",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Time",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Vault",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Operation",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Result",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "==",
                    "thresholdValue": "OK",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "==",
                    "thresholdValue": "Accepted",
                    "representation": "success",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "3",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "Duration",
              "formatter": 18,
              "formatOptions": {
                "showIcon": true,
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": ">",
                    "thresholdValue": "1000",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": ">",
                    "thresholdValue": "5000",
                    "representation": "4",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Details",
              "formatter": 7,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "🔍 View Details",
                "linkIsContextBlade": true,
                "showIcon": true
              }
            },
            {
              "columnMatch": "Packed",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            }
          ],
          "filter": true,
          "labelSettings": [
            {
              "columnId": "Time",
              "label": "Time"
            },
            {
              "columnId": "Operation",
              "label": "Operation"
            },
            {
              "columnId": "Result",
              "label": "Result"
            },
            {
              "columnId": "Duration",
              "label": "Duration"
            },
            {
              "columnId": "Details",
              "label": "Details"
            }
          ]
        }
      },
      "conditionalVisibility": {
        "parameterName": "Operations",
        "comparison": "isNotEqualTo"
      },
      "showPin": true,
      "name": "KeyVault-EventsTable"
    }
  ],
  "styleSettings": {},
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}