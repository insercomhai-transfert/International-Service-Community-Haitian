{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "6dde42bb-29e2-47d6-b27f-84bbbe368b12",
            "version": "KqlParameterItem/1.0",
            "name": "param_host_selected",
            "type": 1,
            "value": "",
            "isHiddenWhenLocked": true
          },
          {
            "id": "bda7f049-cc56-490b-92ae-312186700540",
            "version": "KqlParameterItem/1.0",
            "name": "param_tab_main",
            "type": 1,
            "value": "1",
            "isHiddenWhenLocked": true
          },
          {
            "id": "731f3dea-e655-4c54-8db1-79e6d4691709",
            "version": "KqlParameterItem/1.0",
            "name": "param_check_error",
            "type": 1,
            "query": "// 0 = no error\n// 1 = table does not exist (need to add provider)\n// 2 = table exists, but column v1 does not (need to wait)\n// 3 = table exists, column v1 too, but not column v2 (need to upgrade)\n// 4 = table exists, column v1 and column v2 as well, but no records (need to wait)\nlet t = \"SapHana_LoadHistory_CL\";\nlet c1 = \"HOST_s\";\nlet c2 = \"PROVIDER_INSTANCE_s\";\nlet dummy = \"unmÃ¶glicher-wert!\";\nlet MissingTable = view () { print tableMissing = 1, columnV1 = dummy, columnV2 = dummy, records = -1 };\nlet checkRecords =\n  union\n    isfuzzy=true MissingTable,\n    (table(t)\n      | summarize records = count()\n    )\n  | project records\n  | top 1 by records desc\n;\nlet checkExists =\n  union\n    isfuzzy=true MissingTable,\n    (table(t)\n      | extend tableMissing = 0\n      | extend columnV1 = column_ifexists(c1, dummy)\n      | extend columnV2 = column_ifexists(c2, dummy)\n    )\n  | project tableMissing, columnV1, columnV2\n  | limit 2\n  | top 1 by tableMissing asc\n;\nlet tableExists = toscalar(checkExists | summarize max(tableMissing) != 1);\nlet columnV1Exists = toscalar(checkExists | summarize max(columnV1) != dummy);\nlet columnV2Exists = toscalar(checkExists | summarize max(columnV2) != dummy);\nlet tableRecords = toscalar(checkRecords | summarize max(records));\nlet x = iif(tableExists, iif(columnV1Exists, iif(columnV2Exists, iif(tableRecords > 0, \"0\", \"2\"), \"3\"), \"2\"), \"1\");\nprint toscalar(x)\n//print tableExists, columnV1Exists, columnV2Exists, tableRecords\n",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "90198a7b-268a-4cd1-99a7-639c1446a43a",
            "version": "KqlParameterItem/1.0",
            "name": "param_sid",
            "type": 1,
            "value": "*",
            "isHiddenWhenLocked": true
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "dummy_neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "section_params"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// error 1 = table does not exist (need to add provider)\nprint \"\"\n| take 0",
              "size": 4,
              "noDataMessage": "Before you can use this workbook, you need to add an SAP HANA Provider.",
              "noDataMessageStyle": 4,
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_error",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "error_1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// error 2 = table exists, but column v1 does not (need to wait)\nprint \"\"\n| take 0",
              "size": 4,
              "noDataMessage": "Initial ingestion in progress: After adding an SAP HANA Provider, it may take a few minutes for metrics to show up.",
              "noDataMessageStyle": 4,
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_error",
              "comparison": "isEqualTo",
              "value": "2"
            },
            "name": "error_2"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// error 3 = table exists, column v1 too, but not column v2 (need to upgrade)\nprint \"\"\n| take 0",
              "size": 4,
              "noDataMessage": "This workbook requires a newer version of SAP Monitor. Please consider upgrading by deleting and re-creating this SAP Monitor.",
              "noDataMessageStyle": 2,
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "param_check_error",
              "comparison": "isEqualTo",
              "value": "3"
            },
            "name": "error_3"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "param_check_error",
        "comparison": "isNotEqualTo"
      },
      "name": "group_error"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "SapHana_SystemOverview_CL\n| extend provider = PROVIDER_INSTANCE_s\n| distinct provider\n| join (SapHana_SystemOverview_CL | where NAME_s == \"Instance ID\" | extend sid = VALUE_s)\n    on $left.provider == $right.PROVIDER_INSTANCE_s\n| join (SapHana_SystemOverview_CL | where NAME_s == \"Instance Number\" | extend num = VALUE_s)\n    on $left.provider == $right.PROVIDER_INSTANCE_s\n| join (SapHana_SystemOverview_CL | where NAME_s == \"Version\" | extend version_raw = VALUE_s, \".\")\n    on $left.provider == $right.PROVIDER_INSTANCE_s\n| join kind=leftouter (SapHana_HostConfig_CL\n| project TimeGenerated, PROVIDER_INSTANCE_s, HOST_s, HOST_ACTIVE_s\n| summarize arg_max(TimeGenerated, *) by HOST_s, PROVIDER_INSTANCE_s\n| where HOST_ACTIVE_s == \"NO\"\n| summarize cnt_inactive_hosts=count() by PROVIDER_INSTANCE_s)\non $left.provider == $right.PROVIDER_INSTANCE_s\n| join (SapHana_SystemOverview_CL | where NAME_s == \"Distributed\" | extend distributed = iff(VALUE_s == \"No\", \"Single-node\", replace(@'Yes (.*)', @'Multi-node \\1', VALUE_s)))\n    on $left.provider == $right.PROVIDER_INSTANCE_s\n| extend sid_num = strcat(sid, \" / \", num)\n| extend version_split = split(version_raw, \".\")\n| extend version = strcat(\"SAP HANA \", version_split[0], \".\", version_split[1], \".\", version_split[2])\n| project provider, sid, num, sid_num, version, cnt_inactive_hosts, distributed\n| sort by sid asc",
        "size": 3,
        "title": "Monitored SAP HANA instances",
        "noDataMessage": "There are currently no SAP HANA providers configured.",
        "exportFieldName": "sid",
        "exportParameterName": "param_sid",
        "exportDefaultValue": "*",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces",
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "sid_num",
            "formatter": 1,
            "formatOptions": {}
          },
          "subtitleContent": {
            "columnMatch": "distributed",
            "formatter": 1,
            "formatOptions": {}
          },
          "leftContent": {
            "columnMatch": "cnt_inactive_hosts",
            "formatter": 18,
            "formatOptions": {
              "thresholdsOptions": "icons",
              "thresholdsGrid": [
                {
                  "operator": ">",
                  "thresholdValue": "0",
                  "representation": "2",
                  "text": ""
                },
                {
                  "operator": "is Empty",
                  "representation": "success",
                  "text": ""
                },
                {
                  "operator": "Default",
                  "thresholdValue": null,
                  "representation": "success",
                  "text": ""
                }
              ]
            },
            "tooltipFormat": {
              "tooltip": "A warning sign denotes that not all hosts are running."
            }
          },
          "secondaryContent": {
            "columnMatch": "version",
            "formatter": 2,
            "formatOptions": {}
          },
          "showBorder": true,
          "sortCriteriaField": "sid_num",
          "sortOrderField": 1
        }
      },
      "conditionalVisibility": {
        "parameterName": "param_check_error",
        "comparison": "isEqualTo",
        "value": "0"
      },
      "name": "query_sid"
    },
    {
      "type": 1,
      "content": {
        "json": "\n\n---\n<b style=\"color:DodgerBlue;\">You selected host:</b> {param_host_selected}<br>\n<b style=\"color:DodgerBlue;\">You selected instance:</b> {param_sid}"
      },
      "conditionalVisibility": {
        "parameterName": "dummy_neverset",
        "comparison": "isNotEqualTo"
      },
      "name": "text_overview"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "print \"\"\n| take 0",
        "size": 4,
        "noDataMessage": "Please select an SAP HANA instance from above to see more details.",
        "timeContext": {
          "durationMs": 86400000
        },
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "param_sid",
          "comparison": "isEqualTo",
          "value": "*"
        },
        {
          "parameterName": "param_check_error",
          "comparison": "isEqualTo",
          "value": "0"
        }
      ],
      "name": "info_select_sid"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "cellValue": "param_tab_main",
                  "linkTarget": "parameter",
                  "linkLabel": "Overview",
                  "subTarget": "1",
                  "style": "link"
                },
                {
                  "cellValue": "param_tab_main",
                  "linkTarget": "parameter",
                  "linkLabel": "Utilization",
                  "subTarget": "2",
                  "style": "link"
                },
                {
                  "cellValue": "param_tab_main",
                  "linkTarget": "parameter",
                  "linkLabel": "Backup",
                  "subTarget": "3",
                  "style": "link"
                }
              ]
            },
            "name": "tabs_main"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "2718717f-e363-4010-8feb-1aadda6387c3",
                        "version": "KqlParameterItem/1.0",
                        "name": "param_timeframe",
                        "label": "Timeframe",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                          "durationMs": 14400000
                        },
                        "typeSettings": {
                          "selectableValues": [
                            {
                              "durationMs": 300000
                            },
                            {
                              "durationMs": 900000
                            },
                            {
                              "durationMs": 1800000
                            },
                            {
                              "durationMs": 3600000
                            },
                            {
                              "durationMs": 14400000
                            },
                            {
                              "durationMs": 43200000
                            },
                            {
                              "durationMs": 86400000
                            },
                            {
                              "durationMs": 172800000
                            }
                          ]
                        }
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "section_timeframe"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let param_sid = \"{param_sid}\"\n;\nlet table_systemoverview = SapHana_SystemOverview_CL \n| where TimeGenerated > ago(30d)\n| extend sid = tostring(VALUE_s)\n| extend provider = tostring(PROVIDER_INSTANCE_s)\n| where NAME_s == \"Instance ID\"\n| summarize arg_max(TimeGenerated, *) by sid\n| sort by TimeGenerated\n| project sid, provider\n;\nlet table_hostconfig = SapHana_HostConfig_CL\n| where TimeGenerated > ago(24h)\n| extend provider = PROVIDER_INSTANCE_s\n| join kind=leftouter (table_systemoverview) on provider\n| where sid == param_sid\n| extend timestamp_hostconfig = TimeGenerated\n| extend host = tostring(HOST_s)\n| extend role = tolower(INDEXSERVER_ACTUAL_ROLE_s)\n| extend active = tolower(HOST_ACTIVE_s)\n| summarize arg_max(timestamp_hostconfig, *) by provider, host\n| sort by host asc\n| project timestamp_hostconfig, host, role, active\n;\nlet table_load_host = SapHana_LoadHistory_CL\n| extend timestamp_load = TimeGenerated\n| extend provider = PROVIDER_INSTANCE_s\n| join kind=leftouter (table_systemoverview) on provider\n| where sid == param_sid\n| extend host = HOST_s\n| extend cpu = CPU_d\n| extend memory = MEMORY_USED_d / MEMORY_SIZE_d * 100\n| extend nw_in = NETWORK_IN_d\n| extend nw_out = NETWORK_OUT_d\n| join kind=inner (table_hostconfig | where active == \"yes\") on host\n| where timestamp_load {param_timeframe}\n;\nlet table_highest_cpu = table_load_host\n| make-series avg(cpu) default=0 on timestamp_load step {param_timeframe:grain} by host\n| extend value = todouble(series_stats_dynamic(avg_cpu)['avg'])\n| extend timeseries = avg_cpu\n| sort by value desc\n| extend type = \"Highest CPU\"\n| project host, value, timeseries, type\n| take 1\n;\nlet table_highest_memory = table_load_host\n| make-series avg(memory) default=0 on timestamp_load step {param_timeframe:grain} by host\n| extend value = todouble(series_stats_dynamic(avg_memory)['avg'])\n| extend timeseries = avg_memory\n| sort by value desc\n| extend type = \"Highest Memory\"\n| project host, value, timeseries, type\n| take 1\n;\ntable_highest_cpu\n| union table_highest_memory\n| sort by type asc",
                    "size": 3,
                    "title": "Servers with most load",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "type",
                        "formatter": 1,
                        "formatOptions": {}
                      },
                      "subtitleContent": {
                        "columnMatch": "host",
                        "formatter": 1,
                        "formatOptions": {}
                      },
                      "leftContent": {
                        "columnMatch": "value",
                        "formatter": 12,
                        "formatOptions": {
                          "min": 0,
                          "max": 100,
                          "palette": "greenRed"
                        },
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "minimumFractionDigits": 1,
                            "maximumFractionDigits": 1
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "timeseries",
                        "formatter": 21,
                        "formatOptions": {
                          "min": 0,
                          "max": 100,
                          "palette": "blue"
                        }
                      },
                      "showBorder": true
                    }
                  },
                  "showPin": false,
                  "name": "query_busiest"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let param_sid = \"{param_sid}\"\n;\nlet table_systemoverview = SapHana_SystemOverview_CL \n| where TimeGenerated > ago(30d)\n| extend sid = tostring(VALUE_s)\n| extend provider = tostring(PROVIDER_INSTANCE_s)\n| where NAME_s == \"Instance ID\"\n| summarize arg_max(TimeGenerated, *) by sid\n| sort by TimeGenerated\n| project sid, provider\n;\nlet table_hostconfig = SapHana_HostConfig_CL\n| where TimeGenerated > ago(24h)\n| extend provider = PROVIDER_INSTANCE_s\n| join kind=leftouter (table_systemoverview) on provider\n| where sid == param_sid\n| extend timestamp_hostconfig = TimeGenerated\n| extend host = tostring(HOST_s)\n| extend role = tolower(INDEXSERVER_ACTUAL_ROLE_s)\n| extend active = tolower(HOST_ACTIVE_s)\n| summarize arg_max(timestamp_hostconfig, *) by provider, host\n| sort by host asc\n| project timestamp_hostconfig, host, role, active\n;\nlet table_load_host = SapHana_LoadHistory_CL\n| extend timestamp_load = TimeGenerated\n| extend provider = tostring(PROVIDER_INSTANCE_s)\n| join kind=leftouter (table_systemoverview) on provider\n| where sid == param_sid\n| extend host = HOST_s\n| extend cpu = CPU_d\n| extend memory = MEMORY_USED_d / MEMORY_SIZE_d * 100\n| extend nw_in = NETWORK_IN_d\n| extend nw_out = NETWORK_OUT_d\n| join kind=inner (table_hostconfig | where active == \"yes\") on host\n| where timestamp_load {param_timeframe} //>= timestamp_hostconfig - 5m\n| project cpu, memory, nw_in, nw_out, provider, host\n| summarize cpu=avg(cpu), memory=avg(memory), nw_in=avg(nw_in), nw_out=avg(nw_out) by provider, host\n;\nlet table_systemavailability = SapHana_SystemAvailability_CL\n| where TimeGenerated > ago(365d)\n| extend timestamp_systemavailability = TimeGenerated\n| extend provider = PROVIDER_INSTANCE_s\n| extend host = HOST_s\n| extend database = DATABASE_NAME_s\n| extend service = SERVICE_NAME_s\n| extend port = PORT_d\n| extend event = tostring(EVENT_NAME_s)\n| extend active = tolower(SERVICE_ACTIVE_s)\n| join kind=leftouter (table_systemoverview) on provider\n| join kind=rightouter (table_hostconfig | where active == \"yes\") on host\n| where sid != \"\" and port != 0\n| summarize arg_max(timestamp_systemavailability, *) by sid, host, database, service\n| project sid, host, database, service, event, port, active\n;\nlet table_disks = SapHana_Disks_CL\n| extend timestamp_disks = TimeGenerated\n| extend provider = PROVIDER_INSTANCE_s\n| join kind=leftouter (table_systemoverview) on provider\n| where sid == param_sid\n| extend host = HOST_s\n| extend type = USAGE_TYPE_s\n| extend disk_usage = USED_SIZE_d / TOTAL_SIZE_d * 100\n| where type in (\"DATA\", \"LOG\")\n| join kind=inner (table_hostconfig | where active == \"yes\") on host\n| where timestamp_disks {param_timeframe} //>= timestamp_hostconfig - 10m\n| summarize disk_usage=avg(disk_usage) by provider, host, type\n;\ntable_hostconfig\n| extend name = host\n| extend id = host\n| extend type = \"Host\", parentid = \"\"\n| join kind=leftouter (table_load_host | project host, cpu, memory, nw_in, nw_out) on host \n| join kind=leftouter (table_disks | project host, disk_usage, type | where type == \"DATA\" | extend disk_data = disk_usage) on host\n| join kind=leftouter (table_disks | project host, disk_usage, type | where type == \"LOG\" | extend disk_log = disk_usage) on host\n| union (table_systemavailability\n| project sid, port, host, service, database, active, event\n| where sid == param_sid\n| summarize by host, service, database, port, active, event\n| extend type = \"Service\"\n| extend name = strcat(service, \" (:\", tostring(toint(port)), \")\")\n| extend parentid = host, id = strcat(host, \"_\", service)\n)\n| order by host asc, database asc\n| project name, host, type, database, role, active, event, cpu, memory, disk_data, disk_log, nw_in, nw_out, id, parentid",
                    "size": 3,
                    "title": "Instance overview",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "host",
                          "formatter": 5,
                          "formatOptions": {}
                        },
                        {
                          "columnMatch": "active",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "yes",
                                "representation": "success",
                                "text": ""
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "no",
                                "representation": "4",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "pending",
                                "text": ""
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "event",
                          "formatter": 5,
                          "formatOptions": {}
                        },
                        {
                          "columnMatch": "cpu",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "memory",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "disk_data",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "disk_log",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "nw_in",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 1000,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 47,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "nw_out",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 1000,
                            "palette": "greenRed"
                          },
                          "numberFormat": {
                            "unit": 47,
                            "options": {
                              "style": "decimal",
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "id",
                          "formatter": 5,
                          "formatOptions": {}
                        },
                        {
                          "columnMatch": "parentid",
                          "formatter": 5,
                          "formatOptions": {}
                        }
                      ],
                      "filter": true,
                      "hierarchySettings": {
                        "idColumn": "id",
                        "parentColumn": "parentid",
                        "treeType": 0,
                        "expanderColumn": "name",
                        "expandTopLevel": false
                      },
                      "labelSettings": [
                        {
                          "columnId": "name",
                          "label": ""
                        },
                        {
                          "columnId": "host"
                        },
                        {
                          "columnId": "type",
                          "label": "Kind"
                        },
                        {
                          "columnId": "database",
                          "label": "Database"
                        },
                        {
                          "columnId": "role",
                          "label": "Role"
                        },
                        {
                          "columnId": "active",
                          "label": "Status"
                        },
                        {
                          "columnId": "event"
                        },
                        {
                          "columnId": "cpu",
                          "label": "CPU"
                        },
                        {
                          "columnId": "memory",
                          "label": "Memory"
                        },
                        {
                          "columnId": "disk_data",
                          "label": "Disk (Data)"
                        },
                        {
                          "columnId": "disk_log",
                          "label": "Disk (Log)"
                        },
                        {
                          "columnId": "nw_in",
                          "label": "NW (In)"
                        },
                        {
                          "columnId": "nw_out",
                          "label": "NW (Out)"
                        },
                        {
                          "columnId": "id"
                        },
                        {
                          "columnId": "parentid"
                        }
                      ]
                    }
                  },
                  "name": "query_overview"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let table_hostconfig = SapHana_HostConfig_CL\n| where TimeGenerated > ago(24h)\n| extend provider = tostring(PROVIDER_INSTANCE_s)\n| extend host = tostring(HOST_s)\n| extend role = tolower(INDEXSERVER_ACTUAL_ROLE_s)\n| extend status = tolower(HOST_ACTIVE_s)\n| extend timestamp_hostconfig = TimeGenerated\n| summarize arg_max(timestamp_hostconfig, *) by provider, host\n| sort by timestamp_hostconfig, host asc\n| project timestamp_hostconfig, provider, host, role, status;\nlet table_services = SapHana_SystemAvailability_CL\n| extend database = DATABASE_NAME_s\n| extend provider = PROVIDER_INSTANCE_s\n| extend host = HOST_s\n| extend service = SERVICE_NAME_s\n| summarize arg_max(TimeGenerated, *) by provider, host, service;\nlet table_system = SapHana_SystemOverview_CL \n| where TimeGenerated > ago(7d)\n| extend sid = tostring(VALUE_s)\n| extend provider = tostring(PROVIDER_INSTANCE_s)\n| where NAME_s == \"Instance ID\"\n| summarize arg_max(TimeGenerated, *) by sid\n| sort by TimeGenerated\n| project sid, provider;\nlet table_load_current = SapHana_LoadHistory_CL\n| where TimeGenerated > ago(12h)\n| extend provider = tostring(PROVIDER_INSTANCE_s)\n| extend host = tostring(HOST_s)\n| extend cpu = CPU_d\n| extend memory_used = MEMORY_USED_d\n| summarize arg_max(TimeGenerated, *) by provider, host\n| join kind=inner (table_hostconfig | where status == \"yes\" | where provider == provider) on host\n| sort by TimeGenerated\n| project provider, host, cpu, memory_used;\nlet table_cpu_5m = SapHana_LoadHistory_CL\n| where TimeGenerated > ago(24h)\n| extend timestamp_load = TimeGenerated\n| extend provider = tostring(PROVIDER_INSTANCE_s)\n| extend host = tostring(HOST_s)\n| extend cpu_5m = CPU_d\n| join kind=inner (table_hostconfig | where status == \"yes\" | where provider == provider) on host\n| where timestamp_load >= timestamp_hostconfig - 5m\n| project cpu_5m, provider, host\n| summarize avg(cpu_5m) by provider, host;\nlet table_cpu_15m = SapHana_LoadHistory_CL\n| where TimeGenerated > ago(24h)\n| extend timestamp_load = TimeGenerated\n| extend provider = tostring(PROVIDER_INSTANCE_s)\n| extend host = tostring(HOST_s)\n| extend cpu_15m = CPU_d\n| join kind=inner (table_hostconfig | where status == \"yes\" | where provider == provider) on host\n| where timestamp_load >= timestamp_hostconfig - 15m\n| project cpu_15m, provider, host\n| summarize avg(cpu_15m) by provider, host;\nlet table_memory_trend = SapHana_LoadHistory_CL\n| where TimeGenerated > ago(24h)\n| extend memory_used = MEMORY_USED_d / MEMORY_SIZE_d\n| extend provider = PROVIDER_INSTANCE_s\n| extend host = HOST_s\n| make-series avg(memory_used) default=0 on TimeGenerated from ago(24h) to now() step 30m by provider, host;\nlet table_cpu_trend = SapHana_LoadHistory_CL\n//| where TimeGenerated > ago(24h)\n| extend cpu = CPU_d\n| extend provider = PROVIDER_INSTANCE_s\n| extend host = HOST_s\n| make-series avg(cpu) default=0 on TimeGenerated from ago(24h) to now() step 30m by provider, host;\ntable_hostconfig\n| join kind=inner (table_system) on provider\n| join kind=leftouter (table_load_current | where provider == provider) on host\n| join kind=leftouter (table_cpu_trend | where provider == provider) on host\n| join kind=leftouter (table_memory_trend | where provider == provider) on host\n| extend instance = strcat(sid, \" (\", provider, \")\")\n| join kind=leftouter (table_cpu_5m | where provider == provider) on host\n| join kind=leftouter (table_cpu_15m | where provider == provider) on host\n//| join kind=inner (table_services | where provider == provider) on host \n| extend cpu_5m = avg_cpu_5m\n| extend cpu_15m = avg_cpu_15m\n| extend cpu_trend = avg_cpu\n| extend memory_current = memory_used\n| extend memory_trend = avg_memory_used\n| extend spacer = \"\"\n| sort by host asc\n| project instance, provider, host, role, status, cpu_5m, cpu_15m, cpu_trend, spacer, memory_current, memory_trend",
                    "size": 3,
                    "title": "Databases tenants and their hosts",
                    "noDataMessageStyle": 4,
                    "exportedParameters": [
                      {
                        "fieldName": "host",
                        "parameterName": "host_selected",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "",
                        "parameterName": "param_tab_main",
                        "parameterType": 1,
                        "defaultValue": "2"
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "instance",
                          "formatter": 5,
                          "formatOptions": {}
                        },
                        {
                          "columnMatch": "provider",
                          "formatter": 5,
                          "formatOptions": {}
                        },
                        {
                          "columnMatch": "host",
                          "formatter": 5,
                          "formatOptions": {}
                        },
                        {
                          "columnMatch": "role",
                          "formatter": 1,
                          "formatOptions": {}
                        },
                        {
                          "columnMatch": "status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "yes",
                                "representation": "success",
                                "text": ""
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "no",
                                "representation": "4",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "cpu_5m",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 200,
                            "palette": "redBright"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "cpu_15m",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 200,
                            "palette": "redBright"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "cpu_trend",
                          "formatter": 10,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "turquoise",
                            "aggregation": "Average"
                          },
                          "tooltipFormat": {
                            "tooltip": "CPU (trend)"
                          }
                        },
                        {
                          "columnMatch": "memory_current",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "purple",
                            "aggregation": "Sum"
                          },
                          "numberFormat": {
                            "unit": 38,
                            "options": {
                              "style": "decimal",
                              "useGrouping": true,
                              "minimumFractionDigits": 2,
                              "maximumFractionDigits": 2
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "Memory (current)"
                          }
                        },
                        {
                          "columnMatch": "memory_trend",
                          "formatter": 10,
                          "formatOptions": {
                            "min": 0,
                            "max": 1,
                            "palette": "purple",
                            "aggregation": "Average"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "Memory (trend)"
                          }
                        },
                        {
                          "columnMatch": "cpu_1m",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 200,
                            "palette": "redBright"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "cpu_current",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "turquoise",
                            "aggregation": "Average"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "CPU (current)"
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "instance"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "host"
                      },
                      "sortBy": [
                        {
                          "itemKey": "$gen_group",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "instance",
                          "label": "Host"
                        },
                        {
                          "columnId": "provider"
                        },
                        {
                          "columnId": "host"
                        },
                        {
                          "columnId": "role",
                          "label": "Role"
                        },
                        {
                          "columnId": "status",
                          "label": "Status"
                        },
                        {
                          "columnId": "cpu_5m",
                          "label": "CPU (5m)",
                          "comment": "Shows the rolling CPU average over the last 5 minutes"
                        },
                        {
                          "columnId": "cpu_15m",
                          "label": "CPU (15m)",
                          "comment": "Shows the rolling CPU average over the last 15 minutes"
                        },
                        {
                          "columnId": "cpu_trend",
                          "label": "CPU (trend)"
                        },
                        {
                          "columnId": "spacer",
                          "label": " "
                        },
                        {
                          "columnId": "memory_current",
                          "label": "Memory"
                        },
                        {
                          "columnId": "memory_trend",
                          "label": " Memory (trend)"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_group",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_tab_main",
                    "comparison": "isEqualTo",
                    "value": "99"
                  },
                  "showPin": true,
                  "name": "section_tree_overview",
                  "styleSettings": {
                    "progressStyle": "squares"
                  }
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "param_tab_main",
                "comparison": "isEqualTo",
                "value": "1"
              },
              {
                "parameterName": "param_sid",
                "comparison": "isNotEqualTo",
                "value": "*"
              }
            ],
            "name": "group_overview"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "cdc7ccf5-61a5-4ae4-8397-b35bdfa2a4da",
                        "version": "KqlParameterItem/1.0",
                        "name": "param_utilization_timerange",
                        "label": "Time range",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                          "durationMs": 172800000
                        },
                        "typeSettings": {
                          "selectableValues": [
                            {
                              "durationMs": 86400000
                            },
                            {
                              "durationMs": 172800000
                            },
                            {
                              "durationMs": 259200000
                            },
                            {
                              "durationMs": 604800000
                            },
                            {
                              "durationMs": 1209600000
                            },
                            {
                              "durationMs": 2592000000
                            }
                          ],
                          "allowCustom": true
                        }
                      },
                      {
                        "id": "378b2e15-9934-4755-b5ae-d7d0bfd26861",
                        "version": "KqlParameterItem/1.0",
                        "name": "param_utilization_type",
                        "label": "Type",
                        "type": 10,
                        "isRequired": true,
                        "typeSettings": {
                          "additionalResourceOptions": []
                        },
                        "jsonData": "[\n    { \"value\":\"cpu\", \"label\":\"CPU\", \"selected\":true },\n    { \"value\":\"memory\", \"label\":\"Memory\" },\n    { \"value\":\"network\", \"label\":\"Network\" },\n    { \"value\":\"disk\", \"label\":\"Disk\" }\n]"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "options_utilization_type",
                  "styleSettings": {
                    "padding": "10px"
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let param_sid = \"{param_sid}\"\n;\nlet table_systemoverview = SapHana_SystemOverview_CL \n| where TimeGenerated > ago(30d)\n| extend sid = tostring(VALUE_s)\n| extend provider = tostring(PROVIDER_INSTANCE_s)\n| where NAME_s == \"Instance ID\"\n| summarize arg_max(TimeGenerated, *) by sid\n| sort by TimeGenerated\n| project sid, provider\n;\nSapHana_LoadHistory_CL\n| where TimeGenerated {param_utilization_timerange}\n| extend cpu = CPU_d\n| extend host = HOST_s\n| extend provider = PROVIDER_INSTANCE_s\n| join kind=leftouter (table_systemoverview) on provider\n| where sid == param_sid\n| project TimeGenerated, host, cpu\n| summarize avg(cpu) by host, bin(TimeGenerated, {param_utilization_timerange:grain})\n",
                          "size": 4,
                          "aggregation": 2,
                          "showAnnotations": true,
                          "title": "CPU timeline",
                          "noDataMessage": "Please select valid filter criteria.",
                          "timeBrushParameterName": "param_utilization_timebrush",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "timechart",
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "HOST_s",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "avg_CPU_d",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "chartSettings": {
                            "xAxis": "TimeGenerated",
                            "showMetrics": false,
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 2
                                }
                              },
                              "min": 0,
                              "max": 100
                            }
                          }
                        },
                        "name": "query_small_cpu"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let param_sid = \"{param_sid}\"\n;\nlet table_systemoverview = SapHana_SystemOverview_CL \n| where TimeGenerated > ago(30d)\n| extend sid = tostring(VALUE_s)\n| extend provider = tostring(PROVIDER_INSTANCE_s)\n| where NAME_s == \"Instance ID\"\n| summarize arg_max(TimeGenerated, *) by sid\n| sort by TimeGenerated\n| project sid, provider\n;\nSapHana_LoadHistory_CL\n| where TimeGenerated {param_utilization_timebrush}\n| extend cpu = CPU_d\n| extend host = HOST_s\n| extend provider = PROVIDER_INSTANCE_s\n| join kind=leftouter (table_systemoverview) on provider\n| where sid == param_sid\n| project TimeGenerated, host, cpu\n| summarize avg(cpu) by host, bin(TimeGenerated, {param_utilization_timebrush:grain})",
                          "size": 3,
                          "aggregation": 2,
                          "title": "CPU detail",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "linechart",
                          "chartSettings": {
                            "xAxis": "TimeGenerated",
                            "group": "host",
                            "createOtherGroup": null,
                            "showLegend": true,
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 2
                                }
                              },
                              "min": 0,
                              "max": 100
                            }
                          }
                        },
                        "name": "query_large_cpu"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_utilization_type",
                    "comparison": "isEqualTo",
                    "value": "cpu"
                  },
                  "name": "group_utilization_cpu"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SapHana_LoadHistory_CL\n| where TimeGenerated {param_utilization_timerange}\n| extend memory_used = MEMORY_USED_d\n| extend memory_size = MEMORY_SIZE_d\n| extend host = HOST_s\n| extend p = columnifexists(\"PROVIDER_INSTANCE_s\", \"*\")\n| where p == \"*\" or p in ({param_utilization_provider}) or \"*\" in ({param_utilization_provider})\n| project TimeGenerated, host, memory_used, memory_size\n| summarize avg(memory_used / memory_size * 100) by host, bin(TimeGenerated, {param_utilization_timerange:grain})\n",
                          "size": 4,
                          "aggregation": 2,
                          "showAnnotations": true,
                          "title": "Memory timeline",
                          "noDataMessage": "Please select valid filter criteria.",
                          "timeBrushParameterName": "param_utilization_timebrush",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "linechart",
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "HOST_s",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "avg_CPU_d",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          },
                          "chartSettings": {
                            "xAxis": "TimeGenerated",
                            "showMetrics": false,
                            "showLegend": true,
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 2
                                }
                              },
                              "min": 0,
                              "max": 100
                            }
                          }
                        },
                        "name": "query_small_cpu"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "SapHana_LoadHistory_CL\n| where TimeGenerated {param_utilization_timebrush}\n| extend memory_used = MEMORY_USED_d\n| extend memory_size = MEMORY_SIZE_d\n| extend host = HOST_s\n| extend p = columnifexists(\"PROVIDER_INSTANCE_s\", \"*\")\n| where p == \"*\" or p in ({param_utilization_provider}) or \"*\" in ({param_utilization_provider})\n| project TimeGenerated, host, memory_used, memory_size\n| summarize avg(memory_used) by host, bin(TimeGenerated, {param_utilization_timebrush:grain})",
                          "size": 3,
                          "aggregation": 2,
                          "title": "Memory detail",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "linechart",
                          "chartSettings": {
                            "xAxis": "TimeGenerated",
                            "showLegend": true,
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 38,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 2
                                }
                              },
                              "min": 0
                            }
                          }
                        },
                        "name": "query_large_cpu"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_utilization_type",
                    "comparison": "isEqualTo",
                    "value": "memory"
                  },
                  "name": "group_utilization_memory"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "param_tab_main",
              "comparison": "isEqualTo",
              "value": "2"
            },
            "name": "group_utilization"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "loadType": "always",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "2718717f-e363-4010-8feb-1aadda6387c3",
                        "version": "KqlParameterItem/1.0",
                        "name": "param_timeframe",
                        "label": "Timeframe",
                        "type": 4,
                        "isRequired": true,
                        "value": {
                          "durationMs": 3600000
                        },
                        "typeSettings": {
                          "selectableValues": [
                            {
                              "durationMs": 300000
                            },
                            {
                              "durationMs": 900000
                            },
                            {
                              "durationMs": 1800000
                            },
                            {
                              "durationMs": 3600000
                            },
                            {
                              "durationMs": 14400000
                            },
                            {
                              "durationMs": 43200000
                            },
                            {
                              "durationMs": 86400000
                            },
                            {
                              "durationMs": 172800000
                            },
                            {
                              "durationMs": 259200000
                            },
                            {
                              "durationMs": 604800000
                            },
                            {
                              "durationMs": 1209600000
                            },
                            {
                              "durationMs": 2419200000
                            },
                            {
                              "durationMs": 2592000000
                            },
                            {
                              "durationMs": 5184000000
                            },
                            {
                              "durationMs": 7776000000
                            }
                          ],
                          "allowCustom": true
                        }
                      }
                    ],
                    "style": "pills",
                    "queryType": 8
                  },
                  "name": "section_timeframe"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let param_sid = \"{param_sid}\"\n;\nlet table_databases = SapHana_BackupCatalog_CL\n| where SYSTEM_ID_s == param_sid\n| extend backup_item = DATABASE_NAME_s\n| project backup_item\n| distinct backup_item\n| order by backup_item asc\n;\nlet table_lastbackup = SapHana_BackupCatalog_CL\n| where SYSTEM_ID_s == param_sid\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\n| join (SapHana_BackupCatalog_CL)\n    on $left.backup_id == $right.BACKUP_ID_d\n| extend state_name = STATE_NAME_s,\n         backup_time = UTC_START_TIME_t\n| project parent_database,\n          backup_id,\n          state_name,\n          backup_time\n;\nlet table_lastlogbackup = SapHana_BackupCatalog_CL\n| where SYSTEM_ID_s == param_sid\n| where ENTRY_TYPE_NAME_s == \"log backup\"\n| summarize backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\n| join (SapHana_BackupCatalog_CL)\n    on $left.backup_id == $right.BACKUP_ID_d\n| extend last_log_backup_state_name = STATE_NAME_s,\n         last_log_backup_time = UTC_START_TIME_t\n| project parent_database,\n          backup_id,\n          last_log_backup_state_name,\n          last_log_backup_time\n;\nlet table_lastsuccessfulbackup = SapHana_BackupCatalog_CL\n| where SYSTEM_ID_s == param_sid\n| where STATE_NAME_s contains \"success\"\n| where ENTRY_TYPE_NAME_s <> \"log backup\"\n| summarize last_successful_backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\n| join (SapHana_BackupCatalog_CL)\n    on $left.last_successful_backup_id == $right.BACKUP_ID_d\n| extend last_successful_backup_time = UTC_START_TIME_t\n| project parent_database,\n          last_successful_backup_id,\n          last_successful_backup_time\n;\nlet table_lastsuccessfullogbackup = SapHana_BackupCatalog_CL\n| where SYSTEM_ID_s == param_sid\n| where STATE_NAME_s contains \"success\"\n| where ENTRY_TYPE_NAME_s == \"log backup\"\n| summarize last_successful_log_backup_id = max(BACKUP_ID_d) by parent_database = DATABASE_NAME_s\n| join (SapHana_BackupCatalog_CL)\n    on $left.last_successful_log_backup_id == $right.BACKUP_ID_d\n| extend last_successful_log_backup_time = UTC_START_TIME_t\n| project parent_database,\n          last_successful_log_backup_id,\n          last_successful_log_backup_time\n;\nlet table_lastsuccessfulbackuptypestatus = SapHana_BackupCatalog_CL\n| where SYSTEM_ID_s == param_sid\n| where STATE_NAME_s contains \"success\"\n| summarize last_successful_backup_id = max(BACKUP_ID_d) by state_name = STATE_NAME_s, backup_item = ENTRY_TYPE_NAME_s, parent_database = DATABASE_NAME_s\n| join (SapHana_BackupCatalog_CL)\n    on $left.last_successful_backup_id == $right.BACKUP_ID_d\n| extend last_successful_backup_time = UTC_START_TIME_t,\n         parent_database = DATABASE_NAME_s\n| project parent_database,\n          last_successful_backup_id,\n          last_successful_backup_time,\n          backup_item\n;\nlet table_lastbackupbytypestatus = SapHana_BackupCatalog_CL\n| where SYSTEM_ID_s == param_sid\n| summarize backup_time = max(UTC_START_TIME_t), backup_id = max(BACKUP_ID_d) by backup_item = ENTRY_TYPE_NAME_s, state_name = STATE_NAME_s, parent_database = DATABASE_NAME_s\n;\nlet table_lastbackupbytype = SapHana_BackupCatalog_CL\n| where SYSTEM_ID_s == param_sid\n| summarize backup_id = max(BACKUP_ID_d) by backup_item = ENTRY_TYPE_NAME_s, parent_database = DATABASE_NAME_s\n;\nlet table_lastbackupbystatus = table_lastbackupbytype\n| join (table_lastbackupbytypestatus)\n    on $left.backup_id == $right.backup_id\n    and $left.parent_database == $right.parent_database\n;\nlet table_numberfailedbackupssummary = SapHana_BackupCatalog_CL\n| where SYSTEM_ID_s == param_sid\n| where STATE_NAME_s contains \"success\"\n| summarize Success = count(), Fail = 0, last_successful_backup_time = max(UTC_START_TIME_t) by parent_database = DATABASE_NAME_s\n| union (SapHana_BackupCatalog_CL\n| where SYSTEM_ID_s == param_sid\n| where STATE_NAME_s contains \"fail\"\n| summarize Fail = count(), last_failed_backup_time = max(UTC_START_TIME_t) by parent_database = DATABASE_NAME_s)\n| summarize Success = coalesce(max(Success), 0), Fail = max(Fail), last_successful_backup_time = max(last_successful_backup_time), last_failed_backup_time = max(last_failed_backup_time) by parent_database\n| extend percentage_successful_backups = (todouble(Success) / todouble(Success + Fail)) * 100\n| extend number_failed_backups_text = strcat(Fail, ' out of ', toint(Success + Fail))\n;\nlet table_numberfailedbackupsbytype = SapHana_BackupCatalog_CL\n| where SYSTEM_ID_s == param_sid\n| where STATE_NAME_s contains \"success\"\n| summarize Success = count(), Fail = 0, last_successful_backup_time = max(UTC_START_TIME_t) by backup_type = ENTRY_TYPE_NAME_s, parent_database = DATABASE_NAME_s\n| union (SapHana_BackupCatalog_CL\n| where SYSTEM_ID_s == param_sid\n| where STATE_NAME_s contains \"fail\"\n| summarize Fail = count(), last_failed_backup_time = max(UTC_START_TIME_t) by backup_type = ENTRY_TYPE_NAME_s, parent_database = DATABASE_NAME_s)\n| summarize Success = coalesce(max(Success), 0), Fail = max(Fail), last_successful_backup_time = max(last_successful_backup_time), last_failed_backup_time = max(last_failed_backup_time) by backup_type, parent_database\n| extend percentage_successful_backups = (todouble(Success) / todouble(Success + Fail)) * 100\n| extend number_failed_backups_text = strcat(Fail, ' out of ', toint(Success + Fail))\n;\nlet table_databasesummary = table_databases\n| join kind=leftouter (table_lastbackup)\n    on $left.backup_item == $right.parent_database\n| join kind=leftouter (table_lastlogbackup)\n    on $left.backup_item == $right.parent_database\n| join kind=leftouter (table_lastsuccessfulbackup)\n    on $left.backup_item == $right.parent_database\n| join kind=leftouter (table_lastsuccessfullogbackup)\n    on $left.backup_item == $right.parent_database\n| join (table_numberfailedbackupssummary)\n    on $left.backup_item == $right.parent_database\n| extend Id = backup_item,\n         last_status = coalesce(state_name, last_log_backup_state_name),\n         parent_database = '',\n         item_type = strcat(\"'*'\"),\n         database = backup_item,\n         no_filter = ''\n| project backup_item,\n          Id,\n          last_status,\n          number_failed_backups_text,\n          parent_database,\n          item_type,\n          database,\n          no_filter\n| order by parent_database desc\n;\nlet table_backupsummary = table_lastbackupbytypestatus\n| join (table_lastbackupbytype)\n    on $left.parent_database == $right.parent_database\n    and $left.backup_item == $right.backup_item\n    and $left.backup_id == $right.backup_id\n| join kind=leftouter (table_lastsuccessfulbackuptypestatus)\n    on $left.parent_database == $right.parent_database\n    and $left.backup_item == $right.backup_item\n| join (table_numberfailedbackupsbytype)\n    on $left.parent_database == $right.parent_database\n    and $left.backup_item == $right.backup_type\n| extend backup_item,\n         Id = strcat(parent_database, \"-\", tostring(backup_id)),\n         last_status = state_name,\n         last_status_time_minutes = toint((now() - backup_time) / 1m),\n         last_successful_backup_time_minutes = toint((now() - last_successful_backup_time) / 1m),\n         item_type = strcat(\"'\", backup_item, \"'\"),\n         database = parent_database,\n         no_filter = 'where BACKUP_ID_d > 0 //'\n| project backup_item,\n          Id,\n          last_status,\n          last_status_time_minutes,\n          last_successful_backup_time_minutes,\n          parent_database,\n          number_failed_backups_text,\n          item_type,\n          database,\n          no_filter\n| order by parent_database desc\n;\ntable_backupsummary\n| union table_databasesummary\n| order by backup_item asc\n",
                    "size": 3,
                    "title": "Backup Summary",
                    "timeContext": {
                      "durationMs": 3600000
                    },
                    "timeContextFromParameter": "param_timeframe",
                    "exportedParameters": [
                      {
                        "fieldName": "database",
                        "parameterName": "param_tenant",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "item_type",
                        "parameterName": "param_backuptype",
                        "parameterType": 1,
                        "defaultValue": ""
                      },
                      {
                        "fieldName": "no_filter",
                        "parameterName": "param_nologfilter",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Id",
                          "formatter": 5,
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        },
                        {
                          "columnMatch": "last_status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "fail",
                                "representation": "failed",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": ""
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "last_status_time_minutes",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 25,
                            "options": {
                              "style": "decimal",
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 0,
                              "maximumFractionDigits": 0
                            }
                          }
                        },
                        {
                          "columnMatch": "last_successful_backup_time_minutes",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 25,
                            "options": {
                              "style": "decimal",
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 0,
                              "maximumFractionDigits": 0
                            }
                          }
                        },
                        {
                          "columnMatch": "parent_database",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "number_failed_backups_text",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "startsWith",
                                "thresholdValue": "0",
                                "representation": "Blank",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "info",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "item_type",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "database",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "no_filter",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "LastStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "fail",
                                "representation": "failed",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": ""
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "AgeOfStatus",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 25,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 0,
                              "maximumFractionDigits": 0
                            }
                          },
                          "dateFormat": {
                            "formatName": "fullDateTimePattern"
                          }
                        },
                        {
                          "columnMatch": "AgeOfSuccessBackupTime",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 25,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "minimumIntegerDigits": 1,
                              "minimumFractionDigits": 0,
                              "maximumFractionDigits": 0
                            }
                          }
                        },
                        {
                          "columnMatch": "ParentDatabase",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "NumberFailedBackups",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "startsWith",
                                "thresholdValue": "0",
                                "representation": "Blank",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "1",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ItemType",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Database",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "NoFilter",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "idColumn": "Id",
                        "parentColumn": "parent_database",
                        "treeType": 0,
                        "expanderColumn": "backup_item"
                      },
                      "labelSettings": [
                        {
                          "columnId": "backup_item",
                          "label": "Backup item"
                        },
                        {
                          "columnId": "Id"
                        },
                        {
                          "columnId": "last_status",
                          "label": "Backup status"
                        },
                        {
                          "columnId": "last_status_time_minutes",
                          "label": "Backup age"
                        },
                        {
                          "columnId": "last_successful_backup_time_minutes",
                          "label": "Age of previous successful backup"
                        },
                        {
                          "columnId": "parent_database"
                        },
                        {
                          "columnId": "number_failed_backups_text",
                          "label": "Number of failed backups"
                        },
                        {
                          "columnId": "item_type"
                        },
                        {
                          "columnId": "database"
                        },
                        {
                          "columnId": "no_filter"
                        }
                      ]
                    }
                  },
                  "name": "query_backup_summary"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "566206fe-4f80-495c-b48b-45b345a89862",
                        "version": "KqlParameterItem/1.0",
                        "name": "param_backuptype_filter",
                        "label": "Show Log Backups",
                        "type": 10,
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "typeSettings": {
                          "additionalResourceOptions": []
                        },
                        "jsonData": "[\n    { \"value\": \"where ENTRY_TYPE_NAME_s <> \\\"\\\"\", \"label\": \"True\", \"selected\": true },\n    { \"value\": \"where ENTRY_TYPE_NAME_s <> \\\"log backup\\\"\", \"label\":\"False\" }\n]",
                        "timeContext": {
                          "durationMs": 43200000
                        },
                        "timeContextFromParameter": "param_timeframe"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "param_tenant",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "param_backuptype",
                      "comparison": "isEqualTo",
                      "value": "'*'"
                    }
                  ],
                  "name": "catalog_filter_params_logs"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "cf986647-1e6f-4863-8f66-d5b64889bcdd",
                        "version": "KqlParameterItem/1.0",
                        "name": "param_backupstate",
                        "label": "Backup State",
                        "type": 10,
                        "isRequired": true,
                        "query": "{\"version\":\"1.0.0\",\"content\":\"[\\n    { \\\"value\\\": \\\"'success','fail','successful','failed'\\\", \\\"label\\\": \\\"All\\\", \\\"selected\\\": true },\\n    { \\\"value\\\": \\\"'success','successful'\\\", \\\"label\\\":\\\"Successful\\\" },\\n    { \\\"value\\\": \\\"'fail','failed'\\\", \\\"label\\\":\\\"Failed\\\" }\\n]\",\"transformers\":null}",
                        "typeSettings": {
                          "additionalResourceOptions": []
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 8
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "0",
                  "conditionalVisibility": {
                    "parameterName": "param_tenant",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "catalog_filter_params_state"
                },
                {
                  "type": 1,
                  "content": {
                    "json": ""
                  },
                  "name": "buffer"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let param_sid = \"{param_sid}\"\n;\nlet param_tenant = \"{param_tenant}\"\n;\nlet nodata = datatable(end_time_utc:datetime,backup_type:string,database:string,backup_size_bytes:real,backup_duration_seconds:real,backup_id:real)\n[\n'1970-01-01 00:00:00',\"N\\\\A\",\"N\\\\A\",0,0,0,\n];\nSapHana_BackupCatalog_CL\n| where SYSTEM_ID_s == param_sid\n| where DATABASE_NAME_s == param_tenant\n| where ENTRY_TYPE_NAME_s in ({param_backuptype}) or '*' in ({param_backuptype})\n| {param_nologfilter} {param_backuptype_filter}\n| where STATE_NAME_s in ({param_backupstate}) or '*' in ({param_backupstate})\n| extend end_time_utc = UTC_END_TIME_t,\n         backup_type = ENTRY_TYPE_NAME_s,\n         database = DATABASE_NAME_s,\n         backup_size_bytes = BACKUP_SIZE_BYTES_d,\n         backup_duration_seconds = TIME_ELAPSED_SECONDS_d,\n         backup_id = BACKUP_ID_d\n| project end_time_utc, backup_type, database, backup_size_bytes, backup_duration_seconds, backup_id\n| distinct *\n| union isfuzzy=true nodata | where database <> \"N\\\\A\"",
                    "size": 0,
                    "title": "Backup Size",
                    "timeContext": {
                      "durationMs": 3600000
                    },
                    "timeContextFromParameter": "param_timeframe",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "categoricalbar",
                    "chartSettings": {
                      "xAxis": "end_time_utc",
                      "yAxis": [
                        "backup_size_bytes"
                      ],
                      "group": "backup_type",
                      "createOtherGroup": null,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "log backup",
                          "color": "blue"
                        }
                      ],
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 36,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "param_tenant",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "param_backuptype",
                      "comparison": "isNotEqualTo",
                      "value": "'data snapshot'"
                    }
                  ],
                  "showPin": false,
                  "name": "query_backup_size",
                  "styleSettings": {
                    "margin": "2%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let param_sid = \"{param_sid}\"\n;\nlet param_tenant = \"{param_tenant}\"\n;\nlet nodata = datatable(end_time_utc:datetime,backup_type:string,database:string,backup_size_bytes:real,backup_duration_seconds:real,backup_id:real)\n[\n'1970-01-01 00:00:00',\"N\\\\A\",\"N\\\\A\",0,0,0,\n];\nSapHana_BackupCatalog_CL\n| where SYSTEM_ID_s == param_sid\n| where DATABASE_NAME_s == param_tenant\n| where ENTRY_TYPE_NAME_s in ({param_backuptype}) or '*' in ({param_backuptype})\n| {param_nologfilter} {param_backuptype_filter}\n| where STATE_NAME_s in ({param_backupstate}) or '*' in ({param_backupstate})\n| extend end_time_utc = UTC_END_TIME_t,\n         backup_type = ENTRY_TYPE_NAME_s,\n         database = DATABASE_NAME_s,\n         backup_size_bytes = BACKUP_SIZE_BYTES_d,\n         backup_duration_seconds = TIME_ELAPSED_SECONDS_d,\n         backup_id = BACKUP_ID_d\n| project end_time_utc, backup_type, database, backup_size_bytes, backup_duration_seconds, backup_id\n| distinct *\n| union isfuzzy=true nodata | where database <> \"N\\\\A\"",
                    "size": 0,
                    "aggregation": 3,
                    "title": "Backup Duration",
                    "timeContext": {
                      "durationMs": 3600000
                    },
                    "timeContextFromParameter": "param_timeframe",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "categoricalbar",
                    "chartSettings": {
                      "xAxis": "end_time_utc",
                      "yAxis": [
                        "backup_duration_seconds"
                      ],
                      "group": "backup_type",
                      "createOtherGroup": null,
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 24,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "param_tenant",
                    "comparison": "isNotEqualTo"
                  },
                  "showPin": false,
                  "name": "query_backup_duration",
                  "styleSettings": {
                    "margin": "2%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let param_sid = \"{param_sid}\"\n;\nlet param_tenant = \"{param_tenant}\"\n;\nSapHana_BackupCatalog_CL\n| where SYSTEM_ID_s == param_sid \n| where UTC_END_TIME_t {param_timeframe}\n| where DATABASE_NAME_s == param_tenant\n| where STATE_NAME_s in ({param_backupstate}) or '*' in ({param_backupstate})\n| where ENTRY_TYPE_NAME_s in ({param_backuptype}) or '*' in ({param_backuptype})\n| {param_nologfilter} {param_backuptype_filter}\n| extend\n  status = case(STATE_NAME_s == \"successful\", \"success\", STATE_NAME_s == \"failed\", \"fail\", STATE_NAME_s),\n  backup_type=ENTRY_TYPE_NAME_s,\n  database=DATABASE_NAME_s,\n  start_time_utc=UTC_START_TIME_t,\n  end_time_utc=UTC_END_TIME_t,\n  duration_hms = format_timespan(TIME_ELAPSED_SECONDS_d * 1s,'hh:mm:ss'),\n  backup_size_bytes = BACKUP_SIZE_BYTES_d,\n  backup_rate_kbps = BACKUP_RATE_KBYTES_PER_SECOND_d,\n  message = Message,\n  comment = COMMENT_s,\n  backup_id = BACKUP_ID_d,\n  number_of_files = NUMBER_OF_FILES_d\n| project status, backup_type, database, start_time_utc, end_time_utc, duration_hms, backup_size_bytes, backup_rate_kbps, message, comment, backup_id, number_of_files\n| distinct *\n| order by end_time_utc desc",
                    "size": 0,
                    "title": "Backup Catalog",
                    "timeContext": {
                      "durationMs": 3600000
                    },
                    "timeContextFromParameter": "param_timeframe",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "fail",
                                "representation": "failed",
                                "text": "Fail"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "Success"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "backup_type",
                          "formatter": 1,
                          "formatOptions": {
                            "linkTarget": "GenericDetails",
                            "linkIsContextBlade": true
                          }
                        },
                        {
                          "columnMatch": "database",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "start_time_utc",
                          "formatter": 6,
                          "dateFormat": {
                            "showUtcTime": null,
                            "formatName": "shortDateTimePattern"
                          }
                        },
                        {
                          "columnMatch": "end_time_utc",
                          "formatter": 6,
                          "dateFormat": {
                            "showUtcTime": null,
                            "formatName": "shortDateTimePattern"
                          }
                        },
                        {
                          "columnMatch": "duration_hms",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "backup_size_bytes",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 36,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false,
                              "maximumFractionDigits": 2
                            },
                            "emptyValCustomText": "No data for this backup type"
                          }
                        },
                        {
                          "columnMatch": "backup_rate_kbps",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 46,
                            "options": {
                              "style": "decimal",
                              "maximumFractionDigits": 2
                            },
                            "emptyValCustomText": "No data for this backup type"
                          }
                        },
                        {
                          "columnMatch": "message",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "comment",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "backup_id",
                          "formatter": 1,
                          "formatOptions": {
                            "linkTarget": "GenericDetails",
                            "linkIsContextBlade": true
                          }
                        },
                        {
                          "columnMatch": "number_of_files",
                          "formatter": 1,
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "fail",
                                "representation": "failed",
                                "text": "Fail"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "Success"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "ENTRY_TYPE_NAME_s",
                          "formatter": 1,
                          "formatOptions": {
                            "linkTarget": "GenericDetails",
                            "linkIsContextBlade": true
                          }
                        },
                        {
                          "columnMatch": "UTC_START_TIME_t",
                          "formatter": 6,
                          "dateFormat": {
                            "showUtcTime": null,
                            "formatName": "shortDateTimePattern"
                          }
                        },
                        {
                          "columnMatch": "UTC_END_TIME_t",
                          "formatter": 6,
                          "dateFormat": {
                            "showUtcTime": null,
                            "formatName": "shortDateTimePattern"
                          }
                        },
                        {
                          "columnMatch": "Duration",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "BACKUP_SIZE_BYTES_d",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 2,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        },
                        {
                          "columnMatch": "BACKUP_RATE_KBYTES_PER_SECOND_d",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "gray"
                          },
                          "numberFormat": {
                            "unit": 12,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "BACKUP_ID_d",
                          "formatter": 1,
                          "formatOptions": {
                            "linkTarget": "GenericDetails",
                            "linkIsContextBlade": true
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        },
                        {
                          "columnMatch": "TIME_ELAPSED_SECONDS_d",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          },
                          "numberFormat": {
                            "unit": 24,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        }
                      ],
                      "rowLimit": 2500,
                      "labelSettings": [
                        {
                          "columnId": "status",
                          "label": "Status"
                        },
                        {
                          "columnId": "backup_type",
                          "label": "Backup type"
                        },
                        {
                          "columnId": "database",
                          "label": "Database"
                        },
                        {
                          "columnId": "start_time_utc",
                          "label": "Start time"
                        },
                        {
                          "columnId": "end_time_utc",
                          "label": "End time"
                        },
                        {
                          "columnId": "duration_hms",
                          "label": "Duration"
                        },
                        {
                          "columnId": "backup_size_bytes",
                          "label": "Backup size"
                        },
                        {
                          "columnId": "backup_rate_kbps",
                          "label": "Rate"
                        },
                        {
                          "columnId": "message",
                          "label": "Message"
                        },
                        {
                          "columnId": "comment",
                          "label": "Comment"
                        },
                        {
                          "columnId": "backup_id",
                          "label": "Backup ID"
                        },
                        {
                          "columnId": "number_of_files",
                          "label": "Number of files"
                        }
                      ]
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "type",
                        "formatter": 1,
                        "formatOptions": {}
                      },
                      "subtitleContent": {
                        "columnMatch": "host",
                        "formatter": 1,
                        "formatOptions": {}
                      },
                      "leftContent": {
                        "columnMatch": "value",
                        "formatter": 12,
                        "formatOptions": {
                          "min": 0,
                          "max": 100,
                          "palette": "greenRed"
                        },
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "minimumFractionDigits": 1,
                            "maximumFractionDigits": 1
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "timeseries",
                        "formatter": 21,
                        "formatOptions": {
                          "min": 0,
                          "max": 100,
                          "palette": "blue"
                        }
                      },
                      "showBorder": true
                    }
                  },
                  "conditionalVisibility": {
                    "parameterName": "param_tenant",
                    "comparison": "isNotEqualTo"
                  },
                  "showPin": false,
                  "name": "query_backup_catalog"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "param_tab_main",
                "comparison": "isEqualTo",
                "value": "3"
              },
              {
                "parameterName": "param_sid",
                "comparison": "isNotEqualTo",
                "value": "*"
              }
            ],
            "name": "group_backup"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "param_sid",
        "comparison": "isNotEqualTo",
        "value": "*"
      },
      "name": "group_details"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
