{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "## Azure Monitor for SAP Solutions on SAP NetWeaver\n---"
      },
      "name": "text - 2"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "810c5c3b-c12c-4ecc-a875-a7135a34af90",
            "cellValue": "selectedMenu",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "CurrentStatus",
            "style": "link"
          },
          {
            "id": "bd309ce8-c389-493f-961f-6fc4cfd718dd",
            "cellValue": "selectedMenu",
            "linkTarget": "parameter",
            "linkLabel": "Availability",
            "subTarget": "Availability",
            "style": "link"
          },
          {
            "id": "e844d4f7-2017-4360-824f-4ac26e8a941d",
            "cellValue": "selectedMenu",
            "linkTarget": "parameter",
            "linkLabel": "Performance",
            "subTarget": "Performance",
            "style": "link"
          },
          {
            "id": "718a2865-1736-41f9-91fe-b0084ecd795d",
            "cellValue": "selectedMenu",
            "linkTarget": "parameter",
            "linkLabel": "Queue Statistics",
            "subTarget": "QueueStatistics",
            "style": "link"
          }
        ]
      },
      "name": "MainNavigationLinks"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "loadType": "always",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let extractColumn = dynamic(['UTC Timestamp', 'Server Timestamp']);\r\nSapNetweaver_GetSystemInstanceList_CL\r\n| summarize ['UTC Timestamp'] = max(timestamp_t), ['Server Timestamp'] = max(serverTimestamp_t)\r\n| project properties = pack_all()\r\n| mv-apply name = extractColumn to typeof(string) on \r\n(\r\n    project name, value=properties[name]\r\n)\r\n| project-away properties",
              "size": 3,
              "title": "Current Status Updated at",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "value",
                  "formatter": 6
                },
                "subtitleContent": {
                  "columnMatch": "name",
                  "formatter": 1
                },
                "showBorder": false,
                "size": "auto"
              }
            },
            "name": "OverviewStatusDate"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "d18c71f4-04b3-4042-b8fb-b5cf3889cad1",
                  "cellValue": "valueSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "By SID",
                  "subTarget": "BySID",
                  "style": "link"
                },
                {
                  "id": "fdff6bdb-cbf1-4d88-a956-040063eb0a69",
                  "cellValue": "valueSubTab",
                  "linkTarget": "parameter",
                  "linkLabel": "By Application Server",
                  "subTarget": "ByApplicationServer",
                  "style": "link"
                }
              ]
            },
            "name": "OverviewNavigationLinks"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t > ago(14d)\r\n| project dispstatus_s, SID_s, serverTimestamp_t\r\n| extend Status = iff(dispstatus_s == 'SAPControl-GREEN', \"Running\", \"\")\r\n| extend Status = iff(dispstatus_s == 'SAPControl-YELLOW', \"Not Running or Stuck\", Status)\r\n| extend Status = iff(dispstatus_s == 'SAPControl-RED', \"Service could not be started\", Status)\r\n| extend Status = iff(dispstatus_s == 'SAPControl-GRAY', \"Not Running\", Status)\r\n| summarize arg_max(serverTimestamp_t, *) by SID_s\r\n| extend Status = iff(serverTimestamp_t > ago(5m), Status, \"Status Updated 5 mins earlier\")",
                    "size": 0,
                    "title": "SAP NetWeaver Availability Status by SID.",
                    "exportFieldName": "SID_s",
                    "exportParameterName": "selectedSID",
                    "exportDefaultValue": "*",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "graph",
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "SID_s",
                        "formatter": 1,
                        "tooltipFormat": {
                          "tooltip": "[\"Status\"]"
                        }
                      },
                      "nodeIdField": "SID_s",
                      "graphOrientation": 3,
                      "showOrientationToggles": false,
                      "nodeSize": null,
                      "staticNodeSize": 70,
                      "colorSettings": {
                        "nodeColorField": "Status",
                        "type": 3,
                        "thresholdsGrid": [
                          {
                            "operator": "==",
                            "thresholdValue": "Running",
                            "representation": "green"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Not Running or Stuck",
                            "representation": "yellow"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Service could not be started",
                            "representation": "red"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Not Running",
                            "representation": "gray"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Status Updated 5 mins earlier",
                            "representation": "grayBlue"
                          },
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "blue"
                          }
                        ]
                      },
                      "hivesMargin": 5
                    }
                  },
                  "customWidth": "81.6",
                  "name": "CurrentStatusBySID",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t{ \\\"Status\\\": \\\"Running\\\", \\\"Color\\\": 0 },\\r\\n\\t{ \\\"Status\\\": \\\"Not Running or Stuck\\\", \\\"Color\\\": 1 },\\r\\n\\t{ \\\"Status\\\": \\\"Service could not be started\\\", \\\"Color\\\": 2 },\\r\\n\\t{ \\\"Status\\\": \\\"Not Running\\\", \\\"Color\\\": 3 },\\r\\n\\t{ \\\"Status\\\": \\\"Status Updated 5 mins earlier\\\", \\\"Color\\\": 4 }\\r\\n\\r\\n]\",\"transformers\":null}",
                    "size": 0,
                    "queryType": 8,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Status",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "25.5ch"
                          }
                        },
                        {
                          "columnMatch": "Color",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": ""
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "1",
                                "representation": "yellow",
                                "text": ""
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "2",
                                "representation": "red",
                                "text": ""
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "3",
                                "representation": "gray",
                                "text": ""
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "4",
                                "representation": "lightBlue",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "grayBlue",
                                "text": ""
                              }
                            ],
                            "customColumnWidthSetting": "9.7ch"
                          }
                        }
                      ]
                    }
                  },
                  "customWidth": "18.4",
                  "name": "SIDLegend"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t > ago(15m)\r\n| where SID_s == '{selectedSID}' or '*' == '{selectedSID}'\r\n| project-away hostname_s, instanceNr_d\r\n| extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 0, iff(dispstatus_s == 'SAPControl-YELLOW', 1, iff(dispstatus_s == 'SAPControl-RED', 2, 3)))\r\n| summarize availability=countif(Status == 0), total=count() by SID_s, timestamp_t\r\n| extend availabilityPct = (availability / total) * 100\r\n| summarize availability=sum(availability), total=sum(total), availabilityTrend=make_list(availabilityPct) by SID_s\r\n| extend availability = round(toreal(availability) / toreal(total) * 100, 3)\r\n| project-away total",
                    "size": 0,
                    "title": "Availability Status",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SID_s",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "availability",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "blueDark",
                            "aggregation": "Unique",
                            "customColumnWidthSetting": "15%"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "availabilityTrend",
                          "formatter": 9,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "redGreen",
                            "customColumnWidthSetting": "75%"
                          },
                          "tooltipFormat": {
                            "tooltip": "[\"availability\"]"
                          }
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "SID_s",
                          "label": "SAP System"
                        },
                        {
                          "columnId": "availability",
                          "label": "Availability over 15 mins"
                        },
                        {
                          "columnId": "availabilityTrend",
                          "label": "Trend"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "name": "SIDAvailabilityPercentage"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "valueSubTab",
              "comparison": "isEqualTo",
              "value": "BySID"
            },
            "name": "sidCurrentStatus"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "1665c0a1-800a-4d7a-baf7-1e6057d1813a",
                        "version": "KqlParameterItem/1.0",
                        "name": "selectedSID",
                        "label": "SID",
                        "type": 2,
                        "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| project SID_s\r\n| distinct SID_s",
                        "value": null,
                        "typeSettings": {
                          "additionalResourceOptions": []
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 4"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t > ago(14d)\r\n| where SID_s == '{selectedSID}'\r\n| project instanceNr_d, hostname_s, serverTimestamp_t, features_s, dispstatus_s, SID_s\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend feature_label = iff(features_s has \"ABAP\", \"ABAP\", \"\")\r\n| extend feature_label = iff(features_s has \"J2EE\", \"J2EE\", feature_label)\r\n| extend feature_label = iff(features_s has \"ENQUE\", \"Enqueue Server\", feature_label)\r\n| extend Status = iff(dispstatus_s == 'SAPControl-GREEN', \"Running\", \"\")\r\n| extend Status = iff(dispstatus_s == 'SAPControl-YELLOW', \"Not Running or Stuck\", Status)\r\n| extend Status = iff(dispstatus_s == 'SAPControl-RED', \"Service could not be started\", Status)\r\n| extend Status = iff(dispstatus_s == 'SAPControl-GRAY', \"Not Running\", Status)\r\n| extend appServer = strcat( hostname_s, \"_\", instanceNr_s)\r\n| summarize arg_max(serverTimestamp_t, *) by appServer\r\n| extend Status = iff(serverTimestamp_t > ago(5m), Status, \"Status Updated 5 mins earlier\")",
                    "size": 0,
                    "title": "SAP NetWeaver Availability Status by Application Server.",
                    "noDataMessage": "Please select an SID to view status.",
                    "exportedParameters": [
                      {
                        "fieldName": "hostname_s",
                        "parameterName": "selectedHostname",
                        "parameterType": 1,
                        "defaultValue": "*"
                      },
                      {
                        "fieldName": "instanceNr_d",
                        "parameterName": "selectedInstanceNr",
                        "parameterType": 1,
                        "defaultValue": "*"
                      },
                      {
                        "fieldName": "SID_s",
                        "parameterName": "selectedSID",
                        "parameterType": 1,
                        "defaultValue": "*"
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "graph",
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "columnMatch": "SID_s",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "appServer",
                        "formatter": 1,
                        "tooltipFormat": {
                          "tooltip": "[\"Status\"]"
                        }
                      },
                      "bottomContent": {
                        "columnMatch": "feature_label"
                      },
                      "nodeIdField": "appServer",
                      "graphOrientation": 3,
                      "showOrientationToggles": false,
                      "nodeSize": null,
                      "staticNodeSize": 100,
                      "colorSettings": {
                        "nodeColorField": "Status",
                        "type": 3,
                        "thresholdsGrid": [
                          {
                            "operator": "==",
                            "thresholdValue": "Running",
                            "representation": "green"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Not Running or Stuck",
                            "representation": "yellow"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Service could not be started",
                            "representation": "red"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Not Running",
                            "representation": "gray"
                          },
                          {
                            "operator": "==",
                            "thresholdValue": "Status Updated 5 mins earlier",
                            "representation": "grayBlue"
                          },
                          {
                            "operator": "Default",
                            "thresholdValue": null,
                            "representation": "grayBlue"
                          }
                        ]
                      },
                      "hivesMargin": 5
                    }
                  },
                  "customWidth": "81.6",
                  "name": "CurrentStatusByAppServer",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n\\t{ \\\"Status\\\": \\\"Running\\\", \\\"Color\\\": 0 },\\r\\n\\t{ \\\"Status\\\": \\\"Not Running or Stuck\\\", \\\"Color\\\": 1 },\\r\\n\\t{ \\\"Status\\\": \\\"Service could not be started\\\", \\\"Color\\\": 2 },\\r\\n\\t{ \\\"Status\\\": \\\"Not Running\\\", \\\"Color\\\": 3 },\\r\\n\\t{ \\\"Status\\\": \\\"Status Updated 5 mins earlier\\\", \\\"Color\\\": 4 }\\r\\n\\r\\n]\",\"transformers\":null}",
                    "size": 0,
                    "queryType": 8,
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Status",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "25.5ch"
                          }
                        },
                        {
                          "columnMatch": "Color",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "green",
                                "text": ""
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "1",
                                "representation": "yellow",
                                "text": ""
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "2",
                                "representation": "red",
                                "text": ""
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "3",
                                "representation": "gray",
                                "text": ""
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "4",
                                "representation": "lightBlue",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "grayBlue",
                                "text": ""
                              }
                            ],
                            "customColumnWidthSetting": "9.7ch"
                          }
                        }
                      ]
                    }
                  },
                  "customWidth": "18.4",
                  "name": "AppServerStatusLegend"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SapNetweaver_GetProcessList_CL\r\n| project Instance_Process = description_s, SID_s, hostname_s, instanceNr_d, dispstatus_s, serverTimestamp_t\r\n| where serverTimestamp_t > ago(15m)\r\n| where SID_s == '{selectedSID}'\r\n| where hostname_s == '{selectedHostname}'\r\n| where instanceNr_d == '{selectedInstanceNr}'\r\n| extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 0, 1)\r\n| summarize total=count(), failureCount=countif(Status != 0) by Instance_Process, serverTimestamp_t\r\n| extend Availability = round(((toreal(total) - toreal(failureCount)) / toreal(total)) * 100, 2)\r\n| summarize Availability = avg(Availability), AvailabilityTrend = make_list(Availability) by Instance_Process",
                    "size": 1,
                    "title": "Process Availability (Last 15 mins)",
                    "noDataMessage": "No processes available for selected App Server.",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Availability",
                          "formatter": 4,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "blue",
                            "customColumnWidthSetting": "15%"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        },
                        {
                          "columnMatch": "AvailabilityTrend",
                          "formatter": 9,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "redGreen",
                            "customColumnWidthSetting": "75ch"
                          },
                          "tooltipFormat": {
                            "tooltip": "[\"Availability\"]"
                          }
                        },
                        {
                          "columnMatch": "total",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "failureCount",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Overall Availability %",
                          "formatter": 5,
                          "formatOptions": {
                            "compositeBarSettings": {
                              "labelText": "[\"failureCount\"] of [\"total\"] mins unhealthy",
                              "columnSettings": [
                                {
                                  "columnName": "AvailableProcess",
                                  "color": "green"
                                },
                                {
                                  "columnName": "failureCount",
                                  "color": "redDark"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "AvailableProcess",
                          "formatter": 5
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Instance_Process",
                          "label": "Instance Label"
                        },
                        {
                          "columnId": "AvailabilityTrend",
                          "label": "Availability Trend"
                        }
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "selectedSID",
                      "comparison": "isNotEqualTo",
                      "value": "*"
                    },
                    {
                      "parameterName": "selectedHostname",
                      "comparison": "isNotEqualTo",
                      "value": "*"
                    }
                  ],
                  "name": "ProcessAvailabilityStatus"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "valueSubTab",
              "comparison": "isEqualTo",
              "value": "ByApplicationServer"
            },
            "name": "applicationServerOverview"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedMenu",
        "comparison": "isEqualTo",
        "value": "CurrentStatus"
      },
      "name": "Overview"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "1dc67097-34d6-4ef1-b0c1-2b3b7b16a148",
                  "version": "KqlParameterItem/1.0",
                  "name": "AvailabilityTimeRange",
                  "label": "Time Range",
                  "type": 4,
                  "value": {
                    "durationMs": 1800000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      }
                    ],
                    "allowCustom": true
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "6f7246d7-6be3-463b-9a60-0e80f7e21644",
                  "version": "KqlParameterItem/1.0",
                  "name": "AvailabilitySID",
                  "label": "SID",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| distinct SID_s",
                  "value": [],
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "fdf84634-1e7a-4d02-86a9-7c200b674179",
                  "version": "KqlParameterItem/1.0",
                  "name": "AvailabilityApplicationServer",
                  "label": "Application Server",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "let sidList = dynamic([{AvailabilitySID}]);\r\nSapNetweaver_GetSystemInstanceList_CL\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| where array_length(sidList) == 0 or SID_s in (sidList)\r\n| distinct SID_s, hostname_s, instanceNr_s\r\n| project AppServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| distinct AppServer",
                  "value": [],
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "AvailabilityParameters"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let sidList = dynamic([{AvailabilitySID}]);\r\nlet appServerList = dynamic([{AvailabilityApplicationServer}]);\r\nSapNetweaver_GetSystemInstanceList_CL\r\n| where serverTimestamp_t between (todatetime({AvailabilityTimeRange:start}) .. todatetime({AvailabilityTimeRange:end}))\r\n| where array_length(sidList) == 0 or SID_s in (sidList)\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 0, iff(dispstatus_s == 'SAPControl-YELLOW', 1, iff(dispstatus_s == 'SAPControl-RED', 2, 3)))\r\n| summarize availability=countif(Status == 0), total=count() by timestamp_t, SID_s\r\n| extend availability = (availability / total) * 100\r\n| project-away total",
              "size": 0,
              "aggregation": 3,
              "title": "Availability Status Trend",
              "color": "green",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "linechart",
              "chartSettings": {
                "xAxis": "timestamp_t",
                "yAxis": [
                  "availability"
                ],
                "group": "SID_s",
                "createOtherGroup": null,
                "ySettings": {
                  "min": 0,
                  "max": 110
                }
              }
            },
            "name": "AvailabilityTrend"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let sidList = dynamic([{AvailabilitySID}]);\r\nlet appServerList = dynamic([{AvailabilityApplicationServer}]);\r\nSapNetweaver_GetProcessList_CL\r\n| project Instance_Process = description_s, SID_s, hostname_s, instanceNr_d, dispstatus_s, serverTimestamp_t\r\n| where serverTimestamp_t between (todatetime({AvailabilityTimeRange:start}) .. todatetime({AvailabilityTimeRange:end}))\r\n| where array_length(sidList) == 0 or SID_s in (sidList)\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| extend Status = iff(dispstatus_s == 'SAPControl-GREEN', 0, 1)\r\n| summarize total=count(), failureCount=countif(Status != 0) by Instance_Process, serverTimestamp_t, SID_s\r\n| extend Availability = round(((toreal(total) - toreal(failureCount)) / toreal(total)) * 100, 2)\r\n| summarize Availability = avg(Availability), AvailabilityTrend = make_list(Availability) by Instance_Process, SID_s",
              "size": 0,
              "title": "Instance Process Availability",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Instance_Process",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "10%"
                    }
                  },
                  {
                    "columnMatch": "SID_s",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Availability",
                    "formatter": 4,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "blue",
                      "customColumnWidthSetting": "15%"
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 3
                      }
                    }
                  },
                  {
                    "columnMatch": "AvailabilityTrend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "redGreen",
                      "customColumnWidthSetting": "75%"
                    },
                    "tooltipFormat": {
                      "tooltip": "[\"Availability\"]"
                    }
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "SID_s"
                  ],
                  "expandTopLevel": true
                },
                "labelSettings": [
                  {
                    "columnId": "Instance_Process",
                    "label": "Instance Process"
                  },
                  {
                    "columnId": "SID_s",
                    "label": "SID"
                  },
                  {
                    "columnId": "Availability",
                    "label": "Availability %"
                  },
                  {
                    "columnId": "AvailabilityTrend",
                    "label": "Availability Trend"
                  }
                ]
              },
              "sortBy": []
            },
            "name": "InstanceProcessAvailabilityBySID"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedMenu",
        "comparison": "isEqualTo",
        "value": "Availability"
      },
      "name": "availabilityGroup"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "4f30fd82-9e96-43f4-ab7d-92bbbd864bbc",
                  "version": "KqlParameterItem/1.0",
                  "name": "PerformanceTimeRange",
                  "label": "Time Range",
                  "type": 4,
                  "value": {
                    "durationMs": 1800000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      }
                    ],
                    "allowCustom": true
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "4282dc01-b183-45b4-aa95-183573fe66bd",
                  "version": "KqlParameterItem/1.0",
                  "name": "PerformanceSID",
                  "label": "SID",
                  "type": 2,
                  "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| distinct SID_s",
                  "value": null,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "728ca96a-6ee0-4fe1-9f60-a1c7ca8feaed",
                  "version": "KqlParameterItem/1.0",
                  "name": "PerformanceApplicationServer",
                  "label": "Application Server",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where SID_s == '{PerformanceSID}' or '{PerformanceSID}' == ''\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| distinct SID_s, hostname_s, instanceNr_s\r\n| project AppServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| distinct AppServer",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "performanceParameters"
          },
          {
            "type": 1,
            "content": {
              "json": "**Work Process Utilization**"
            },
            "name": "WorkProcessUtilizationTitle"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "e4924bd0-fdb6-4a53-abf8-94b9430363da",
                  "version": "KqlParameterItem/1.0",
                  "name": "performanceWorkProcessType",
                  "label": "Work Process Type",
                  "type": 2,
                  "query": "SapNetweaver_ABAPGetWPTable_CL\r\n| distinct Typ_s",
                  "value": "DIA",
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 4"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let appServerList = dynamic([{PerformanceApplicationServer}]);\r\nlet workProcessType = '{performanceWorkProcessType}';\r\nSapNetweaver_ABAPGetWPTable_CL\r\n| where serverTimestamp_t between (todatetime({PerformanceTimeRange:start}) .. todatetime({PerformanceTimeRange:end}))\r\n| where SID_s == '{PerformanceSID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where Typ_s == workProcessType\r\n| summarize totalWP = count(), freeWP = countif(Status_s == \"Wait\") by bin(timestamp_t, 1m), Typ_s\r\n| extend activeWP = totalWP - freeWP",
              "size": 0,
              "aggregation": 3,
              "color": "green",
              "noDataMessage": "No work processes found for the selected filter values.",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "barchart",
              "chartSettings": {
                "xAxis": "timestamp_t",
                "yAxis": [
                  "activeWP",
                  "freeWP"
                ],
                "group": null,
                "createOtherGroup": 0,
                "seriesLabelSettings": [
                  {
                    "seriesName": "activeWP",
                    "color": "red"
                  },
                  {
                    "seriesName": "freeWP",
                    "color": "blue"
                  }
                ]
              }
            },
            "name": "WorkProcessUtilizationTrend"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let appServerList = dynamic([{PerformanceApplicationServer}]);\r\nlet baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{PerformanceSID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList);\r\nlet thresholdQuery = baseQuery\r\n| where serverTimestamp_t > ago(24h)\r\n| project locks_now_d\r\n| summarize Threshold=percentile(locks_now_d, 95);\r\nbaseQuery\r\n| where serverTimestamp_t between (todatetime({PerformanceTimeRange:start}) .. todatetime({PerformanceTimeRange:end}))\r\n| extend dummy=1\r\n| join kind=inner (thresholdQuery | extend dummy=1) on dummy\r\n| project locks_now_d, Threshold, serverTimestamp_t",
              "size": 0,
              "aggregation": 3,
              "title": "Enqueue Locks",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "linechart",
              "chartSettings": {
                "xAxis": "serverTimestamp_t",
                "yAxis": [
                  "locks_now_d",
                  "Threshold"
                ],
                "seriesLabelSettings": [
                  {
                    "seriesName": "locks_now_d",
                    "label": "Number of Locks"
                  },
                  {
                    "seriesName": "locks_high_d",
                    "label": "Max Locks"
                  }
                ]
              }
            },
            "name": "EnqueueLocksTrend"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let extractColumn = dynamic(['95% Percentile', 'Median', 'Average number of locks', 'Max number of Locks', 'Configured High Locks']);\r\nlet appServerList = dynamic([{PerformanceApplicationServer}]);\r\nlet baseQuery = SapNetweaver_EnqGetStatistic_CL\r\n| where SID_s == '{PerformanceSID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList);\r\nbaseQuery\r\n| project locks_now_d, locks_max_d\r\n| summarize ['95% Percentile']=percentile(locks_now_d, 95), Median=percentile(locks_now_d, 50), ['Average number of locks']=avg(locks_now_d), ['Max number of Locks'] = max(locks_now_d), ['Configured High Locks'] = max(locks_max_d)\r\n| project properties=pack_all()\r\n| mv-apply name = extractColumn to typeof(string) on \r\n(\r\n    project name, value=properties[name]\r\n)\r\n| project-away properties",
              "size": 4,
              "title": "Enqueue Lock Statistics",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "value",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 0,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 3
                    }
                  }
                },
                "subtitleContent": {
                  "columnMatch": "name",
                  "formatter": 1
                },
                "showBorder": false
              }
            },
            "name": "EnqueueLockStatistics"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedMenu",
        "comparison": "isEqualTo",
        "value": "Performance"
      },
      "name": "performance"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "38e011a1-b22b-4aa2-b746-0d49a6f5a0c7",
                  "version": "KqlParameterItem/1.0",
                  "name": "PerformanceTimeRange",
                  "label": "Time Range",
                  "type": 4,
                  "value": {
                    "durationMs": 1800000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      }
                    ],
                    "allowCustom": true
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "f2ca0cf2-96ec-42a2-bde1-72f142b0bf6b",
                  "version": "KqlParameterItem/1.0",
                  "name": "PerformanceSID",
                  "label": "SID",
                  "type": 2,
                  "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| distinct SID_s",
                  "value": "MSX",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "f9327d05-2237-4e28-a2cf-3efc57d3e80a",
                  "version": "KqlParameterItem/1.0",
                  "name": "PerformanceApplicationServer",
                  "label": "Application Server",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "SapNetweaver_GetSystemInstanceList_CL\r\n| where SID_s == '{PerformanceSID}' or '{PerformanceSID}' == ''\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| distinct SID_s, hostname_s, instanceNr_s\r\n| project AppServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| distinct AppServer",
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "queueStatisticsParameters"
          },
          {
            "type": 1,
            "content": {
              "json": "**Queue Utilization Statistics**"
            },
            "name": "queueStatisticsTitle - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let appServerList = dynamic([{PerformanceApplicationServer}]);\r\nlet baseQuery = SapNetweaver_GetQueueStatistic_CL\r\n| where serverTimestamp_t between (todatetime({PerformanceTimeRange:start}) .. todatetime({PerformanceTimeRange:end}))\r\n| where SID_s == '{PerformanceSID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where Typ_s == 'ABAP/UPD'\r\n| project Now_d, High_d, serverTimestamp_t\r\n| extend Utilization = iff(High_d != 0, round(toreal(Now_d) / toreal(High_d), 3) * 100, 0.0)\r\n| extend UtilizationGroup = iff(Utilization <= 20, \"< 20%\", \"\")\r\n| extend UtilizationGroup = iff(Utilization > 20 and Utilization <= 40, \"21-40%\", UtilizationGroup)\r\n| extend UtilizationGroup = iff(Utilization > 40 and Utilization <= 60, \"41-60%\", UtilizationGroup)\r\n| extend UtilizationGroup = iff(Utilization > 60 and Utilization <= 80, \"61-80%\", UtilizationGroup)\r\n| extend UtilizationGroup = iff(Utilization > 80, \">81%\", UtilizationGroup)\r\n| summarize Count = count() by UtilizationGroup;\r\nlet total = baseQuery\r\n| summarize Total=sum(Count);\r\nbaseQuery\r\n| extend dummy=1\r\n| join kind=inner (total | extend dummy=1) on dummy\r\n| extend QueueUtilization = Count\r\n| project QueueUtilization, UtilizationGroup",
              "size": 0,
              "title": "Update Queue (UPD)",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart",
              "chartSettings": {
                "yAxis": [
                  "QueueUtilization"
                ],
                "group": "UtilizationGroup",
                "createOtherGroup": null,
                "showMetrics": false,
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "< 20%",
                    "label": "",
                    "color": "turquoise"
                  },
                  {
                    "seriesName": "61-80%",
                    "color": "orange"
                  },
                  {
                    "seriesName": "41-60%",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "21-40%",
                    "color": "purpleDark"
                  },
                  {
                    "seriesName": ">81%",
                    "color": "green"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "UpdateQueuePieChart"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let appServerList = dynamic([{PerformanceApplicationServer}]);\r\nlet baseQuery = SapNetweaver_GetQueueStatistic_CL\r\n| where serverTimestamp_t between (todatetime({PerformanceTimeRange:start}) .. todatetime({PerformanceTimeRange:end}))\r\n| where SID_s == '{PerformanceSID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where Typ_s == 'ABAP/DIA'\r\n| project Now_d, High_d, serverTimestamp_t\r\n| extend Utilization = iff(High_d != 0, round(toreal(Now_d) / toreal(High_d), 3) * 100, 0.0)\r\n| extend UtilizationGroup = iff(Utilization <= 20, \"< 20%\", \"\")\r\n| extend UtilizationGroup = iff(Utilization > 20 and Utilization <= 40, \"21-40%\", UtilizationGroup)\r\n| extend UtilizationGroup = iff(Utilization > 40 and Utilization <= 60, \"41-60%\", UtilizationGroup)\r\n| extend UtilizationGroup = iff(Utilization > 60 and Utilization <= 80, \"61-80%\", UtilizationGroup)\r\n| extend UtilizationGroup = iff(Utilization > 80, \">81%\", UtilizationGroup)\r\n| summarize Count = count() by UtilizationGroup;\r\nlet total = baseQuery\r\n| summarize Total=sum(Count);\r\nbaseQuery\r\n| extend dummy=1\r\n| join kind=inner (total | extend dummy=1) on dummy\r\n| extend QueueUtilization = Count\r\n| project QueueUtilization, UtilizationGroup",
              "size": 0,
              "title": "Dialog Queue (DIA)",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart",
              "chartSettings": {
                "yAxis": [
                  "QueueUtilization"
                ],
                "group": "UtilizationGroup",
                "createOtherGroup": null,
                "showMetrics": false,
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "< 20%",
                    "label": "",
                    "color": "turquoise"
                  },
                  {
                    "seriesName": "61-80%",
                    "color": "orange"
                  },
                  {
                    "seriesName": "41-60%",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "21-40%",
                    "color": "purpleDark"
                  },
                  {
                    "seriesName": ">81%",
                    "color": "green"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "DialogQueuePieChart"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let appServerList = dynamic([{PerformanceApplicationServer}]);\r\nlet baseQuery = SapNetweaver_GetQueueStatistic_CL\r\n| where serverTimestamp_t between (todatetime({PerformanceTimeRange:start}) .. todatetime({PerformanceTimeRange:end}))\r\n| where SID_s == '{PerformanceSID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where Typ_s == 'ABAP/ENQ'\r\n| project Now_d, High_d, serverTimestamp_t\r\n| extend Utilization = iff(High_d != 0, round(toreal(Now_d) / toreal(High_d), 3) * 100, 0.0)\r\n| extend UtilizationGroup = iff(Utilization <= 20, \"< 20%\", \"\")\r\n| extend UtilizationGroup = iff(Utilization > 20 and Utilization <= 40, \"21-40%\", UtilizationGroup)\r\n| extend UtilizationGroup = iff(Utilization > 40 and Utilization <= 60, \"41-60%\", UtilizationGroup)\r\n| extend UtilizationGroup = iff(Utilization > 60 and Utilization <= 80, \"61-80%\", UtilizationGroup)\r\n| extend UtilizationGroup = iff(Utilization > 80, \">81%\", UtilizationGroup)\r\n| summarize Count = count() by UtilizationGroup;\r\nlet total = baseQuery\r\n| summarize Total=sum(Count);\r\nbaseQuery\r\n| extend dummy=1\r\n| join kind=inner (total | extend dummy=1) on dummy\r\n| extend QueueUtilization = Count\r\n| project QueueUtilization, UtilizationGroup",
              "size": 0,
              "title": "Enqueue Queue (ENQ)",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart",
              "chartSettings": {
                "yAxis": [
                  "QueueUtilization"
                ],
                "group": "UtilizationGroup",
                "createOtherGroup": null,
                "showMetrics": false,
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "< 20%",
                    "label": "",
                    "color": "turquoise"
                  },
                  {
                    "seriesName": "61-80%",
                    "color": "orange"
                  },
                  {
                    "seriesName": "41-60%",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "21-40%",
                    "color": "purpleDark"
                  },
                  {
                    "seriesName": ">81%",
                    "color": "green"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "EnqueueQueuePieChart"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let appServerList = dynamic([{PerformanceApplicationServer}]);\r\nlet baseQuery = SapNetweaver_GetQueueStatistic_CL\r\n| where serverTimestamp_t between (todatetime({PerformanceTimeRange:start}) .. todatetime({PerformanceTimeRange:end}))\r\n| where SID_s == '{PerformanceSID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList)\r\n| where Typ_s == 'ABAP/BTC'\r\n| project Now_d, High_d, serverTimestamp_t\r\n| extend Utilization = iff(High_d != 0, round(toreal(Now_d) / toreal(High_d), 3) * 100, 0.0)\r\n| extend UtilizationGroup = iff(Utilization <= 20, \"< 20%\", \"\")\r\n| extend UtilizationGroup = iff(Utilization > 20 and Utilization <= 40, \"21-40%\", UtilizationGroup)\r\n| extend UtilizationGroup = iff(Utilization > 40 and Utilization <= 60, \"41-60%\", UtilizationGroup)\r\n| extend UtilizationGroup = iff(Utilization > 60 and Utilization <= 80, \"61-80%\", UtilizationGroup)\r\n| extend UtilizationGroup = iff(Utilization > 80, \">81%\", UtilizationGroup)\r\n| summarize Count = count() by UtilizationGroup;\r\nlet total = baseQuery\r\n| summarize Total=sum(Count);\r\nbaseQuery\r\n| extend dummy=1\r\n| join kind=inner (total | extend dummy=1) on dummy\r\n| extend QueueUtilization = Count\r\n| project QueueUtilization, UtilizationGroup",
              "size": 0,
              "title": "Batch Queue (BTC)",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart",
              "chartSettings": {
                "yAxis": [
                  "QueueUtilization"
                ],
                "group": "UtilizationGroup",
                "createOtherGroup": null,
                "showMetrics": false,
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "< 20%",
                    "label": "",
                    "color": "turquoise"
                  },
                  {
                    "seriesName": "61-80%",
                    "color": "orange"
                  },
                  {
                    "seriesName": "41-60%",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "21-40%",
                    "color": "purpleDark"
                  },
                  {
                    "seriesName": ">81%",
                    "color": "green"
                  }
                ]
              }
            },
            "customWidth": "50",
            "name": "BatchQueuePieChart"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let appServerList = dynamic([{PerformanceApplicationServer}]);\r\nlet baseQuery = SapNetweaver_GetQueueStatistic_CL\r\n| where serverTimestamp_t between (todatetime({PerformanceTimeRange:start}) .. todatetime({PerformanceTimeRange:end}))\r\n| where SID_s == '{PerformanceSID}'\r\n| extend instanceNr_s = tostring(toint(instanceNr_d))\r\n| extend instanceNr_s = iff(strlen(instanceNr_s) == 2, instanceNr_s, strcat( \"0\", instanceNr_s))\r\n| extend appServer = strcat(hostname_s, \"_\", instanceNr_s)\r\n| where array_length(appServerList) == 0 or appServer in (appServerList);\r\nlet MaxQuery = baseQuery\r\n| summarize QueueLimit=max(Max_d) by Typ_s;\r\nlet CurrentStatusQuery = baseQuery\r\n| summarize CurrentStatus = arg_max(serverTimestamp_t, Now_d) by Typ_s;\r\nbaseQuery\r\n| summarize AvgRequests = avg(Now_d), MaxRequests = max(Now_d), ReadRequest = sum(Reads_d), WriteRequest = sum(Writes_d) by Typ_s\r\n| join kind=inner MaxQuery on Typ_s\r\n| join kind=inner CurrentStatusQuery on Typ_s\r\n| extend QueueUtilization = iff(QueueLimit != 0, (toreal(Now_d) / toreal(QueueLimit)) * 100, 0.0)\r\n| extend Status = iff(QueueUtilization <= 40, \"Ok\", \"\")\r\n| extend Status = iff(QueueUtilization > 40 and QueueUtilization <= 70 , \"Warning\", Status)\r\n| extend Status = iff(QueueUtilization > 70, \"Critical\", Status)\r\n| project Typ_s, Status, AvgRequests, MaxRequests, QueueLimit, WriteRequest, ReadRequest\r\n| project-reorder Typ_s, Status, AvgRequests, MaxRequests, QueueLimit, WriteRequest, ReadRequest",
              "size": 0,
              "title": "Queue Detailed Summary",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Typ_s",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "5%"
                    }
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Ok",
                          "representation": "success",
                          "text": "{0}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Warning",
                          "representation": "2",
                          "text": "{0}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Critical",
                          "representation": "critical",
                          "text": "{0}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}"
                        }
                      ],
                      "customColumnWidthSetting": "5%"
                    }
                  },
                  {
                    "columnMatch": "AvgRequests",
                    "formatter": 2,
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "WriteRequest",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "[\"WriteRequest\"]"
                    }
                  },
                  {
                    "columnMatch": "ReadRequest",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "[\"ReadRequest\"]"
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "Typ_s",
                    "label": "Queue"
                  },
                  {
                    "columnId": "AvgRequests",
                    "label": "Average Number of Requests in queue"
                  },
                  {
                    "columnId": "MaxRequests",
                    "label": "Max Number of Requests in queue"
                  },
                  {
                    "columnId": "QueueLimit",
                    "label": "Queue Limit"
                  },
                  {
                    "columnId": "WriteRequest",
                    "label": "Number of Requests Written"
                  },
                  {
                    "columnId": "ReadRequest",
                    "label": "Number of requests read"
                  }
                ]
              },
              "sortBy": []
            },
            "name": "DetailedQueueSummary"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedMenu",
        "comparison": "isEqualTo",
        "value": "QueueStatistics"
      },
      "name": "queueStatisticsGroup"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}