{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "value::all"
        ],
        "parameters": [
          {
            "id": "af2af70b-7ea5-40a0-be60-2d87c0d17ed8",
            "version": "KqlParameterItem/1.0",
            "name": "MonitoringProfile",
            "label": "Monitoring profile",
            "type": 5,
            "isRequired": true,
            "value": null,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "0cebb139-7c97-434a-b077-07704c77c295",
            "version": "KqlParameterItem/1.0",
            "name": "Associations",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "{\"version\":\"ARMEndpoint/1.0\",\"data\":null,\"headers\":[],\"method\":\"GET\",\"path\":\"{MonitoringProfile}/associations?api-version=2019-11-01-preview\",\"urlParams\":[],\"batchDisabled\":false,\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"$.value\",\"columns\":[{\"path\":\"id\",\"columnid\":\"Id\"}]}}]}",
            "value": [
              "value::all"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "queryType": 12
          },
          {
            "id": "0a9b1be7-5981-4d35-9b5e-fd7c7f9e80ef",
            "version": "KqlParameterItem/1.0",
            "name": "Workspaces",
            "type": 5,
            "isRequired": true,
            "query": "Resources\n| where id =~ '{MonitoringProfile}'\n| project la = properties.destinations.logAnalytics\n| mvexpand la limit 400\n| project id = tostring (la.workspaceResourceId)\n| project value = id, label = id, selected = true",
            "crossComponentResources": [
              "value::all"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "0b697882-249b-4053-9807-9e654383d2a5",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 14400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ]
            }
          },
          {
            "id": "c7688036-0080-4174-94ae-51b64b5211d9",
            "version": "KqlParameterItem/1.0",
            "name": "OnboardedComputers",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\r\n| take 1\r\n| project associations = dynamic([{Associations}])\r\n| mvexpand associations limit 400\r\n| project id = tolower(extract(@'(?i)/subscriptions/.+/resourcegroups/.+/providers/microsoft.compute/virtualmachines/(.+)/providers/microsoft.insights/datacollectionruleassociations/.+', 1, tostring(associations)))\r\n| project value = id, label = id, selected = true\r\n\r\n",
            "crossComponentResources": [
              "value::all"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "594fa1c4-5b3a-463e-a729-8ac227d61c64",
            "version": "KqlParameterItem/1.0",
            "name": "SqlType",
            "type": 1,
            "isRequired": true,
            "value": "Managed Instances",
            "isHiddenWhenLocked": true
          },
          {
            "id": "65e627f5-fc41-41cf-aaf3-c1b31ba2e01d",
            "version": "KqlParameterItem/1.0",
            "name": "SqlServers",
            "label": "Sql Servers",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| where Namespace contains 'sqlserver_server_properties' and Name == 'engine_edition'\r\n| extend Tags = todynamic(Tags)\r\n| extend Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| where ('{SqlType}' == 'Azure SQL Databases' and Val == 5) or \r\n    ('{SqlType}'  == 'Managed Instances' and Val == 8) or\r\n    ('{SqlType}'  == 'SQL Server Instances' and Val in (1, 2, 3, 4))\r\n| summarize by Instance\r\n| project value = Instance, label = Instance, selected = true",
            "crossComponentResources": [
              "{Workspaces}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "customWidth": "0",
      "name": "parameters - 0",
      "styleSettings": {
        "margin": "15px 0 0 0"
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "37f0d44c-c4f4-44e6-ad23-63ddfdfe6386",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "id": "194a47d4-1f19-4a1a-b752-04a4a5ab1146",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Resource info",
            "subTarget": "Resource info",
            "style": "link"
          },
          {
            "id": "51bcef84-f9a7-4936-98cd-6f9c10412a52",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Database IO",
            "subTarget": "Database IO",
            "style": "link"
          },
          {
            "id": "fb8074f5-1109-44a3-ab3b-9c95eb768b68",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Explore metrics",
            "subTarget": "Sql counters",
            "style": "link"
          },
          {
            "id": "ebec1b4b-35ef-43a3-ac7f-981fd7871fb1",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Enable monitoring",
            "subTarget": "Enable monitoring",
            "style": "link"
          }
        ]
      },
      "name": "links - 3",
      "styleSettings": {
        "margin": "15px 0 0 0"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "Please select an existing SQL monitoring profile or create a new one using the `Create new profile` button.",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "MonitoringProfile",
              "comparison": "isEqualTo"
            },
            "name": "text - 0",
            "styleSettings": {
              "margin": "20px 0 0 0"
            }
          },
          {
            "type": 1,
            "content": {
              "json": "Looks like you don't have any monitoring virtual machines associated with this profile. Please associate one or more from the `Manage profile` tab.",
              "style": "warning"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "MonitoringProfile",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "OnboardedComputers",
                "comparison": "isEqualTo"
              }
            ],
            "name": "text - 0 - Copy",
            "styleSettings": {
              "margin": "20px 0 0 0"
            }
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "OnboardedComputers",
          "comparison": "isEqualTo",
          "value": ""
        }
      ],
      "name": "Onboarding message"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let data = InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| where Namespace contains 'sqlserver_server_properties'\r\n| extend Tags = todynamic(Tags)\r\n| extend Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| extend DatabaseKey = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| where Instance in~ ({SqlServers});\r\ndata\r\n| summarize (LastTimestamp, Val) = arg_max(TimeGenerated, Val) by Name, Database, Instance, Computer\r\n| extend Val = iff(LastTimestamp < now() - 10m and Name != 'engine_edition', 0.0, Val)\r\n| summarize CurrentOnline = sumif(Val, Name == 'db_online'),\r\n    CurrentUnhealthy = sumif(Val, Name in~ ('db_offline', 'db_recovering', 'db_recoveryPending', 'db_restoring', 'db_suspect')),\r\n    EngineEdition = sumif(Val, Name == 'engine_edition')\r\n  by Database, Instance, Computer\r\n| extend CurrentOnline = iff(EngineEdition == 5 and CurrentOnline > 0, 1.0, CurrentOnline)\r\n| extend Key = strcat(Computer, '/', Instance, '/', Database)\r\n| join kind = inner (data\r\n    | summarize OverallOnline = minif(Val, Name == 'db_online'),\r\n                OverallUnhealthy = maxif(Val, Name in~ ('db_offline', 'db_recovering', 'db_recoveryPending', 'db_restoring', 'db_suspect')),\r\n                EngineEdition = sumif(Val, Name == 'engine_edition')\r\n    by Key = strcat(Computer, '/', Instance, '/', Database)\r\n) on Key\r\n| extend CurrentOnline = iff(EngineEdition == 5 and CurrentOnline > 0, 1.0, CurrentOnline), OverallOnline = iff(EngineEdition == 5 and OverallOnline > 0, 1.0, OverallOnline)\r\n| project-away Key, Key1, EngineEdition1\r\n| extend Type = case(\r\n            EngineEdition == 1, 'SQL Server Personal',\r\n            EngineEdition == 2, 'SQL Server Standard',\r\n            EngineEdition == 3, 'SQL Server Enterprise',\r\n            EngineEdition == 4, 'SQL Server Express',\r\n            EngineEdition == 5, 'Azure SQL Database ',\r\n            EngineEdition == 6, 'Microsoft Azure Synapse Analytics',\r\n            EngineEdition == 8, 'Azure SQL Managed Instance',\r\n            EngineEdition == 9, 'Azure SQL Edge',\r\n            EngineEdition == 20, 'Azure Logical SQL Server',\r\n            '-')\r\n| project Database = strcat(Instance, '/', Database), Green = CurrentOnline, Yellow = OverallUnhealthy - CurrentUnhealthy, Red = CurrentUnhealthy, Total = OverallOnline + OverallUnhealthy, Gray =  (OverallOnline + OverallUnhealthy) - (CurrentOnline + CurrentUnhealthy), Type, Computer\r\n| summarize ['Online dbs'] = sum(Green), ['Previously unhealthy dbs'] = sum(Yellow), ['Currently unhealthy dbs'] = sum(Red), [\"No telemetry dbs\"] = sum(Gray), Total = sum(Total) by Type\r\n| extend Subtitle = '━━━'\r\n| order by ['Currently unhealthy dbs'] desc, [\"No telemetry dbs\"] desc, ['Previously unhealthy dbs'] desc, ['Online dbs'] desc\r\n",
                    "size": 4,
                    "timeContext": {
                      "durationMs": 14400000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspaces}"
                    ],
                    "visualization": "tiles",
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Type",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "Subtitle",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Green",
                        "formatter": 22,
                        "formatOptions": {
                          "compositeBarSettings": {
                            "labelText": "[\"Online dbs\"] / [\"Total\"] dbs are healthy",
                            "columnSettings": [
                              {
                                "columnName": "Online dbs",
                                "color": "green"
                              },
                              {
                                "columnName": "No telemetry dbs",
                                "color": "orange"
                              },
                              {
                                "columnName": "Previously unhealthy dbs",
                                "color": "yellow"
                              },
                              {
                                "columnName": "Currently unhealthy dbs",
                                "color": "redBright"
                              }
                            ]
                          }
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 1
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 21,
                        "formatOptions": {
                          "min": 0,
                          "palette": "blue"
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "name": "query - 0"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let data = InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| where Namespace contains 'sqlserver_server_properties'\r\n| extend Tags = todynamic(Tags)\r\n| extend Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| extend DatabaseKey = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| where Instance in~ ({SqlServers});\r\nlet results = data\r\n| summarize (LastTimestamp, Val) = arg_max(TimeGenerated, Val) by Name, Database, Instance, Computer, TenantId\r\n| extend Val = iff(LastTimestamp < now() - 10m and Name != 'engine_edition', 0.0, Val)\r\n| summarize CurrentOnline = sumif(Val, Name == 'db_online'),\r\n    CurrentUnhealthy = sumif(Val, Name in~ ('db_offline', 'db_recovering', 'db_recoveryPending', 'db_restoring', 'db_suspect')),\r\n    EngineEdition = sumif(Val, Name == 'engine_edition')\r\n  by Database, Instance, Computer, TenantId\r\n| extend CurrentOnline = iff(EngineEdition == 5 and CurrentOnline > 0, 1.0, CurrentOnline)\r\n| extend Key = strcat(Computer, '/', Instance, '/', Database)\r\n| join kind = inner (data\r\n    | summarize OverallOnline = minif(Val, Name == 'db_online'),\r\n                OverallUnhealthy = maxif(Val, Name in~ ('db_offline', 'db_recovering', 'db_recoveryPending', 'db_restoring', 'db_suspect')),\r\n                EngineEdition = sumif(Val, Name == 'engine_edition')\r\n    by Key = strcat(Computer, '/', Instance, '/', Database)\r\n) on Key\r\n| extend CurrentOnline = iff(EngineEdition == 5 and CurrentOnline > 0, 1.0, CurrentOnline), OverallOnline = iff(EngineEdition == 5 and OverallOnline > 0, 1.0, OverallOnline)\r\n;\r\nresults\r\n| where EngineEdition == 5\r\n| summarize \r\n        CurrentOnline = sum(CurrentOnline),\r\n        CurrentUnhealthy = sum(CurrentUnhealthy),\r\n        OverallUnhealthy = sum(OverallUnhealthy),\r\n        OverallOnline = sum(OverallOnline)\r\n    by Id = Instance, Parent = '', Name = Instance, key = Instance, Instance, TenantId, Database = '*'\r\n| extend EngineEdition = 20.0\r\n| union (results\r\n    | where EngineEdition == 5\r\n    | project Id = strcat(Computer, '/', Instance, '/', Database), Parent = Instance, Name = Database, CurrentOnline, CurrentUnhealthy, OverallOnline, OverallUnhealthy, EngineEdition, Computer, Instance, Database, TenantId\r\n    | extend key = Id)\r\n| union (results\r\n    | where EngineEdition != 5\r\n    | project Id = strcat(Computer, '/', Instance), Parent = '', Name = Instance, CurrentOnline, CurrentUnhealthy, OverallOnline, OverallUnhealthy, EngineEdition, Computer, key = strcat(Computer, '/', Instance, '/', Database), Instance, Database, TenantId)\r\n| join kind = inner (\r\ndata\r\n    | where Name in~ ('db_online', 'engine_edition')\r\n    | summarize Online = minif(Val, Name == 'db_online'),\r\n                EngineEdition = maxif(Val, Name == 'engine_edition')\r\n            by Database, Instance, Computer, bin(TimeGenerated, {TimeRange:grain})\r\n    | extend Online = iff(EngineEdition == 5, 1.0, Online)\r\n    | make-series Trend = min(Online) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by key = strcat(Computer, '/', Instance, '/', Database)\r\n| union (\r\ndata\r\n    | where Name in~ ('db_online', 'engine_edition')\r\n    | summarize Online = minif(Val, Name == 'db_online'),\r\n                EngineEdition = maxif(Val, Name == 'engine_edition')\r\n            by Database, Instance, Computer, bin(TimeGenerated, {TimeRange:grain})\r\n    | where EngineEdition == 5\r\n    | extend Online = iff(EngineEdition == 5, 1.0, Online)\r\n    | make-series Trend = sum(Online) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by key = Instance\r\n)\r\n) on key\r\n| extend Type = case(\r\n            EngineEdition == 1, 'SQL Server Personal',\r\n            EngineEdition == 2, 'SQL Server Standard',\r\n            EngineEdition == 3, 'SQL Server Enterprise',\r\n            EngineEdition == 4, 'SQL Server Express',\r\n            EngineEdition == 5, 'Azure SQL Database ',\r\n            EngineEdition == 6, 'Microsoft Azure Synapse Analytics',\r\n            EngineEdition == 8, 'Azure SQL Managed Instance',\r\n            EngineEdition == 9, 'Azure SQL Edge',\r\n            EngineEdition == 20, 'Azure Logical SQL Server',            '-')\r\n| project Id, Parent, Name, Status = case(CurrentUnhealthy > 0, 'Unhealthy', CurrentOnline + CurrentUnhealthy < OverallOnline + OverallUnhealthy, 'No telemetry', OverallUnhealthy - CurrentUnhealthy > 0, 'Previously unhealthy', OverallUnhealthy == 0, 'Online', ''), ['Online dbs'] = CurrentOnline, ['Previously unhealthy dbs'] = OverallUnhealthy - CurrentUnhealthy, ['Currently unhealthy dbs'] = CurrentUnhealthy, Total = OverallOnline + OverallUnhealthy, Trend, Type, Computer, DbId = strcat('/workspace/', TenantId, '/computer/', iff(Computer == '', '*', Computer), '/sqlinstance/', Instance, '/database/', Database), Title = strcat(Type, ' > ', iff(EngineEdition == 5, strcat(Instance, '/', Database), Instance)), [\"No telemetry dbs\"] =  (OverallOnline + OverallUnhealthy) - (CurrentOnline + CurrentUnhealthy)\r\n| order by ['Currently unhealthy dbs'] desc, [\"No telemetry dbs\"] desc, ['Previously unhealthy dbs'] desc, ['Online dbs'] desc, Name asc, Computer asc",
                    "size": 2,
                    "showAnalytics": true,
                    "title": "Server details",
                    "timeContext": {
                      "durationMs": 14400000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspaces}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Id",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Parent",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Name",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "WorkbookTemplate",
                            "workbookContext": {
                              "componentIdSource": "column",
                              "componentId": "Title",
                              "resourceIdsSource": "column",
                              "resourceIds": "DbId",
                              "templateIdSource": "static",
                              "templateId": "Community-Workbooks/Workloads-AMA/Azure SQL Managed Instance",
                              "typeSource": "static",
                              "type": "workbook",
                              "gallerySource": "static",
                              "gallery": "Azure Monitor",
                              "locationSource": "default"
                            }
                          }
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Unhealthy",
                                "representation": "critical",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Previously unhealthy",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Online",
                                "representation": "Blank",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "No telemetry",
                                "representation": "warning",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "unknown",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Online dbs",
                          "formatter": 22,
                          "formatOptions": {
                            "compositeBarSettings": {
                              "labelText": "[\"Online dbs\"] / [\"Total\"]",
                              "columnSettings": [
                                {
                                  "columnName": "Online dbs",
                                  "color": "green"
                                },
                                {
                                  "columnName": "No telemetry dbs",
                                  "color": "orange"
                                },
                                {
                                  "columnName": "Previously unhealthy dbs",
                                  "color": "yellow"
                                },
                                {
                                  "columnName": "Currently unhealthy dbs",
                                  "color": "redBright"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "Previously unhealthy dbs",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Currently unhealthy dbs",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Total",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Trend",
                          "formatter": 21,
                          "formatOptions": {
                            "min": 0,
                            "palette": "grayBlue"
                          }
                        },
                        {
                          "columnMatch": "DbId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Title",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "No telemetry dbs",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Server memory",
                          "formatter": 0,
                          "numberFormat": {
                            "unit": 3,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        },
                        {
                          "columnMatch": "HealthLabel",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 1000,
                      "filter": true,
                      "hierarchySettings": {
                        "idColumn": "Id",
                        "parentColumn": "Parent",
                        "treeType": 0,
                        "expanderColumn": "Name",
                        "expandTopLevel": true
                      },
                      "labelSettings": [
                        {
                          "columnId": "Id"
                        },
                        {
                          "columnId": "Parent"
                        },
                        {
                          "columnId": "Name",
                          "label": "Sql Servers"
                        },
                        {
                          "columnId": "Status"
                        },
                        {
                          "columnId": "Online dbs",
                          "label": "Online databases"
                        },
                        {
                          "columnId": "Previously unhealthy dbs",
                          "label": ""
                        },
                        {
                          "columnId": "Currently unhealthy dbs"
                        },
                        {
                          "columnId": "Total"
                        },
                        {
                          "columnId": "Trend",
                          "label": "Online database trend"
                        },
                        {
                          "columnId": "Type",
                          "label": "Database type"
                        },
                        {
                          "columnId": "Computer",
                          "label": "Monitored by"
                        },
                        {
                          "columnId": "DbId"
                        },
                        {
                          "columnId": "Title"
                        }
                      ]
                    },
                    "sortBy": [],
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Name",
                        "formatter": 1,
                        "formatOptions": {
                          "showIcon": true
                        }
                      },
                      "leftContent": {
                        "columnMatch": "Value",
                        "formatter": 12,
                        "formatOptions": {
                          "min": 0,
                          "palette": "blue",
                          "showIcon": true
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "maximumFractionDigits": 1
                          }
                        }
                      },
                      "secondaryContent": {
                        "columnMatch": "Trend",
                        "formatter": 21,
                        "formatOptions": {
                          "min": 0,
                          "palette": "blue",
                          "showIcon": true
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "showPin": true,
                  "name": "Server details"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "Overview"
              },
              {
                "parameterName": "OnboardedComputerCount",
                "comparison": "isNotEqualTo",
                "value": "0"
              }
            ],
            "name": "Overview"
          }
        ]
      },
      "conditionalVisibilities": [
        {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "Overview"
        },
        {
          "parameterName": "Workspaces",
          "comparison": "isNotEqualTo",
          "value": ""
        },
        {
          "parameterName": "OnboardedComputers",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "Overview",
      "styleSettings": {
        "margin": "15px 0 0 0"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let data = InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| extend Tags = todynamic(Tags)\r\n| extend Database = tostring(Tags.database_name), Instance = tostring(Tags.sql_instance)\r\n| extend DatabaseKey = iff(Database == Instance, Database, strcat(Database, ' on ', Instance))\r\n| where Instance in ({SqlServers}) or '*' in ({SqlServers})\r\n| where Namespace =~ 'sqlserver_azure_db_resource_stats' and Name == 'avg_cpu_percent';\r\ndata\r\n| summarize \r\n        avg_cpu_percent = avg(Val)\r\nby Instance\r\n| join kind = inner (data\r\n    | make-series Trend = avg(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Instance\r\n    | project-away TimeGenerated\r\n) on Instance \r\n| project Instance, avg_cpu_percent, Trend\r\n",
              "size": 2,
              "showAnalytics": true,
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "percent",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "max": 80,
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 2
                      }
                    }
                  },
                  {
                    "columnMatch": "Trend",
                    "formatter": 21,
                    "formatOptions": {
                      "min": 0,
                      "max": 80,
                      "palette": "blue"
                    }
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "$gen_heatmap_percent_1",
                    "sortOrder": 2
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "Instance",
                    "label": "Managed Instance"
                  },
                  {
                    "columnId": "avg_cpu_percent",
                    "label": "Cpu %"
                  },
                  {
                    "columnId": "Trend",
                    "label": "Cpu % trend"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_heatmap_percent_1",
                  "sortOrder": 2
                }
              ],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "showPin": true,
            "name": "Resource info"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Resource info"
      },
      "name": "Resource info"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Computer in~ ({OnboardedComputers})\r\n| extend Tags = todynamic(Tags)\r\n| where Namespace =~ 'sqlserver_database_io'\r\n| extend Database = tostring(Tags.database_name), SqlInstance = tostring(Tags.sql_instance), FileType = tostring(Tags.file_type)\r\n| where SqlInstance in ({SqlServers}) or '*' in ({SqlServers})\r\n| summarize (Start, StartValue) = arg_min(TimeGenerated, Val), (End, EndValue) = arg_max(TimeGenerated, Val) by Name, SqlInstance, FileType, TenantId, Computer, Database\r\n| extend Val = iff(EndValue >= StartValue, EndValue - StartValue, real(null)), DbId = strcat('/workspace/', TenantId, '/computer/', iff(Computer == '', '*', Computer), '/sqlinstance/', SqlInstance, '/database/', Database)\r\n| summarize\r\n        DataReadBytes = sumif(Val, Name == 'read_bytes' and FileType == 'ROWS'),\r\n        DataWriteBytes = sumif(Val, Name == 'write_bytes' and FileType == 'ROWS'),\r\n        DataReadLatency = avgif(Val, Name == 'read_latency_ms' and FileType == 'ROWS'),\r\n        DataWriteLatency = avgif(Val, Name == 'write_latency_ms' and FileType == 'ROWS'),\r\n        LogReadBytes = sumif(Val, Name == 'read_bytes' and FileType == 'LOG'),\r\n        LogWriteBytes = sumif(Val, Name == 'write_bytes' and FileType == 'LOG'),\r\n        LogReadLatency = avgif(Val, Name == 'read_latency_ms' and FileType == 'LOG'),\r\n        LogWriteLatency = avgif(Val, Name == 'write_latency_ms' and FileType == 'LOG')\r\n    by SqlInstance, DbId\r\n",
              "size": 2,
              "showAnalytics": true,
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "SqlInstance",
                    "formatter": 1,
                    "formatOptions": {
                      "linkColumn": "DbId",
                      "linkTarget": "WorkbookTemplate",
                      "workbookContext": {
                        "componentIdSource": "workbook",
                        "resourceIdsSource": "column",
                        "resourceIds": "DbId",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/Workloads-AMA/Azure SQL Managed Instance",
                        "typeSource": "workbook",
                        "gallerySource": "workbook",
                        "locationSource": "default"
                      }
                    }
                  },
                  {
                    "columnMatch": "DbId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "DataReadBytes|DataWriteBytes",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "DataReadLatency|DataWriteLatency",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "aggregation": "Max"
                    },
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "LogReadBytes|LogWriteBytes",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "aggregation": "Sum"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "LogReadLatency|LogWriteLatency",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "orange",
                      "aggregation": "Max"
                    },
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "Database",
                    "formatter": 5
                  }
                ],
                "rowLimit": 1000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "$gen_heatmap_DataReadBytes|DataWriteBytes_1",
                    "sortOrder": 2
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "SqlInstance"
                  },
                  {
                    "columnId": "DataReadBytes",
                    "label": "Rows read bytes"
                  },
                  {
                    "columnId": "DataWriteBytes",
                    "label": "Rows write bytes"
                  },
                  {
                    "columnId": "DataReadLatency",
                    "label": "Rows read latency"
                  },
                  {
                    "columnId": "DataWriteLatency",
                    "label": "Rows write latency"
                  },
                  {
                    "columnId": "LogReadBytes",
                    "label": "Log read bytes"
                  },
                  {
                    "columnId": "LogWriteBytes",
                    "label": "Log write bytes"
                  },
                  {
                    "columnId": "LogReadLatency",
                    "label": "Log read latency"
                  },
                  {
                    "columnId": "LogWriteLatency",
                    "label": "Log write latency"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_heatmap_DataReadBytes|DataWriteBytes_1",
                  "sortOrder": 2
                }
              ],
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "Name",
                  "formatter": 1,
                  "formatOptions": {
                    "showIcon": true
                  }
                },
                "leftContent": {
                  "columnMatch": "Value",
                  "formatter": 12,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue",
                    "showIcon": true
                  }
                },
                "showBorder": false
              }
            },
            "showPin": true,
            "name": "Database IO"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Database IO"
      },
      "name": "Database IO"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "parameters": [
                {
                  "id": "d96a773c-653b-468b-bba0-33925dabe752",
                  "version": "KqlParameterItem/1.0",
                  "name": "Metric",
                  "type": 2,
                  "isRequired": true,
                  "query": "InsightsMetrics\n| extend Tags = todynamic(Tags)\n| extend SqlInstance = tostring(Tags.sql_instance)\n| where (Computer in ({OnboardedComputers}) or '*' in ({OnboardedComputers}))  \n| where Namespace !in ('sqlserver_performance')\n| where SqlInstance in ({SqlServers})\n| summarize by Namespace, Name\n| project value = strcat('| where Namespace == \"', Namespace, '\" and Name == \"', Name, '\"'), label = Name, group = Namespace\n| order by group asc, label asc\n| extend Row = row_number()\n| project value, label, selected = Row == 1, group",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "1e8a0803-aff5-45d4-990a-29923479851b",
                  "version": "KqlParameterItem/1.0",
                  "name": "Aggregation",
                  "type": 2,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\n    { \"value\":\"avg(Val)\", \"label\":\"Average\", \"selected\":\"true\" },\n    { \"value\":\"sum(Val)\", \"label\":\"Sum\", \"selected\":\"false\" },\n    { \"value\":\"min(Val)\", \"label\":\"Minimum\", \"selected\":\"false\" },\n    { \"value\":\"max(Val)\", \"label\":\"Maximum\", \"selected\":\"false\" },\n    { \"value\":\"count()\", \"label\":\"Count\", \"selected\":\"false\" }\n]",
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                },
                {
                  "id": "9b2944ed-09fe-4e36-a535-7e89d28d8c3a",
                  "version": "KqlParameterItem/1.0",
                  "name": "SplitBy",
                  "label": "Split by",
                  "type": 2,
                  "query": "InsightsMetrics\r\n| extend Tags = todynamic(Tags)\r\n| where (Computer in ({OnboardedComputers}) or '*' in ({OnboardedComputers}))\r\n{Metric}\r\n| take 10\r\n| project Keys = bag_keys(Tags)\r\n| mvexpand Keys\r\n| summarize by label = tostring(Keys)\r\n| extend value = case(label in ('counter', 'database_name', 'instance', 'object'), strcat('by Split = strcat(Tags[\"sql_instance\"], \"/\", Tags[\"', label, '\"])'), strcat('by Split = tostring(Tags[\"', label, '\"])'))\r\n| project value, label = replace('vm.azm.ms/', '', label), selected = true",
                  "crossComponentResources": [
                    "{Workspaces}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "2e618e97-18c4-4885-b551-4b2ecdc140a5",
                  "version": "KqlParameterItem/1.0",
                  "name": "SplitByValue",
                  "type": 1,
                  "isRequired": true,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "SplitBy",
                        "operator": "isNotNull",
                        "rightValType": "param",
                        "resultValType": "param",
                        "resultVal": "SplitBy"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "//"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "TimeRange"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "Metric selectors",
            "styleSettings": {
              "margin": "15px 0 10px 0"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\n| extend Tags = todynamic(Tags)\n| where (Computer in ({OnboardedComputers}) or '*' in ({OnboardedComputers})) \n| where Tags.sql_instance in ({SqlServers}) or '*' in ({SqlServers})\n{Metric}\n| make-series Trend = {Aggregation} default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} {SplitBy}\n",
              "size": 0,
              "aggregation": 3,
              "showAnalytics": true,
              "title": "{Metric:label} trend",
              "timeContext": {
                "durationMs": 86400000
              },
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "timechart",
              "chartSettings": {
                "xSettings": {},
                "ySettings": {
                  "min": 0
                }
              }
            },
            "showPin": true,
            "name": "Metric trend"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Sql counters"
      },
      "name": "Sql counters"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/Workloads-AMA/Enable monitoring",
        "items": []
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Enable monitoring"
      },
      "name": "Enable monitoring"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}