{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Workspace}"
        ],
        "parameters": [
          {
            "id": "8106c7c6-2936-466b-a8f8-025753099f3f",
            "version": "KqlParameterItem/1.0",
            "name": "DatabaseId",
            "label": "Database id",
            "type": 5,
            "isRequired": true,
            "value": "value::1",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ]
            },
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "9b5aa274-3f45-4f77-a434-2dc936e11361",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 14400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            }
          },
          {
            "id": "911c8e40-b4d2-4597-9cf1-6d0bb7e9365c",
            "version": "KqlParameterItem/1.0",
            "name": "WorkspaceId",
            "type": 1,
            "query": "Resources\r\n| take 1\r\n| project value = extract(@'/workspace/(.+)/computer/.+/availabilityGroupId/.*', 1, '{DatabaseId}')",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "a3b74b31-45d5-4ddb-ba20-0f8aea4eba44",
            "version": "KqlParameterItem/1.0",
            "name": "Computer",
            "type": 1,
            "query": "Resources\r\n| take 1\r\n| project value = extract(@'/workspace/.+/computer/(.+)/availabilityGroupId/.*', 1, '{DatabaseId}')",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "7c1a41ad-89a0-4290-8b0c-cea32428c28a",
            "version": "KqlParameterItem/1.0",
            "name": "AvailabilityGroupId",
            "type": 1,
            "query": "Resources\r\n| take 1\r\n| project value = extract(@'/workspace/.+/computer/.+/availabilityGroupId/(.*)', 1, '{DatabaseId}')",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "0e3dc5eb-7634-4267-931d-7f1f42dcfcf8",
            "version": "KqlParameterItem/1.0",
            "name": "Workspace",
            "type": 5,
            "isRequired": true,
            "query": "Resources\r\n| where type =~ 'microsoft.operationalinsights/workspaces' and properties.customerId == '{WorkspaceId}'",
            "crossComponentResources": [
              "value::all"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "72a01604-7df5-4e7d-b8cc-73905b4c0cc9",
            "version": "KqlParameterItem/1.0",
            "name": "selectedTab",
            "type": 1,
            "isHiddenWhenLocked": true
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "Parameter block",
      "styleSettings": {
        "margin": "0 0 15px 0"
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "6a802fb2-aff0-4d4c-ac50-cff64d3722b6",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "id": "eb050e6e-9aad-4429-9e42-a5a7ab81540b",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Availability replicas",
            "subTarget": "Availability replicas",
            "style": "link"
          },
          {
            "id": "37cc57ae-a06f-4e54-b603-55fe26d5ccfa",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Database replicas",
            "subTarget": "Database replicas",
            "style": "link"
          }
        ]
      },
      "name": "Tabs"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let agData = InsightsMetrics\r\n| extend Tags = todynamic(Tags)\r\n| extend GroupId = tostring(Tags.group_id), GroupName = tostring(Tags.group_name)\r\n| extend SyncHealth = tostring(Tags.ag_synchronization_health_desc)\r\n| where Namespace == \"sqlserver_hadr_replica_states\" and Name == \"role\" and Val == 1\r\n| where Computer == '{Computer}' and GroupId == '{AvailabilityGroupId}';\r\nagData\r\n| where TimeGenerated between(ago(10m) .. now())\r\n| extend isHealthy = iff(SyncHealth == \"HEALTHY\", 1, 0)\r\n| summarize CurrentOnline = min(isHealthy), CurrentTotal = max(isHealthy) by GroupId, GroupName\r\n| join (agData\r\n    | extend isHealthy = iff(SyncHealth == \"HEALTHY\", 1, 0)\r\n    | summarize OverallOnline = min(isHealthy), OverallTotal = max(isHealthy) by GroupId, GroupName) on GroupId, GroupName\r\n| join (agData\r\n    | extend isHealthy = iff(SyncHealth == \"HEALTHY\", 1, 0)\r\n    | summarize Online = min(isHealthy) by GroupId, GroupName, Computer, bin(TimeGenerated, {TimeRange:grain})\r\n    | make-series Trend = min(Online) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} by GroupId, GroupName) on GroupId, GroupName\r\n| project GroupName, Status = case(CurrentOnline >= 1, 'Online', OverallOnline >= 1, 'Previously Online', 'Offline'), Trend",
              "size": 4,
              "title": "SQL Availability Group State",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "GroupName",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Status",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "==",
                        "thresholdValue": "Online",
                        "representation": "success",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Previously Online",
                        "representation": "2",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Offline",
                        "representation": "4",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "unknown",
                        "text": "{0}{1}"
                      }
                    ]
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue"
                  }
                },
                "showBorder": false
              }
            },
            "name": "query - 0"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Overview"
      },
      "name": "Overview group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let agData = InsightsMetrics\r\n    | extend Tags = todynamic(Tags)\r\n    | extend GroupId = tostring(Tags.group_id), GroupName = tostring(Tags.group_name)\r\n    | extend SyncHealth = tostring(Tags.ag_synchronization_health_desc)\r\n    | extend Operational = tostring(Tags.operational_state_desc)\r\n    | extend Instance = tostring(Tags.sql_instance)\r\n    | extend ReplicaName = tostring(Tags.replica_server_name)\r\n    | where Namespace == \"sqlserver_hadr_replica_states\" and Name == \"role\" and Instance == ReplicaName\r\n    | where Computer == '{Computer}' and GroupId == '{AvailabilityGroupId}';\r\nagData\r\n| where TimeGenerated between(ago(10m) .. now())\r\n| project Tags, Operational, Instance\r\n| evaluate bag_unpack(Tags)\r\n| extend IsOperational = iff(Operational == \"ONLINE\", 1, 0)\r\n| extend IsHealthy = iff(replica_synchronization_health_desc == \"HEALTHY\", 1, 0)\r\n| summarize \r\n  CurrentOperational = min(IsOperational),\r\n  CurrentHealth = min(IsHealthy) by Instance, seeding_mode_desc, availability_mode_desc, role_desc, failover_mode_desc\r\n| join kind = inner (\r\n    agData\r\n    | project Tags, Operational, Instance\r\n    | evaluate bag_unpack(Tags)\r\n    | extend IsOperational = iff(Operational == \"ONLINE\", 1, 0)\r\n    | extend IsHealthy = iff(replica_synchronization_health_desc == \"HEALTHY\", 1, 0)\r\n    | summarize \r\n        OverallOperational = min(IsOperational),\r\n        OverallHealth = min(IsHealthy) by Instance, seeding_mode_desc, AvailabilityDescription = replace(@'([A-Z]+)_([A-Z]+)$', @'\\1 \\2', availability_mode_desc), role_desc, failover_mode_desc) on Instance\r\n| join (agData\r\n    | extend isOperational = iff(Operational == \"ONLINE\", 1, 0)\r\n    | summarize Online = min(isOperational) by Computer, Instance, bin(TimeGenerated, {TimeRange:grain})\r\n    | make-series Trend = min(Online) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end}-{TimeRange:grain} step {TimeRange:grain} by Instance) on Instance\r\n| project Instance, Status = case(CurrentOperational == 1, 'Online', OverallOperational == 1, 'Previously Online', 'Offline'), Trend, role_desc, AvailabilityDescription, failover_mode_desc, seeding_mode_desc, SynchronizationState = case(CurrentHealth == 1, 'Synchronized', OverallHealth == 1, 'Previously Synchronized', 'Not Synchronized'), DbId = strcat('/workspace/', '{WorkspaceId}', '/computer/', '{Computer}', '/sqlinstance/', Instance, '/database/'), Title = strcat('SQL Server > ', Instance)\r\n| order by role_desc asc, Instance asc",
              "size": 1,
              "showAnalytics": true,
              "title": "Availability Replicas",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Instance",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "WorkbookTemplate",
                      "linkIsContextBlade": true,
                      "workbookContext": {
                        "componentIdSource": "column",
                        "componentId": "Title",
                        "resourceIdsSource": "column",
                        "resourceIds": "DbId",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/Workloads-AMA/Replica Details",
                        "typeSource": "static",
                        "type": "workbook",
                        "gallerySource": "static",
                        "gallery": "Azure Monitor",
                        "locationSource": "default"
                      }
                    }
                  },
                  {
                    "columnMatch": "Trend",
                    "formatter": 21,
                    "formatOptions": {
                      "palette": "blue"
                    }
                  },
                  {
                    "columnMatch": "DbId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Title",
                    "formatter": 5
                  }
                ],
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "Instance"
                  },
                  {
                    "columnId": "Status"
                  },
                  {
                    "columnId": "Trend",
                    "label": "Online Trend"
                  },
                  {
                    "columnId": "role_desc",
                    "label": "Role"
                  },
                  {
                    "columnId": "AvailabilityDescription",
                    "label": "Availability Mode"
                  },
                  {
                    "columnId": "failover_mode_desc",
                    "label": "Failover Mode"
                  },
                  {
                    "columnId": "seeding_mode_desc",
                    "label": "Seeding Mode"
                  },
                  {
                    "columnId": "SynchronizationState",
                    "label": "Synchronization State"
                  },
                  {
                    "columnId": "DbId"
                  },
                  {
                    "columnId": "Title"
                  }
                ]
              },
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "name",
                  "formatter": 1
                },
                "subtitleContent": {
                  "columnMatch": "Subtitle",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "EndValue",
                  "formatter": 12,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false
                    }
                  }
                },
                "rightContent": {
                  "columnMatch": "Status",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "==",
                        "thresholdValue": "Not applicable",
                        "representation": "Blank",
                        "text": ""
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Error",
                        "representation": "3",
                        "text": ""
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Warning",
                        "representation": "2",
                        "text": ""
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "Blank",
                        "text": ""
                      }
                    ]
                  },
                  "tooltipFormat": {
                    "tooltip": "Warning icon indicates that this metric is good now, but had a problem in the time window."
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 21,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue"
                  }
                },
                "showBorder": false
              }
            },
            "showPin": true,
            "name": "Availability Replicas"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Availability replicas"
      },
      "name": "Availability replicas"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let InstancesInGroupId = InsightsMetrics\r\n    | extend Tags = todynamic(Tags)\r\n    | extend GroupId = tostring(Tags.group_id), GroupName = tostring(Tags.group_name)\r\n    | extend Instance = tostring(Tags.sql_instance)\r\n    | where Namespace == \"sqlserver_hadr_replica_states\" and Name == \"role\"\r\n    | where Computer == '{Computer}' and GroupId == '{AvailabilityGroupId}'\r\n    | summarize by Instance;\r\nlet data = InsightsMetrics\r\n    | extend Tags = todynamic(Tags)\r\n    | extend Instance = tostring(Tags.sql_instance)\r\n    | where Namespace == \"sqlserver_hadr_dbreplica_states\";\r\nlet agData = data\r\n| join kind = leftsemi (InstancesInGroupId) on Instance\r\n| where Name == \"database_state\";\r\nagData\r\n| where TimeGenerated between(ago(10m) .. now())\r\n| project Tags, TenantId, Instance\r\n| evaluate bag_unpack(Tags)\r\n| where Instance == replica_server_name\r\n| extend isSync = iff(synchronization_state_desc == \"SYNCHRONIZED\", 1, 0)\r\n| extend isOnline = iff(database_state_desc == \"ONLINE\", 1, 0)\r\n| summarize CurrentSynced = min(isSync), CurrentOnline = min(isOnline) by database_name, Instance, TenantId\r\n| join kind = inner (\r\n    agData\r\n    | project Tags, TenantId, Instance\r\n    | evaluate bag_unpack(Tags)\r\n    | where Instance == replica_server_name\r\n    | extend isSync = iff(synchronization_state_desc == \"SYNCHRONIZED\", 1, 0)\r\n    | extend isOnline = iff(database_state_desc == \"ONLINE\", 1, 0)\r\n    | summarize OverallSynced = min(isSync), OverallOnline = min(isOnline) by database_name, Instance, TenantId) on Instance, database_name\r\n| project Instance, database_name, Status= case(CurrentOnline == 1, 'Online', OverallOnline == 1, 'Previously Online', 'Offline'), SynchronizationState = case(CurrentSynced == 1, 'Synchronized', OverallSynced == 1, 'Previously Synchronized', 'Not Synchronized'), DbId = strcat('/workspace/', '{WorkspaceId}', '/computer/', '{Computer}', '/sqlinstance/', Instance, '/database/', database_name), Title = strcat('SQL Server > ', Instance)\r\n| order by Instance asc",
              "size": 0,
              "showAnalytics": true,
              "noDataMessage": "The query returned no results. Ensure the query name 'SQLServerDatabaseReplicaStates' is enabled in your telegraf settings.",
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "TimeRange",
              "showRefreshButton": true,
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 1,
                    "formatOptions": {
                      "linkColumn": "DbId",
                      "linkTarget": "WorkbookTemplate",
                      "linkIsContextBlade": true,
                      "workbookContext": {
                        "componentIdSource": "column",
                        "componentId": "Title",
                        "resourceIdsSource": "column",
                        "resourceIds": "DbId",
                        "templateIdSource": "static",
                        "templateId": "Community-Workbooks/Workloads-AMA/Database Replica Details",
                        "typeSource": "workbook",
                        "gallerySource": "workbook",
                        "locationSource": "default"
                      }
                    }
                  },
                  {
                    "columnMatch": "Instance",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "database_name",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Online",
                          "representation": "Blank",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Previously Online",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Offline",
                          "representation": "4",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "unknown",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "DbId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Title",
                    "formatter": 5
                  }
                ],
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Instance"
                  ],
                  "expandTopLevel": true,
                  "finalBy": "database_name"
                },
                "labelSettings": [
                  {
                    "columnId": "database_name"
                  },
                  {
                    "columnId": "Status"
                  },
                  {
                    "columnId": "SynchronizationState"
                  }
                ]
              }
            },
            "showPin": true,
            "name": "Database Replicas"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Database replicas"
      },
      "name": "Database replicas"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}