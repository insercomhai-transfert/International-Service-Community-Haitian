{
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json",
  "version": "Notebook/1.0",
  "isLocked": true,
  "items": [
    {
      "type": 1,
      "content": {
        "json": "### Define your Cohort\r\nPlace text in the filter below to define a cohort for this blade. You can save your changes to save this cohort. The filter you supply will be respected by all charts on the page.\r\n\r\nExample cohort:\r\n\r\n| where client_City == \"Seattle\"\r\n"
      },
      "conditionalVisibility": {
        "parameterName": "DontShow",
        "comparison": "isNotEqualTo"
      },
      "name": "text - 16"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "c381a6e0-d6f5-4ede-81d1-420dac02959c",
            "version": "KqlParameterItem/1.0",
            "name": "Cohort",
            "type": 1,
            "value": "",
            "isHiddenWhenLocked": true
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "name": "parameters - 17"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "ff00e059-7ba9-4dfa-a926-8288cf30fc05",
            "version": "KqlParameterItem/1.0",
            "name": "UsersList",
            "label": "Show occurrences for ",
            "type": 2,
            "description": "A cohort filter can be set at edit mode that is a collection of users, sessions, or operations that are matched by a set of filters specified in the definition of the cohort. When a cohort is used in this report, the result will be the intersection of users, sessions, or operations matched by the cohort and users, sessions, or operations matched by the rest of the query in this report.",
            "isRequired": true,
            "query": "datatable(value:string, text:string, selected: string)[\r\n'user_Id', 'Users', 'true',\r\n'user_AuthenticatedId', 'Authenticated Users', ''\r\n]",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "0afb0089-98e9-479c-b12e-a982870ce6be",
            "version": "KqlParameterItem/1.0",
            "name": "Whoused",
            "label": "Who used",
            "type": 2,
            "description": "Choose which custom events and page views the users should have sent for this report.",
            "isRequired": true,
            "query": "datatable(value:string, text:string, selected: string)[\r\n'pageViews,customEvents', 'Any Custom Events or Page View', 'true',\r\n'customEvents','Any Custom Event', '',\r\n'pageViews','Any Page View', ''\r\n]",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "37b05d6c-ab7c-4190-94d8-4973fcf06c49",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "During",
            "type": 4,
            "description": "Choose the time range for this report.",
            "isRequired": true,
            "value": {
              "durationMs": 86400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ]
            }
          },
          {
            "id": "fd41f402-40ca-4dc5-bd29-38ec93f9d521",
            "version": "KqlParameterItem/1.0",
            "name": "UserEvent",
            "label": "Selected events",
            "type": 2,
            "description": "Choose multiple events and page views, the report will show users who did at least one of the events or page views, not necessarily all of the selected events and page views.",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "union {Whoused}\r\n    | where timestamp {TimeRange}\r\n    | project name, group = case(itemType == 'pageView', 'Page Views', 'Custom Events')\r\n    | order by group,name asc\r\n    | summarize count() by group, name\r\n    | project value=name, label=name, group, selected=''",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "8cd9003c-8e76-4d21-8b22-b7a11197f42f",
            "version": "KqlParameterItem/1.0",
            "name": "ByValue",
            "label": "By value",
            "type": 2,
            "description": "Choose a time grain or property to create x-axis for users.",
            "isRequired": true,
            "query": "let getTableSchema = (table: (*), tableName: string) { \r\n\t  table\r\n      | project  column_ifexists(\"customDimensions\",'')\r\n      | evaluate bag_unpack(column_ifexists(\"customDimensions\",''))\r\n      | getschema \r\n      | project label=ColumnName, ColumnType, TableName=tableName};\r\nlet t1 = getTableSchema(pageViews, 'pageViews');\r\nlet t2 = getTableSchema(customEvents, 'customEvents');\r\nlet t3 = getTableSchema(requests, 'requests');\r\nlet grainList = datatable(value:string, label:string, seconds:string, group: string, selected: string)[\r\n\t'3m', '3 minutes', '3600', 'Time Range', 'true',\r\n\t'1h', '1 hour', '86400', 'Time Range', 'true',\r\n\t'2h', '2 hours', '172800', 'Time Range', 'true',\r\n\t'3h', '3 hours', '259200', 'Time Range', 'true',\r\n\t'1d', '1 day', '604800', 'Time Range', 'true',\r\n\t'12h', '12 hours', '604800', 'Time Range', '',\r\n\t'1d', '1 day', '1209600', 'Time Range', 'true',\r\n\t'1d', '1 day', '2592000', 'Time Range', 'true',\r\n\t'7d', '7 days', '2592000', 'Time Range', '',\r\n\t'1d', '1 day', '5184000', 'Time Range', 'true',\r\n\t'7d', '7 days', '5184000', 'Time Range', '',\r\n\t'1d', '1 day', '7776000', 'Time Range', 'true',\r\n\t'7d', '7 days', '7776000', 'Time Range', ''\r\n\t];\r\nlet timeTable = grainList\r\n    | where seconds == '{TimeRange:seconds}'\r\n    | project value, label, group, selected;\r\nlet customDimension =  union t1, t2, t3\r\n    | where ColumnType == 'string'\r\n    | where '{Whoused}' contains TableName\r\n    | summarize count() by label\r\n    | project value = strcat(\"customDimensions[\\\"\", label,\"\\\"]\"), label, group='Custom Properties', selected=''\r\n    | order by label asc;    \r\nlet dimensionList = datatable(value:string, label:string, group: string, selected: string)[\r\n\t'application_Version', 'Application version', 'Standard Properties', '',\r\n\t'user_AuthenticatedId', 'Authenticated or anonymous traffic', 'Standard Properties', '',\r\n\t'client_Browser', 'Browser version', 'Standard Properties', '',\r\n\t'client_City', 'City', 'Standard Properties', 'true',\r\n\t'cloud_RoleInstance', 'Cloud role instance', 'Standard Properties', '',\r\n\t'cloud_RoleName', 'Cloud role name', 'Standard Properties', '',\r\n\t'client_CountryOrRegion', 'Country or region', 'Standard Properties', '',\r\n\t'client_Model', 'Device model', 'Standard Properties', '',\r\n\t'client_Type', 'Device type', 'Standard Properties', '',\r\n\t'operation_SyntheticSource', 'Is real user traffic', 'Standard Properties', '',\r\n    'name', 'Name', 'Standard Properties', '',\r\n\t'client_OS', 'Operating system', 'Standard Properties', '',\r\n\t'operation_Name', 'Operation name', 'Standard Properties', '',\r\n\t'performanceBucket', 'Performance', 'Standard Properties', '',\r\n\t'tostring(parseurl(url)[\"Host\"])', 'URL host', 'Standard Properties', '',\r\n\t'tostring(parseurl(url)[\"Path\"])', 'URL path', 'Standard Properties', '',\r\n\t'source', 'Request source', 'Standard Properties', '',\r\n\t'resultCode', 'Response code', 'Standard Properties', '',\r\n\t'operation_SyntheticSource', 'Source of synthetic traffic', 'Standard Properties', '',\r\n\t'client_CountryOrRegion', 'State or province', 'Standard Properties', '',\r\n\t'success', 'Successful request', 'Standard Properties', ''\r\n\t];\r\nunion timeTable, dimensionList, customDimension \r\n    | project value, label, group, selected\r\n",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          },
          {
            "id": "f483d60a-7ffa-4469-a3af-2b86209ddf6d",
            "version": "KqlParameterItem/1.0",
            "name": "IsTimeRange",
            "type": 1,
            "description": "Is x-axis created by Time bins or not?",
            "isRequired": true,
            "value": "true",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (ByValue regex '[1,2,3,7,12][m|h|d]'), result = 'true'",
                "criteriaContext": {
                  "leftOperand": "ByValue",
                  "operator": "regex",
                  "rightValType": "static",
                  "rightVal": "[1,2,3,7,12][m|h|d]",
                  "resultValType": "static",
                  "resultVal": "true"
                }
              },
              {
                "condition": "else result = 'false'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "false"
                }
              }
            ]
          },
          {
            "id": "f3ef9858-968c-4fb5-9d4c-b9a6078927f0",
            "version": "KqlParameterItem/1.0",
            "name": "SplitBy",
            "label": "Split by",
            "type": 2,
            "description": "Choose a property lets you segment by users.",
            "isRequired": true,
            "query": "let getTableSchema = (table: (*), tableName: string) { table\r\n            | project  column_ifexists(\"customDimensions\",'')\r\n            | evaluate bag_unpack(column_ifexists(\"customDimensions\",''))\r\n            | getschema \r\n            | project ColumnName, ColumnType, TableName=tableName };\r\n            let t1 = getTableSchema(pageViews, 'pageViews');\r\n            let t2 = getTableSchema(customEvents,'customEvents');\r\n            let t3 = getTableSchema(requests, 'requests');\r\nlet customDimension =  union t1, t2, t3\r\n            |  where ColumnType == 'string'\r\n            | where '{Whoused}' contains TableName or TableName == ''\r\n            | summarize count() by ColumnName \r\n            | project Property =strcat(\"customDimensions[\\\"\", ColumnName, \"\\\"]\"), ColumnName, group='Custom Properties'\r\n            | order by ColumnName asc;\r\nlet PropertyList = union (datatable(Property:string, ColumnName:string, group: string)[\r\n\t'application_Version', 'Application version', 'Standard Properties',\r\n\t'user_AuthenticatedId', 'Authenticated or anonymous traffic', 'Standard Properties', \r\n\t'client_Browser', 'Browser version', 'Standard Properties',\r\n\t'client_City', 'City', 'Standard Properties',\r\n\t'cloud_RoleInstance', 'Cloud role instance', 'Standard Properties',\r\n\t'cloud_RoleName', 'Cloud role name', 'Standard Properties',\r\n\t'client_CountryOrRegion', 'Country or region', 'Standard Properties',\r\n\t'client_Model', 'Device model', 'Standard Properties',\r\n\t'client_Type', 'Device type', 'Standard Properties',\r\n\t'operation_SyntheticSource', 'Is real user traffic', 'Standard Properties',\r\n        'name', 'Name', 'Standard Properties',\r\n\t'client_OS', 'Operating system', 'Standard Properties',\r\n\t'operation_Name', 'Operation name', 'Standard Properties',\r\n\t'performanceBucket', 'Performance', 'Standard Properties',\r\n\t'tostring(parseurl(url)[\"Host\"])', 'URL host', 'Standard Properties',\r\n\t'tostring(parseurl(url)[\"Path\"])', 'URL path', 'Standard Properties',\r\n\t'source', 'Request source', 'Standard Properties',\r\n\t'resultCode', 'Response code', 'Standard Properties',\r\n\t'operation_SyntheticSource', 'Source of synthetic traffic', 'Standard Properties',\r\n\t'client_CountryOrRegion', 'State or province', 'Standard Properties',\r\n\t'success', 'Successful request', 'Standard Properties'\r\n\t]), customDimension\r\n    | where '{IsTimeRange}' == 'true'\r\n    | project Property, ColumnName, group, selected ='';\r\nunion (datatable(Property:string, ColumnName:string, group: string, selected: string)[\r\n\t'<unset>', 'unset', '', 'true'\r\n\t]), PropertyList",
            "value": "<unset>",
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.insights/components"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "name": "parameters - 2"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "union {Whoused}\r\n    | where timestamp {TimeRange}\r\n    {Cohort}\r\n    | where iif('*' in ({UserEvent}), 1==1, name in ({UserEvent}))\r\n    | summarize Events = dcount(itemId)\r\n    | evaluate narrow()\r\n    | extend Value = toreal(Value)",
        "size": 3,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Column",
            "formatter": 1,
            "formatOptions": {
              "showIcon": true
            }
          },
          "leftContent": {
            "columnMatch": "Value",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "showBorder": false
        }
      },
      "name": "query - 7"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let grain = {ByValue}; \r\nunion {Whoused}\r\n    | where timestamp {TimeRange} \r\n    {Cohort}\r\n    | where iif('*' in ({UserEvent}), 1==1, name in ({UserEvent}))\r\n    | summarize Events = count() by bin(timestamp, grain)\r\n    | order by timestamp asc",
        "size": 0,
        "aggregation": 3,
        "showAnalytics": true,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "barchart",
        "chartSettings": {}
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SplitBy",
          "comparison": "isEqualTo",
          "value": "<unset>"
        },
        {
          "parameterName": "IsTimeRange",
          "comparison": "isEqualTo",
          "value": "true"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "SplitBy",
        "comparison": "isEqualTo",
        "value": "<unset>"
      },
      "showPin": true,
      "name": "query - 9"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "union {Whoused}\r\n    | where timestamp {TimeRange}\r\n    {Cohort}\r\n    | where iif('*' in ({UserEvent}), 1==1, name in ({UserEvent}))\r\n    | extend dimension = {ByValue}\r\n    | extend dimension = iif(isempty(dimension), \"<undefined>\", dimension)\r\n    | summarize Events = count() by dimension \r\n    | order by dimension asc",
        "size": 0,
        "showAnalytics": true,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "barchart"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SplitBy",
          "comparison": "isEqualTo",
          "value": "<unset>"
        },
        {
          "parameterName": "IsTimeRange",
          "comparison": "isEqualTo",
          "value": "false"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "SplitBy",
        "comparison": "isEqualTo",
        "value": "<unset>"
      },
      "showPin": true,
      "name": "query - 9"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let mainTable = union {Whoused}\r\n    | where timestamp {TimeRange}\r\n    {Cohort}\r\n    | where iif('*' in ({UserEvent}), 1==1, name in ({UserEvent}));\r\nlet cohortedTable = mainTable     \r\n    | extend dimension = {SplitBy}\r\n    | extend dimension = iif(isempty(dimension), \"<undefined>\", dimension)\r\n    | summarize events_Counts =  dcount(user_Id) by bin(timestamp,{ByValue}), dimension;\r\nlet topSegments = cohortedTable\r\n    | summarize sumByDimension = sum(events_Counts) by dimension\r\n    | project dimension, sumByDimension\r\n    | top 5 by sumByDimension desc nulls last\r\n    | summarize makelist(dimension);\r\ncohortedTable\r\n    | extend dimension = iff(dimension in (topSegments), dimension, \"Other\")",
        "size": 0,
        "aggregation": 3,
        "showAnalytics": true,
        "title": "Split by dimension (Top 5)",
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "barchart",
        "sortBy": [],
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Country",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "UsersInCohort",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "graphSettings": {
          "type": 0,
          "topContent": {
            "columnMatch": "Country",
            "formatter": 1
          },
          "centerContent": {
            "columnMatch": "UsersInCohort",
            "formatter": 1,
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        },
        "chartSettings": {
          "ySettings": {
            "unit": 17,
            "min": null,
            "max": null
          }
        },
        "mapSettings": {
          "latitude": "Country",
          "longitude": "Country",
          "sizeSettings": "UsersInCohort",
          "minSize": null,
          "maxSize": null,
          "opacity": null,
          "labelSettings": "Country",
          "legendMetric": "UsersInCohort",
          "numberOfMetrics": null,
          "legendAggregation": "Max",
          "itemColorSettings": {
            "nodeColorField": "Country",
            "type": "heatmap",
            "heatmapPalette": "redDark",
            "heatmapMin": null,
            "heatmapMax": null
          },
          "numberFormatSettings": {
            "unit": 17,
            "options": {
              "style": "decimal",
              "useGrouping": true
            }
          }
        }
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SplitBy",
          "comparison": "isNotEqualTo",
          "value": "<unset>"
        },
        {
          "parameterName": "IsTimeRange",
          "comparison": "isEqualTo",
          "value": "true"
        }
      ],
      "conditionalVisibility": {
        "parameterName": "SplitBy",
        "comparison": "isNotEqualTo",
        "value": "<unset>"
      },
      "showPin": true,
      "name": "Country",
      "styleSettings": {
        "progressStyle": "loader"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "union {Whoused}\r\n    | where timestamp {TimeRange}\r\n    {Cohort}\r\n    | where iif('*' in ({UserEvent}), 1==1, name in ({UserEvent}))\r\n    | summarize USERS = dcount(user_Id), SESSIONS = dcount(session_Id)\r\n    | evaluate narrow()\r\n    | extend Value = toreal(Value)\r\n    | project Column, Value, id = case(Column =='SESSIONS', 'community-Workbooks/UsageMetrics/Usage - Sessions', 'community-Workbooks/UsageMetrics/Usage - Users')",
        "size": 3,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "Column",
            "formatter": 1,
            "formatOptions": {
              "linkColumn": "id",
              "linkTarget": "WorkbookTemplate",
              "showIcon": true,
              "workbookContext": null
            }
          },
          "leftContent": {
            "columnMatch": "Value",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto",
              "showIcon": true,
              "workbookContext": null
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "useGrouping": false,
                "maximumFractionDigits": 2,
                "maximumSignificantDigits": 3
              }
            }
          },
          "showBorder": true
        }
      },
      "name": "query - 8"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let mainTable  = union {Whoused}\r\n        | where timestamp {TimeRange}\r\n        {Cohort}\r\n        | where iif('*' in ({UserEvent}), 1==1, name in ({UserEvent}));\r\nlet cohortedTable = mainTable        \r\n        | extend dimension = client_CountryOrRegion\r\n        | extend dimension = iif(isempty(dimension), \"<undefined>\", dimension)\r\n        | summarize hll = hll(itemId) by dimension\r\n        | extend Users = dcount_hll(hll)\r\n        | order by Users desc\r\n        | serialize rank = row_number()\r\n        | extend dimension = iff(rank > 5, 'Other', dimension)\r\n        | summarize merged = hll_merge(hll) by dimension\r\n        | project [\"Country or region\"] = dimension, Counts = dcount_hll(merged)\r\n        | order by Counts desc;\r\n        cohortedTable\r\n        ",
        "size": 3,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Country or region",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Counts",
              "formatter": 4,
              "formatOptions": {
                "palette": "turquoise",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 2
                }
              }
            }
          ]
        }
      },
      "customWidth": "33",
      "name": "query - 4"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let mainTable  = union {Whoused}\r\n        | where timestamp {TimeRange}\r\n        {Cohort}\r\n        | where iif('*' in ({UserEvent}), 1==1, name in ({UserEvent}));\r\nlet cohortedTable = mainTable  \r\n        | extend  dimension = client_OS\r\n        | extend OS = iif(isempty(dimension) , \"<undefined>\", dimension)\r\n        | summarize hll = hll(itemId) by dimension\r\n        | extend Users = dcount_hll(hll)\r\n        | order by Users desc\r\n        | serialize rank = row_number()\r\n        | extend dimension = iff(rank > 5, 'Other', dimension)\r\n        | summarize merged = hll_merge(hll) by dimension\r\n        | project ['Operating system'] = dimension, Counts = dcount_hll(merged);\r\n        cohortedTable\r\n        ",
        "size": 3,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Operating system",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Counts",
              "formatter": 4,
              "formatOptions": {
                "palette": "turquoise",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 2
                }
              }
            }
          ]
        }
      },
      "customWidth": "33",
      "name": "query - 5"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let mainTable  = union {Whoused}\r\n    | where timestamp {TimeRange}\r\n    {Cohort}\r\n    | where iif('*' in ({UserEvent}), 1==1, name in ({UserEvent}));\r\nlet cohortedTable = mainTable      \r\n        | extend dimension = client_Browser\r\n        | extend dimension = iif(isempty(dimension), \"<undefined>\", dimension)\r\n        | summarize hll = hll(itemId) by dimension\r\n        | extend Browser = dcount_hll(hll)\r\n        | order by Browser desc\r\n        | serialize rank = row_number()\r\n        | extend dimension = iff(rank > 5, 'Other', dimension)\r\n        | summarize merged = hll_merge(hll) by dimension\r\n        | project [\"Browser version\"] = dimension, Counts = dcount_hll(merged);\r\n        cohortedTable\r\n        ",
        "size": 3,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Browser version",
              "formatter": 0,
              "formatOptions": {
                "showIcon": true
              }
            },
            {
              "columnMatch": "Counts",
              "formatter": 4,
              "formatOptions": {
                "palette": "turquoise",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 2
                }
              }
            }
          ]
        }
      },
      "customWidth": "33",
      "name": "query - 6"
    },
    {
      "type": 1,
      "content": {
        "json": ""
      },
      "name": "text - 14",
      "styleSettings": {
        "margin": "20px"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "###### EVENT STATISTICS"
      },
      "name": "text - 13"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "6498a3e8-f191-4dfe-b427-929e8a0f49be",
            "version": "KqlParameterItem/1.0",
            "name": "FilterByName",
            "label": "Filter by name",
            "type": 1,
            "value": ""
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.insights/components"
      },
      "customWidth": "100",
      "name": "parameters - 11",
      "styleSettings": {
        "maxWidth": "170px"
      }
    },
    {
      "type": 1,
      "content": {
        "json": "📄 Pageview ​ ‍ 📅 Event"
      },
      "customWidth": "30",
      "name": "text - 12",
      "styleSettings": {
        "padding": "20px"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let filterByName = '{FilterByName}';\r\nlet mainTable = union {Whoused}\r\n| where timestamp {TimeRange}\r\n{Cohort}\r\n| where iif('*' in ({UserEvent}), 1==1, name in ({UserEvent}))\r\n| where iif(isempty(filterByName), 1==1, name contains filterByName);\r\nmainTable\r\n| summarize arg_max(timestamp, itemId), Users = dcount(user_Id), Sessions = dcount(session_Id), Instances = count(), Item = any(itemId) by name, itemType\r\n| extend rank = 2\r\n    | union (mainTable\r\n            | summarize Users = dcount(user_Id), Sessions = dcount(session_Id), Instances = count(), Item = any(itemId)\r\n            | extend name = 'Overall', rank = 1)\r\n    | extend jkey = 1\r\n    | join kind = inner (mainTable \r\n                        | summarize AllUsers = dcount(user_Id), AllSessions = dcount(session_Id), AllInstances = count(), Item = any(itemId)\r\n                        | extend jkey = 1) on jkey \r\n    | where iif(isempty(filterByName), 1==1, name contains filterByName)\r\n    | project ['Name'] = case( itemType == 'pageView',  strcat('📄 ', name), strcat('📅 ', name)) , ['Users'] = Users,\r\n              ['Sessions'] = Sessions,\r\n              ['Count'] = Instances , rank, Item\r\n    | order by rank asc, ['Users'] desc\r\n    | project-away rank\r\n    \r\n\r\n\r\n    ",
        "size": 0,
        "queryType": 0,
        "resourceType": "microsoft.insights/components",
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Name",
              "formatter": 1,
              "formatOptions": {
                "linkColumn": "Item",
                "linkTarget": "CustomEventDetails",
                "showIcon": false
              },
              "tooltipFormat": {
                "tooltip": "End-to-end transaction details"
              }
            },
            {
              "columnMatch": "Users",
              "formatter": 3,
              "formatOptions": {
                "palette": "blue",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "Sessions",
              "formatter": 3,
              "formatOptions": {
                "palette": "green",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "Count",
              "formatter": 3,
              "formatOptions": {
                "palette": "orange",
                "showIcon": true
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal",
                  "useGrouping": false,
                  "maximumFractionDigits": 2
                }
              }
            },
            {
              "columnMatch": "Item",
              "formatter": 5,
              "formatOptions": {
                "showIcon": true
              }
            }
          ]
        },
        "sortBy": [],
        "tileSettings": {
          "showBorder": false
        },
        "chartSettings": {
          "ySettings": {
            "unit": 17,
            "min": null,
            "max": null
          }
        }
      },
      "name": "Operating system"
    }
  ]
}