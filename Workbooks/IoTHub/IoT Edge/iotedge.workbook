{  
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "1b4b2d2e-4f2e-4881-903d-f307d6958a1c",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time range",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 259200000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.devices/iothubs"
      },
      "customWidth": "25",
      "name": "parameters - 1 - Copy"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "cellValue": "mainAction",
            "linkTarget": "parameter",
            "linkLabel": "Device list",
            "subTarget": "devicelist",
            "style": "link"
          },
          {
            "cellValue": "mainAction",
            "linkTarget": "parameter",
            "linkLabel": "Bird's eye view",
            "subTarget": "birdseye",
            "style": "link"
          },
          {
            "cellValue": "mainAction",
            "linkTarget": "parameter",
            "linkLabel": "Alerts",
            "subTarget": "alerts",
            "style": "link"
          },
          {
            "cellValue": "mainAction",
            "linkTarget": "parameter",
            "linkLabel": "Drill into details..",
            "subTarget": "devicedetails",
            "style": "link"
          }
        ]
      },
      "customWidth": "50",
      "name": "links - 8 - Copy"
    },
    {
      "type": 1,
      "content": {
        "json": "💡*Select a device and click \"**Drill into details..**\" tab*"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "mainAction",
          "comparison": "isNotEqualTo",
          "value": "devicedetails"
        },
        {
          "parameterName": "mainAction",
          "comparison": "isNotEqualTo",
          "value": "alerts"
        }
      ],
      "customWidth": "50",
      "name": "text - 3 - Copy",
      "styleSettings": {
        "margin": "-12px 0px",
        "padding": "8px 0px 0px 0px"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let minPeriod = 5m;\nlet numPeriods = 60;\nlet startTime = {timeRange:start};\nlet endTime = {timeRange:end};\nlet timeBin_ = (endTime - startTime) / numPeriods;\nlet timeBin = iff(timeBin_ < minPeriod, minPeriod, timeBin_);\nlet cpu_percent = InsightsMetrics\n| where TimeGenerated > startTime\n| where Name == \"edgeAgent_used_cpu_percent\" and Tags contains \"host\" and Tags contains \"0.95\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend value = toint(Val)\n| project device, value, TimeGenerated\n| order by device, TimeGenerated\n| serialize\n| make-series cpu_used_percent = max(value) on TimeGenerated from (startTime - 5m) to endTime step timeBin by  device\n| project-away TimeGenerated;\nlet totalMemByDevice = InsightsMetrics\n| where TimeGenerated > startTime\n| where Name == \"edgeAgent_total_memory_bytes\" and Tags contains \"host\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend value = tolong(Val)\n| project device, value, TimeGenerated\n| summarize total_bytes=max(value) by device;\nlet memUsedPercent = InsightsMetrics\n| where TimeGenerated > startTime\n| where Name == \"edgeAgent_used_memory_bytes\" and Tags contains \"host\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend used_bytes = tolong(Val)\n| project device, used_bytes, TimeGenerated\n| join kind=leftouter totalMemByDevice on $left.device == $right.device\n| extend mem_used_percent = (todouble(used_bytes)/todouble(total_bytes))*100\n| extend mem_used_percent = round(mem_used_percent, 0)\n| order by device, TimeGenerated\n| serialize\n| make-series mem_used_percent = max(mem_used_percent) on TimeGenerated from startTime to endTime step timeBin by device\n| project-away TimeGenerated;\nlet cpu_and_mem = memUsedPercent\n| join cpu_percent on $left.device == $right.device\n| project-away device1;\nlet totalBytesByDevice = InsightsMetrics\n| where TimeGenerated > startTime\n| where Name == \"edgeAgent_total_disk_space_bytes\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend value = tolong(Val)\n| extend diskname = tostring(dimensions.disk_name)\n| project device, diskname, value, TimeGenerated\n| summarize Bytes=max(value) by device, diskname\n| summarize totalBytes=sum(Bytes) by device;\nlet used_disk_trend = InsightsMetrics\n| where TimeGenerated > startTime\n| where Name == \"edgeAgent_available_disk_space_bytes\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend value = tolong(Val)\n| extend diskname = tostring(dimensions.disk_name)\n| project device, diskname, value, TimeGenerated\n| summarize Bytes=max(value) by device, diskname, TimeGenerated\n| summarize availBytes=sum(Bytes) by device, TimeGenerated\n| join kind=leftouter\n    totalBytesByDevice\non $left.device == $right.device\n| extend percentUsed = round((todouble(totalBytes) - todouble(availBytes))/todouble(totalBytes) * 100, 0)\n| project TimeGenerated, device, percentUsed\n| order by device, TimeGenerated\n| make-series disk_used_trend = max(percentUsed) on TimeGenerated from (startTime - 5m) to endTime step timeBin by  device\n| project-away TimeGenerated;\nlet cpu_mem_disk = cpu_and_mem\n| join\n    used_disk_trend\non $left.device == $right.device;\nlet messages_trend = InsightsMetrics\n| where TimeGenerated > startTime\n| where Name == \"edgehub_messages_received_total\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend id = trim_start(@\"[^/]+/\", tostring(dimensions.id))\n| extend value = toint(Val)\n| extend id_device = strcat(id,\"+\",device)\n| project id, device, id_device, value, TimeGenerated\n| order by id_device, TimeGenerated\n| serialize\n| extend nextValue = next(value, 1)\n| extend nextId = next(id_device, 1)\n| extend diff = iff((value - nextValue) >= 0, value - nextValue, value)\n| where id_device == nextId and diff >= 0\n| make-series device_messages_trend = sum(diff) on TimeGenerated from startTime to endTime step timeBin by device;\nlet messages_total = messages_trend\n| mv-expand with_itemindex=x device_messages_trend to typeof(long)\n| summarize device_messages_total=sum(device_messages_trend) by device\n| join\n    messages_trend\non $left.device == $right.device\n//| summarize device_messages = sum(diff) by device\n| join kind=leftouter\n    cpu_mem_disk\non $left.device == $right.device\n| project device, cpu_used_percent, mem_used_percent, disk_used_trend, device_messages_total, device_messages_trend;\nlet totalQlenByDevice = InsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where TimeGenerated < {timeRange:end}\n| where Name == \"edgehub_queue_length\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend ep = tostring(dimensions.endpoint)\n| extend qlen = toint(Val)\n| project device, qlen, ep, TimeGenerated\n| summarize sum(qlen) by TimeGenerated, device;\nlet lastUpdateTimeByDevice = totalQlenByDevice\n| summarize lastUpdateTime=max(TimeGenerated) by device;\nlet p95QLenAndLastUpdate = totalQlenByDevice \n| summarize p95Qlen=percentile(sum_qlen, 95) by device\n| join kind=leftouter lastUpdateTimeByDevice on device\n| project-away device1\n| extend  lastUpdatedSeconds = tolong(datetime_diff('second', {timeRange:end}, lastUpdateTime))\n| extend  lastUpdatedMins = tolong(datetime_diff('minute', {timeRange:end}, lastUpdateTime))\n| extend  lastUpdatedHours = tolong(datetime_diff('hour', {timeRange:end}, lastUpdateTime))\n| extend  lastUpdatedDays = tolong(datetime_diff('day', {timeRange:end}, lastUpdateTime))\n| extend agoText = case(lastUpdatedSeconds <= 60, strcat(lastUpdatedSeconds, iff(lastUpdatedSeconds == 1, \" sec ago\", \" secs ago\")),\n                        lastUpdatedSeconds <= 3600, strcat(lastUpdatedMins, iff(lastUpdatedMins == 1, \" min ago\", \" mins ago\")), \n                        lastUpdatedSeconds <= 86400, strcat(lastUpdatedHours, iff(lastUpdatedHours == 1, \" hr ago\", \" hrs ago\")),\n                        strcat(lastUpdatedDays, iff(lastUpdatedHours == 1, \" day ago\", \" days ago\")))\n| join kind=leftouter messages_total on device\n| project device, device_messages_total, device_messages_trend, p95Qlen, agoText, cpu_used_percent, mem_used_percent, disk_used_trend;                    \np95QLenAndLastUpdate\n",
              "size": 3,
              "timeContext": {
                "durationMs": 259200000
              },
              "timeContextFromParameter": "timeRange",
              "exportFieldName": "device",
              "exportParameterName": "SelectedDeviceDetails",
              "exportDefaultValue": "default",
              "queryType": 0,
              "resourceType": "microsoft.devices/iothubs",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "device_messages_total",
                    "formatter": 0,
                    "numberFormat": {
                      "unit": 17,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    },
                    "tooltipFormat": {
                      "tooltip": "Number of messages received by edge hub"
                    }
                  },
                  {
                    "columnMatch": "device_messages_trend",
                    "formatter": 10,
                    "formatOptions": {
                      "min": 0,
                      "palette": "turquoise"
                    }
                  },
                  {
                    "columnMatch": "p95Qlen",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "<=",
                          "thresholdValue": "20",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "<=",
                          "thresholdValue": "100",
                          "representation": "orange"
                        },
                        {
                          "operator": ">",
                          "thresholdValue": "100",
                          "representation": "redBright"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "useGrouping": true,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "cpu_used_percent",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "greenRed"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "mem_used_percent",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "greenRed"
                    },
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "disk_used_trend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "greenRed"
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "agoText",
                    "sortOrder": 2
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "device",
                    "label": "Name"
                  },
                  {
                    "columnId": "device_messages_total",
                    "label": "# Messages"
                  },
                  {
                    "columnId": "device_messages_trend",
                    "label": "Processed messages trend"
                  },
                  {
                    "columnId": "p95Qlen",
                    "label": "QLen (p95)"
                  },
                  {
                    "columnId": "agoText",
                    "label": "Last seen"
                  },
                  {
                    "columnId": "cpu_used_percent",
                    "label": "% CPU use trend"
                  },
                  {
                    "columnId": "mem_used_percent",
                    "label": "% Memory use trend"
                  },
                  {
                    "columnId": "disk_used_trend",
                    "label": "% Disk use trend"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "agoText",
                  "sortOrder": 2
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "mainAction",
              "comparison": "isEqualTo",
              "value": "devicelist"
            },
            "name": "query - 4"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "cellValue": "birdseye-view",
                  "linkTarget": "parameter",
                  "linkLabel": "Queue length (p95)",
                  "subTarget": "qlen",
                  "style": "link"
                },
                {
                  "cellValue": "birdseye-view",
                  "linkTarget": "parameter",
                  "linkLabel": "Memory (p95)",
                  "subTarget": "memory",
                  "style": "link"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "mainAction",
              "comparison": "isEqualTo",
              "value": "birdseye"
            },
            "name": "links - 5",
            "styleSettings": {
              "margin": "0px 16px"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let totalMemByDevice = InsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where Name == \"edgeAgent_total_memory_bytes\" and Tags contains \"host\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend value = tolong(Val)\n| project device, value, TimeGenerated\n| summarize total_bytes=max(value) by device;\nlet memUsedPercent = InsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where Name == \"edgeAgent_used_memory_bytes\" and Tags contains \"host\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend used_bytes = tolong(Val)\n| project device, used_bytes, TimeGenerated\n| join kind=leftouter totalMemByDevice on $left.device == $right.device\n| extend mem_used_percent = (todouble(used_bytes)/todouble(total_bytes))*100\n| extend mem_used_percent = round(mem_used_percent, 0)\n| summarize p95MemPercent = percentile(mem_used_percent, 95) by device;\nmemUsedPercent\n",
              "size": 0,
              "timeContext": {
                "durationMs": 259200000
              },
              "timeContextFromParameter": "timeRange",
              "exportFieldName": "device",
              "exportParameterName": "SelectedDeviceDetails",
              "exportDefaultValue": "default",
              "queryType": 0,
              "resourceType": "microsoft.devices/iothubs",
              "visualization": "graph",
              "graphSettings": {
                "type": 2,
                "topContent": {
                  "columnMatch": "device",
                  "formatter": 1,
                  "formatOptions": {}
                },
                "centerContent": {
                  "columnMatch": "p95MemPercent",
                  "formatter": 1,
                  "formatOptions": {},
                  "numberFormat": {
                    "unit": 1,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "nodeIdField": "device",
                "nodeSize": null,
                "staticNodeSize": 100,
                "colorSettings": {
                  "nodeColorField": "p95MemPercent",
                  "type": 3,
                  "thresholdsGrid": [
                    {
                      "operator": "<=",
                      "thresholdValue": "60",
                      "representation": "green"
                    },
                    {
                      "operator": "<=",
                      "thresholdValue": "80",
                      "representation": "yellow"
                    },
                    {
                      "operator": "<=",
                      "thresholdValue": "90",
                      "representation": "orange"
                    },
                    {
                      "operator": "<=",
                      "thresholdValue": "100",
                      "representation": "redBright"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "blue"
                    }
                  ]
                },
                "hivesMargin": 2
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "mainAction",
                "comparison": "isEqualTo",
                "value": "birdseye"
              },
              {
                "parameterName": "birdseye-view",
                "comparison": "isEqualTo",
                "value": "memory"
              }
            ],
            "name": "query - 4"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let totalQlenByDevice = InsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where TimeGenerated < {timeRange:end}\n| where Name == \"edgehub_queue_length\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| extend ep = tostring(dimensions.endpoint)\n| extend qlen = toint(Val)\n| project device, qlen, ep, TimeGenerated\n| summarize sum(qlen) by TimeGenerated, device;\nlet lastUpdateTimeByDevice = totalQlenByDevice\n| summarize lastUpdateTime=max(TimeGenerated) by device;\nlet p95QLenAndLastUpdate = totalQlenByDevice \n| summarize p95Qlen=percentile(sum_qlen, 95) by device\n| join kind=leftouter lastUpdateTimeByDevice on device\n| project-away device1\n| extend  lastUpdatedSeconds = tolong(datetime_diff('second', {timeRange:end}, lastUpdateTime))\n| extend  lastUpdatedMins = tolong(datetime_diff('minute', {timeRange:end}, lastUpdateTime))\n| extend  lastUpdatedHours = tolong(datetime_diff('hour', {timeRange:end}, lastUpdateTime))\n| extend  lastUpdatedDays = tolong(datetime_diff('day', {timeRange:end}, lastUpdateTime))\n| extend agoText = case(lastUpdatedSeconds <= 60, strcat(\"Updated \", lastUpdatedSeconds, iff(lastUpdatedSeconds == 1, \" sec ago\", \" secs ago\")),\n                        lastUpdatedSeconds <= 3600, strcat(\"Updated \", lastUpdatedMins, iff(lastUpdatedMins == 1, \" min ago\", \" mins ago\")), \n                        lastUpdatedSeconds <= 86400, strcat(\"Updated \", lastUpdatedHours, iff(lastUpdatedHours == 1, \" hr ago\", \" hrs ago\")),\n                        strcat(\"Updated \", lastUpdatedDays, iff(lastUpdatedHours == 1, \" day ago\", \" days ago\")))\n| extend colorHelper = case(lastUpdatedSeconds > 86400, -2,\n                            lastUpdatedSeconds > 3600, -1,\n                            p95Qlen);                     \np95QLenAndLastUpdate",
              "size": 0,
              "timeContext": {
                "durationMs": 259200000
              },
              "timeContextFromParameter": "timeRange",
              "exportFieldName": "device",
              "exportParameterName": "SelectedDeviceDetails",
              "exportDefaultValue": "default",
              "queryType": 0,
              "resourceType": "microsoft.devices/iothubs",
              "visualization": "graph",
              "gridSettings": {
                "sortBy": [
                  {
                    "itemKey": "lastUpdatedHours",
                    "sortOrder": 2
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "lastUpdatedHours",
                  "sortOrder": 2
                }
              ],
              "graphSettings": {
                "type": 2,
                "topContent": {
                  "columnMatch": "device",
                  "formatter": 1,
                  "formatOptions": {}
                },
                "centerContent": {
                  "columnMatch": "p95Qlen",
                  "formatOptions": {},
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 1
                    }
                  }
                },
                "bottomContent": {
                  "columnMatch": "agoText",
                  "formatOptions": {}
                },
                "nodeIdField": "device",
                "nodeSize": null,
                "staticNodeSize": 100,
                "colorSettings": {
                  "nodeColorField": "colorHelper",
                  "type": 3,
                  "thresholdsGrid": [
                    {
                      "operator": "==",
                      "thresholdValue": "-2",
                      "representation": "blueDark"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "-1",
                      "representation": "blue"
                    },
                    {
                      "operator": "<=",
                      "thresholdValue": "20",
                      "representation": "green"
                    },
                    {
                      "operator": "<=",
                      "thresholdValue": "100",
                      "representation": "orange"
                    },
                    {
                      "operator": ">",
                      "thresholdValue": "100",
                      "representation": "redBright"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "blue"
                    }
                  ]
                },
                "hivesMargin": 2
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "mainAction",
                "comparison": "isEqualTo",
                "value": "birdseye"
              },
              {
                "parameterName": "birdseye-view",
                "comparison": "isEqualTo",
                "value": "qlen"
              }
            ],
            "name": "query - 4 - Copy"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "Alert\n| where TimeGenerated > {timeRange:start}\n| where ResourceValue != \"\"\n| extend AlertType = case(AlertSeverity == 0, \"Critical\",\n                          AlertSeverity == 1, \"Error\",\n                          AlertSeverity == 2, \"Warning\",\n                          AlertSeverity == 3, \"Info\",\n                          \"Unknown\")\n| project  TimeGenerated, AlertName, AlertType, ResourceValue\n| summarize count(TimeGenerated) by AlertType\n\n\n\n",
              "size": 2,
              "noDataMessage": "🎉 No alerts!",
              "noDataMessageStyle": 3,
              "timeContext": {
                "durationMs": 86400000
              },
              "exportFieldName": "series",
              "exportParameterName": "SelectedSeverity",
              "exportDefaultValue": "none",
              "queryType": 0,
              "resourceType": "microsoft.devices/iothubs",
              "visualization": "piechart",
              "chartSettings": {
                "yAxis": [
                  "count_TimeGenerated"
                ],
                "group": "AlertType",
                "createOtherGroup": null,
                "seriesLabelSettings": [
                  {
                    "seriesName": "Warning",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "Info",
                    "label": "",
                    "color": "blue"
                  },
                  {
                    "seriesName": "Error",
                    "color": "orange"
                  },
                  {
                    "seriesName": "Critical",
                    "color": "redBright"
                  }
                ]
              }
            },
            "customWidth": "36",
            "conditionalVisibility": {
              "parameterName": "mainAction",
              "comparison": "isEqualTo",
              "value": "alerts"
            },
            "showPin": false,
            "name": "alerts-pie",
            "styleSettings": {
              "margin": "0px -30px 0px 0px",
              "padding": "25px 0px 0px 0px"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let sevType = iff(\"{SelectedSeverity}\" == \"none\", \" \", \"{SelectedSeverity}\");\nAlert\n| where TimeGenerated > {timeRange:start}\n| where ResourceValue != \"\"\n| project  TimeGenerated, AlertName, AlertSeverity, ResourceValue, LinkToSearchResults\n| extend  lastUpdatedSeconds = tolong(datetime_diff('second', {timeRange:end}, TimeGenerated))\n| extend  lastUpdatedMins = tolong(datetime_diff('minute', {timeRange:end}, TimeGenerated))\n| extend  lastUpdatedHours = tolong(datetime_diff('hour', {timeRange:end}, TimeGenerated))\n| extend  lastUpdatedDays = tolong(datetime_diff('day', {timeRange:end}, TimeGenerated))\n| extend agoText = case(lastUpdatedSeconds <= 60, strcat(lastUpdatedSeconds, iff(lastUpdatedSeconds == 1, \" sec ago\", \" secs ago\")),\n                        lastUpdatedSeconds <= 3600, strcat(lastUpdatedMins, iff(lastUpdatedMins == 1, \" min ago\", \" mins ago\")), \n                        lastUpdatedSeconds <= 86400, strcat(lastUpdatedSeconds / 3600, iff(lastUpdatedSeconds / 3600 == 1, \"hr \", \"hrs \"), lastUpdatedMins % 60, \"m ago\"),\n                        strcat(\"More than \", lastUpdatedDays, iff(lastUpdatedDays == 1, \" day ago\", \" days ago\")))\n| extend AlertType = case(AlertSeverity == 0, \"Critical \",\n                          AlertSeverity == 1, \"Error \",\n                          AlertSeverity == 2, \"Warning \",\n                          AlertSeverity == 3, \"Info \",\n                          \"Unknown\")\n| where AlertType contains sevType\n| order by TimeGenerated\n| project agoText, AlertName,  ResourceValue, AlertType, TimeGenerated, LinkToSearchResults\n\n\n",
              "size": 0,
              "noDataMessage": "🎉 No alerts!",
              "noDataMessageStyle": 3,
              "timeContext": {
                "durationMs": 86400000
              },
              "exportFieldName": "ResourceValue",
              "exportParameterName": "SelectedDeviceDetails",
              "exportDefaultValue": "default",
              "queryType": 0,
              "resourceType": "microsoft.devices/iothubs",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "AlertType",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "LinkToSearchResults",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url",
                      "linkLabel": "link",
                      "linkIsContextBlade": false
                    }
                  },
                  {
                    "columnMatch": "AlertSeverity",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "3",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "blue",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ],
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "agoText",
                    "label": "When"
                  },
                  {
                    "columnId": "AlertName",
                    "label": "Issue"
                  },
                  {
                    "columnId": "ResourceValue",
                    "label": "Device"
                  },
                  {
                    "columnId": "AlertType",
                    "label": "Severity"
                  },
                  {
                    "columnId": "TimeGenerated",
                    "label": "Timestamp"
                  },
                  {
                    "columnId": "LinkToSearchResults",
                    "label": "More info"
                  }
                ]
              }
            },
            "customWidth": "64",
            "conditionalVisibility": {
              "parameterName": "mainAction",
              "comparison": "isEqualTo",
              "value": "alerts"
            },
            "name": "alerts-grid"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "5e4f450c-231b-47ed-9d30-a6f6598d3355",
                  "version": "KqlParameterItem/1.0",
                  "name": "SelectedDevice",
                  "type": 1,
                  "value": "default",
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "condition": "if (SelectedDeviceDetails is not empty ), result = '{SelectedDeviceDetails}'",
                      "criteriaContext": {
                        "leftOperand": "SelectedDeviceDetails",
                        "operator": "isNotNull",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "{SelectedDeviceDetails}"
                      }
                    },
                    {
                      "condition": "Click edit to specify a result for the default condition.",
                      "criteriaContext": {
                        "operator": "Default",
                        "rightValType": "param",
                        "resultValType": "param"
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "timeRange"
                }
              ],
              "style": "pills",
              "doNotRunWhenHidden": true,
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "conditionalVisibility": {
              "parameterName": "mainAction",
              "comparison": "isNotEqualTo",
              "value": "devicedetails"
            },
            "name": "parameters - 4"
          },
          {
            "type": 1,
            "content": {
              "json": "⚠️ *Please select a device from the list or bird's eye view before drilling into its details*"
            },
            "customWidth": "0",
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedDevice",
                "comparison": "isEqualTo",
                "value": "default"
              },
              {
                "parameterName": "mainAction",
                "comparison": "isEqualTo",
                "value": "devicedetails"
              }
            ],
            "name": "text - 6",
            "styleSettings": {
              "padding": "8px"
            }
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "loadType": "always",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "# <span style=\"color:teal\"> **{SelectedDevice}** </span>"
                  },
                  "customWidth": "0",
                  "name": "text - 5",
                  "styleSettings": {
                    "margin": "0px 0px -8px 0px",
                    "padding": "4px"
                  }
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "cellValue": "ShowPane",
                        "linkTarget": "parameter",
                        "linkLabel": "Messaging",
                        "subTarget": "messages",
                        "style": "link"
                      },
                      {
                        "cellValue": "ShowPane",
                        "linkTarget": "parameter",
                        "linkLabel": "Modules",
                        "subTarget": "modules",
                        "style": "link"
                      },
                      {
                        "cellValue": "ShowPane",
                        "linkTarget": "parameter",
                        "linkLabel": "Host",
                        "subTarget": "host",
                        "style": "link"
                      }
                    ]
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "SelectedDevice",
                    "comparison": "isNotEqualTo",
                    "value": "default"
                  },
                  "name": "links - 2",
                  "styleSettings": {
                    "margin": "0px 0px -8px 0px"
                  }
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "cellValue": "messaging-view",
                        "linkTarget": "parameter",
                        "linkLabel": "Routing",
                        "subTarget": "routing",
                        "style": "link"
                      },
                      {
                        "cellValue": "messaging-view",
                        "linkTarget": "parameter",
                        "linkLabel": "Graph",
                        "subTarget": "graph",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "ShowPane",
                    "comparison": "isEqualTo",
                    "value": "messages"
                  },
                  "name": "tabs-messaging",
                  "styleSettings": {
                    "margin": "-14px 0px"
                  }
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {
                        "cellValue": "module-tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Availability",
                        "subTarget": "availability",
                        "style": "link"
                      },
                      {
                        "cellValue": "module-tab",
                        "linkTarget": "parameter",
                        "linkLabel": "Resource consumption",
                        "subTarget": "resources",
                        "style": "link"
                      }
                    ]
                  },
                  "conditionalVisibility": {
                    "parameterName": "ShowPane",
                    "comparison": "isEqualTo",
                    "value": "modules"
                  },
                  "name": "module-view-links",
                  "styleSettings": {
                    "margin": "-14px 0px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "InsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where Name == \"edgeAgent_used_cpu_percent\" and Tags contains \"host\" and Tags contains \"0.95\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device == '{SelectedDevice}'\n| extend value = round(toint(Val),2)\n| project value, TimeGenerated",
                    "size": 1,
                    "aggregation": 3,
                    "title": "CPU utilization",
                    "timeContext": {
                      "durationMs": 259200000
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.devices/iothubs",
                    "visualization": "timechart",
                    "chartSettings": {
                      "xAxis": "TimeGenerated",
                      "seriesLabelSettings": [
                        {
                          "seriesName": "value",
                          "label": "CPU %"
                        }
                      ],
                      "xSettings": {},
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "ShowPane",
                    "comparison": "isEqualTo",
                    "value": "host"
                  },
                  "name": "host-cpu-query"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "InsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where Name == \"edgeAgent_available_disk_space_bytes\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device == '{SelectedDevice}'\n| extend value = tolong(Val)\n| extend diskname = tostring(dimensions.disk_name)\n| project diskname, value, TimeGenerated\n",
                    "size": 1,
                    "aggregation": 5,
                    "title": "Available disk space",
                    "timeContext": {
                      "durationMs": 259200000
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.devices/iothubs",
                    "visualization": "timechart",
                    "chartSettings": {
                      "xAxis": "TimeGenerated",
                      "seriesLabelSettings": [
                        {
                          "seriesName": "value",
                          "label": "CPU %"
                        }
                      ],
                      "xSettings": {},
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 2,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "ShowPane",
                    "comparison": "isEqualTo",
                    "value": "host"
                  },
                  "name": "host-disk-query"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "InsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where Name == \"edgeAgent_used_memory_bytes\" and Tags contains \"host\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device == '{SelectedDevice}'\n| extend value = tolong(Val)\n| project value, TimeGenerated\n",
                    "size": 1,
                    "aggregation": 2,
                    "title": "Memory usage",
                    "timeContext": {
                      "durationMs": 259200000
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.devices/iothubs",
                    "visualization": "timechart",
                    "chartSettings": {
                      "xAxis": "TimeGenerated",
                      "seriesLabelSettings": [
                        {
                          "seriesName": "value",
                          "label": "Memory used"
                        }
                      ],
                      "xSettings": {},
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 2,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "ShowPane",
                    "comparison": "isEqualTo",
                    "value": "host"
                  },
                  "name": "host-mem-query"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let startTime = ago(9h);\nInsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where Name == \"edgeAgent_iotedged_uptime_seconds\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device == '{SelectedDevice}'\n| project TimeGenerated, Val, Name=\"IoT Edge daemon\"\n| union (\n     InsightsMetrics \n     | where TimeGenerated > startTime\n     | where Name == \"edgeAgent_host_uptime_seconds\"\n     | extend dimensions=parse_json(Tags)\n     | extend device = tostring(dimensions.edge_device)\n     | where device == '{SelectedDevice}'\n     | project TimeGenerated, Val, Name=\"Host\")\n| summarize arg_max(TimeGenerated, Val) by Name\n",
                    "size": 1,
                    "aggregation": 2,
                    "title": "Uptime",
                    "timeContext": {
                      "durationMs": 259200000
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.devices/iothubs",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Name",
                        "formatter": 1,
                        "formatOptions": {}
                      },
                      "leftContent": {
                        "columnMatch": "Val",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 24,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "showBorder": false
                    },
                    "chartSettings": {
                      "xAxis": "TimeGenerated",
                      "seriesLabelSettings": [
                        {
                          "seriesName": "value",
                          "label": "Memory used"
                        }
                      ],
                      "xSettings": {},
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 2,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "ShowPane",
                    "comparison": "isEqualTo",
                    "value": "host"
                  },
                  "name": "host-uptime"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let deviceid = '{SelectedDevice}';\nlet minPeriod = 5m;\nlet numPeriods = 24;\nlet startTime = {timeRange:start};\nlet endTime = {timeRange:end};\nlet timeBin_ = (endTime - startTime) / numPeriods;\nlet timeBin = iff(timeBin_ < minPeriod, minPeriod, timeBin_);\nlet data = InsightsMetrics\n| where Name == \"edgehub_messages_sent_total\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device  == deviceid\n| extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n| extend source = trim_start(@\"[^/]+/\", tostring(dimensions.from))\n| extend messages = toint(Val)\n| extend timeUtc = TimeGenerated\n| extend sourceTarget = strcat(source,\"+\",target) \n| project  timeUtc, device, source, target, sourceTarget,  messages\n| order by sourceTarget, timeUtc\n| serialize | extend nextCount = next(messages, 1) | extend nextSourceTarget= next(sourceTarget, 1)\n| extend diff = iff((messages - nextCount) >= 0, messages - nextCount, messages)\n| where sourceTarget  == nextSourceTarget and diff >= 0\n| project  timeUtc, device, source, target, sourceTarget, messages, diff;\nlet set1 = data\n| summarize messageCount = sum(diff) by target, source, sourceTarget\n| extend ParentId=target\n| extend Id=sourceTarget\n| extend Name=strcat('📦 ', source)\n| project Name, Id, ParentId, target, source, messageCount;\nlet set2 = set1\n| union (set1\n    | summarize messageCount=sum(messageCount) by target\n    | extend Id=target\n    | extend Name= iff((Id == \"upstream\"), strcat(' ☁️ ', Id), strcat(' 📞 ', Id))\n    )\n| project-away target, source\n| order by messageCount;\nlet set3 = InsightsMetrics\n| where Name == 'edgehub_message_send_duration_seconds'\n| extend dimensions=parse_json(Tags)\n| extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n| extend source = trim_start(@\"[^/]+/\", tostring(dimensions.from))\n| extend device = tostring(dimensions.edge_device)\n| extend quantile = tostring(dimensions.quantile)\n| where quantile == '0.9'\n| where Val != 'NaN'\n| where device == deviceid\n| extend val = todouble(Val)\n| project TimeGenerated, target, source, val\n| extend Id=strcat(source,\"+\",target)\n| summarize P90Latency= round(percentile(val, 90),6)  by Id;\nlet msg_rate = set2\n| join kind=leftouter set3 on Id\n| project-away Id1\n| extend MsgRate = round(messageCount/(({timeRange:end}-{timeRange:start})/1s), 2)\n| project Endpoint=Name, Id, ParentId, messageCount, MsgRate, P90Latency;\nlet queue_size = InsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where Name == \"edgehub_queue_length\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device == deviceid\n| extend endpoint = trim_start(@\"[^/]+/\", tostring(dimensions.endpoint))\n| extend endpoint = trim_end(@\"\\/(.*)\", endpoint)\n| extend endpoint = iff((endpoint == \"iothub\"), \"upstream\", endpoint)\n| extend val = toint(Val)\n| project Id=endpoint, val, TimeGenerated\n| order by Id, TimeGenerated\n| summarize medianQSize=percentile(val, 95) by Id;\nmsg_rate \n| join kind=leftouter queue_size on Id\n| project-away Id1\n   \n    \n",
                    "size": 0,
                    "timeContext": {
                      "durationMs": 259200000
                    },
                    "timeContextFromParameter": "timeRange",
                    "exportedParameters": [
                      {
                        "fieldName": "medianQSize",
                        "parameterName": "qlen",
                        "parameterType": 1,
                        "defaultValue": "<n/a>"
                      },
                      {
                        "fieldName": "messageCount",
                        "parameterName": "msgCount",
                        "parameterType": 1
                      },
                      {
                        "fieldName": "P90Latency",
                        "parameterName": "latency",
                        "parameterType": 1,
                        "defaultValue": ""
                      },
                      {
                        "fieldName": "Id",
                        "parameterName": "id",
                        "parameterType": 1,
                        "defaultValue": "<default>"
                      },
                      {
                        "fieldName": "ParentId",
                        "parameterName": "pid",
                        "parameterType": 1,
                        "defaultValue": "<NotSet>"
                      },
                      {
                        "fieldName": "Endpoint",
                        "parameterName": "ep",
                        "parameterType": 1
                      }
                    ],
                    "queryType": 0,
                    "resourceType": "microsoft.devices/iothubs",
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Id",
                          "formatter": 5,
                          "formatOptions": {}
                        },
                        {
                          "columnMatch": "ParentId",
                          "formatter": 5,
                          "formatOptions": {}
                        },
                        {
                          "columnMatch": "messageCount",
                          "formatter": 4,
                          "formatOptions": {},
                          "numberFormat": {
                            "unit": 17,
                            "options": {
                              "style": "decimal",
                              "minimumFractionDigits": 2,
                              "maximumFractionDigits": 2
                            }
                          },
                          "tooltipFormat": {
                            "tooltip": "{0}"
                          }
                        },
                        {
                          "columnMatch": "MsgRate",
                          "formatter": 0,
                          "formatOptions": {},
                          "numberFormat": {
                            "unit": 31,
                            "options": {
                              "style": "decimal",
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "P90Latency",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "palette": "green"
                          },
                          "numberFormat": {
                            "unit": 24,
                            "options": {
                              "style": "decimal",
                              "minimumFractionDigits": 1,
                              "maximumFractionDigits": 1
                            }
                          }
                        },
                        {
                          "columnMatch": "medianQSize",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "palette": "greenRed"
                          }
                        }
                      ],
                      "rowLimit": 150,
                      "hierarchySettings": {
                        "idColumn": "Id",
                        "parentColumn": "ParentId",
                        "treeType": 0,
                        "expanderColumn": "Endpoint",
                        "expandTopLevel": true
                      },
                      "sortBy": [
                        {
                          "itemKey": "Endpoint",
                          "sortOrder": 1
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Endpoint"
                        },
                        {
                          "columnId": "Id"
                        },
                        {
                          "columnId": "ParentId"
                        },
                        {
                          "columnId": "messageCount",
                          "label": "Count"
                        },
                        {
                          "columnId": "MsgRate",
                          "label": "Rate"
                        },
                        {
                          "columnId": "P90Latency",
                          "label": "Latency (p90)"
                        },
                        {
                          "columnId": "medianQSize",
                          "label": "QLen (p90)",
                          "comment": "Median queue length"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "Endpoint",
                        "sortOrder": 1
                      }
                    ]
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedDevice",
                      "comparison": "isNotEqualTo",
                      "value": "default"
                    },
                    {
                      "parameterName": "ShowPane",
                      "comparison": "isEqualTo",
                      "value": "messages"
                    },
                    {
                      "parameterName": "messaging-view",
                      "comparison": "isEqualTo",
                      "value": "routing"
                    }
                  ],
                  "name": "message-details",
                  "styleSettings": {
                    "margin": "-16px 0px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let startTime = {timeRange:start};\nlet deviceid = '{SelectedDevice}';\nlet actual = InsightsMetrics\n| where TimeGenerated > startTime\n| where Name == \"edgeAgent_total_time_running_correctly_seconds\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device == deviceid\n| extend module = tostring(dimensions.module_name)\n// todo - account for agent restarts\n| summarize actualUptime=max(Val) by module;\nlet expected = InsightsMetrics\n| where TimeGenerated > startTime\n| where Name == \"edgeAgent_total_time_expected_running_seconds\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device == deviceid\n| extend module = tostring(dimensions.module_name)\n// todo - account for agent restarts\n| summarize expectedUptime=max(Val) by module;\nexpected\n| join actual on module\n| extend uptime=(actualUptime / expectedUptime) * 100\n| project module, uptime, expectedUptime, actualUptime\n\n\n\n",
                    "size": 0,
                    "timeContext": {
                      "durationMs": 259200000
                    },
                    "timeContextFromParameter": "timeRange",
                    "exportFieldName": "module",
                    "exportParameterName": "moduleName",
                    "queryType": 0,
                    "resourceType": "microsoft.devices/iothubs",
                    "visualization": "graph",
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "formatter": 1,
                        "formatOptions": {},
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      "centerContent": {
                        "columnMatch": "module",
                        "formatter": 1,
                        "formatOptions": {}
                      },
                      "bottomContent": {
                        "columnMatch": "uptime",
                        "formatOptions": {},
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "nodeIdField": "module",
                      "nodeSize": null,
                      "staticNodeSize": 100,
                      "colorSettings": {
                        "nodeColorField": "uptime",
                        "type": 4,
                        "heatmapPalette": "redGreen",
                        "heatmapMin": 0,
                        "heatmapMax": 100
                      },
                      "hivesMargin": 2
                    }
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedDevice",
                      "comparison": "isNotEqualTo",
                      "value": "default"
                    },
                    {
                      "parameterName": "module-tab",
                      "comparison": "isEqualTo",
                      "value": "availability"
                    },
                    {
                      "parameterName": "ShowPane",
                      "comparison": "isEqualTo",
                      "value": "modules"
                    }
                  ],
                  "name": "module-hive-query"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "InsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where Name == \"edgeAgent_used_cpu_percent\" and Tags contains \"0.95\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device == '{SelectedDevice}'\n| extend module = tostring(dimensions.module_name)\n| where module != \"host\"  \n| extend value = todouble(Val)\n| order by TimeGenerated, module, value\n| project TimeGenerated, module, value",
                    "size": 1,
                    "aggregation": 5,
                    "title": "Average CPU usage across all cores",
                    "timeContext": {
                      "durationMs": 259200000
                    },
                    "timeContextFromParameter": "timeRange",
                    "exportFieldName": "module",
                    "exportParameterName": "moduleName",
                    "queryType": 0,
                    "resourceType": "microsoft.devices/iothubs",
                    "visualization": "areachart",
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "formatter": 1,
                        "formatOptions": {},
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      "centerContent": {
                        "columnMatch": "module",
                        "formatter": 1,
                        "formatOptions": {}
                      },
                      "bottomContent": {
                        "columnMatch": "uptime",
                        "formatOptions": {},
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "nodeIdField": "module",
                      "nodeSize": null,
                      "staticNodeSize": 100,
                      "colorSettings": {
                        "nodeColorField": "uptime",
                        "type": 4,
                        "heatmapPalette": "redGreen",
                        "heatmapMin": 0,
                        "heatmapMax": 100
                      },
                      "hivesMargin": 2
                    },
                    "chartSettings": {
                      "xSettings": {},
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "minimumFractionDigits": 1,
                            "maximumFractionDigits": 1
                          }
                        }
                      }
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedDevice",
                      "comparison": "isNotEqualTo",
                      "value": "default"
                    },
                    {
                      "parameterName": "module-tab",
                      "comparison": "isEqualTo",
                      "value": "resources"
                    },
                    {
                      "parameterName": "ShowPane",
                      "comparison": "isEqualTo",
                      "value": "modules"
                    }
                  ],
                  "name": "all-modules-cpu"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "InsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where Name == \"edgeAgent_used_memory_bytes\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device == '{SelectedDevice}'\n| extend module = tostring(dimensions.module_name)\n| where module != \"host\"  \n| extend value = tolong(Val)\n| order by TimeGenerated, module, value\n| project TimeGenerated, module, value",
                    "size": 1,
                    "aggregation": 5,
                    "title": "Memory usage",
                    "timeContext": {
                      "durationMs": 259200000
                    },
                    "timeContextFromParameter": "timeRange",
                    "exportFieldName": "module",
                    "exportParameterName": "moduleName",
                    "queryType": 0,
                    "resourceType": "microsoft.devices/iothubs",
                    "visualization": "areachart",
                    "graphSettings": {
                      "type": 2,
                      "topContent": {
                        "formatter": 1,
                        "formatOptions": {},
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal"
                          }
                        }
                      },
                      "centerContent": {
                        "columnMatch": "module",
                        "formatter": 1,
                        "formatOptions": {}
                      },
                      "bottomContent": {
                        "columnMatch": "uptime",
                        "formatOptions": {},
                        "numberFormat": {
                          "unit": 1,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "nodeIdField": "module",
                      "nodeSize": null,
                      "staticNodeSize": 100,
                      "colorSettings": {
                        "nodeColorField": "uptime",
                        "type": 4,
                        "heatmapPalette": "redGreen",
                        "heatmapMin": 0,
                        "heatmapMax": 100
                      },
                      "hivesMargin": 2
                    },
                    "chartSettings": {
                      "xSettings": {},
                      "ySettings": {
                        "numberFormatSettings": {
                          "unit": 2,
                          "options": {
                            "style": "decimal",
                            "useGrouping": true,
                            "minimumFractionDigits": 1,
                            "maximumFractionDigits": 1
                          }
                        }
                      }
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedDevice",
                      "comparison": "isNotEqualTo",
                      "value": "default"
                    },
                    {
                      "parameterName": "module-tab",
                      "comparison": "isEqualTo",
                      "value": "resources"
                    },
                    {
                      "parameterName": "ShowPane",
                      "comparison": "isEqualTo",
                      "value": "modules"
                    }
                  ],
                  "name": "all-modules-mem"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "loadType": "always",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "InsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where Name == \"edgeAgent_used_cpu_percent\" and Tags contains \"0.95\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device == '{SelectedDevice}'\n| extend module = tostring(dimensions.module_name)\n| where module == '{moduleName}'\n| extend value = todouble(Val)\n| project value, TimeGenerated",
                          "size": 1,
                          "aggregation": 5,
                          "title": "CPU usage by {moduleName}",
                          "timeContext": {
                            "durationMs": 259200000
                          },
                          "timeContextFromParameter": "timeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.devices/iothubs",
                          "visualization": "timechart",
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "value",
                                "label": "CPU"
                              }
                            ],
                            "xSettings": {},
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 1,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "minimumFractionDigits": 2,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "name": "module-cpu-query"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "InsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where Name == \"edgeAgent_used_memory_bytes\" and Tags contains '{moduleName}' and Tags contains '{SelectedDevice}'\n| extend value = tolong(Val)\n| project value, TimeGenerated",
                          "size": 1,
                          "aggregation": 5,
                          "title": "Memory consumed by {moduleName}",
                          "timeContext": {
                            "durationMs": 259200000
                          },
                          "timeContextFromParameter": "timeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.devices/iothubs",
                          "visualization": "timechart",
                          "chartSettings": {
                            "seriesLabelSettings": [
                              {
                                "seriesName": "value",
                                "label": "Memory"
                              }
                            ],
                            "xSettings": {},
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 2,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 1
                                }
                              }
                            }
                          }
                        },
                        "name": "module-memory-query"
                      }
                    ]
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "moduleName",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "module-docker-metrics-group"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let endp = iff('{pid}' != \"\", '{pid}', '{id}');\nInsightsMetrics\n| where TimeGenerated > {timeRange:start}\n| where Name == \"edgehub_queue_length\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device == '{SelectedDevice}'\n| extend ep = tostring(dimensions.endpoint)\n| where ep contains iff((endp == 'upstream'), \"iothub\", endp)\n| project TimeGenerated, Val\n| order by TimeGenerated asc",
                          "size": 1,
                          "aggregation": 2,
                          "title": "Queue length trend for {ep}",
                          "timeContext": {
                            "durationMs": 259200000
                          },
                          "timeContextFromParameter": "timeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.devices/iothubs",
                          "visualization": "linechart",
                          "chartSettings": {
                            "xAxis": "TimeGenerated",
                            "yAxis": [
                              "Val"
                            ],
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Val",
                                "label": "Queue size"
                              }
                            ],
                            "xSettings": {},
                            "ySettings": {}
                          }
                        },
                        "customWidth": "100",
                        "conditionalVisibility": {
                          "parameterName": "qlen",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 0 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let endp = iff('{pid}' != \"\", '{pid}', '{id}');\nlet x = trim_end(@\"[^+]+\", '{id}');\nlet moduleid = substring(x,0, strlen(x)-1);\nInsightsMetrics\n| where Name == 'edgehub_message_send_duration_seconds'\n| extend dimensions=parse_json(Tags)\n| extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n| where target contains endp\n| extend source = trim_start(@\"[^/]+/\", tostring(dimensions.from))\n| where source contains moduleid\n| extend device = tostring(dimensions.edge_device)\n| where device == '{SelectedDevice}'\n| extend quantile = tostring(dimensions.quantile)\n| where quantile == '0.9'\n| where Val != 'NaN'\n| extend val = todouble(Val)\n| project TimeGenerated, val",
                          "size": 1,
                          "aggregation": 3,
                          "title": "Message send latency from {ep} to {pid}",
                          "timeContext": {
                            "durationMs": 259200000
                          },
                          "timeContextFromParameter": "timeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.devices/iothubs",
                          "visualization": "timechart",
                          "chartSettings": {
                            "xAxis": "TimeGenerated",
                            "yAxis": [
                              "val"
                            ],
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Val",
                                "label": "Queue size"
                              },
                              {
                                "seriesName": "val",
                                "label": "Send latency"
                              }
                            ],
                            "xSettings": {},
                            "ySettings": {
                              "numberFormatSettings": {
                                "unit": 24,
                                "options": {
                                  "style": "decimal",
                                  "useGrouping": true,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "qlen",
                            "comparison": "isEqualTo"
                          },
                          {
                            "parameterName": "id",
                            "comparison": "isNotEqualTo"
                          }
                        ],
                        "name": "query - 0 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let endp = iff('{pid}' != \"\", '{pid}', '{id}');\nlet x = trim_end(@\"[^+]+\", '{id}');\nlet moduleid = substring(x,0, strlen(x)-1);\n//let moduleid = \"Sender2\";\nInsightsMetrics\n| where Name == \"edgehub_messages_sent_total\"\n| where Tags contains endp\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device  == '{SelectedDevice}'\n| extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n| extend source = trim_start(@\"[^/]+/\", tostring(dimensions.from))\n| where source == moduleid\n| extend messages = toint(Val)\n| order by TimeGenerated\n| serialize | extend nextCount = next(messages, 1) \n| extend diff = iff((messages - nextCount) >= 0, messages - nextCount, -1)\n| where  diff >= 0\n| project TimeGenerated, diff;",
                          "size": 1,
                          "title": "Messages sent by {ep} to {pid}",
                          "timeContext": {
                            "durationMs": 259200000
                          },
                          "timeContextFromParameter": "timeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.devices/iothubs",
                          "visualization": "barchart",
                          "tileSettings": {
                            "showBorder": false
                          },
                          "chartSettings": {
                            "xAxis": "TimeGenerated",
                            "yAxis": [
                              "diff"
                            ],
                            "seriesLabelSettings": [
                              {
                                "seriesName": "diff",
                                "label": "Messages sent"
                              }
                            ],
                            "xSettings": {},
                            "ySettings": {}
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "latency",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 1"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "let endp = iff('{pid}' != \"\", '{pid}', '{id}');\nInsightsMetrics\n| where Name == \"edgehub_messages_sent_total\"\n| where Tags contains endp\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device  == '{SelectedDevice}'\n| extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n| extend source = trim_start(@\"[^/]+/\", tostring(dimensions.from))\n| extend messages = toint(Val)\n| order by source, TimeGenerated\n| serialize | extend nextCount = next(messages, 1) | extend nextSource = next(source, 1)\n| extend diff = iff((messages - nextCount) >= 0, messages - nextCount, messages)\n| where source  == nextSource and diff >= 0\n| project source, TimeGenerated, messages=diff",
                          "size": 1,
                          "title": "Messages sent to {ep}",
                          "timeContext": {
                            "durationMs": 259200000
                          },
                          "timeContextFromParameter": "timeRange",
                          "queryType": 0,
                          "resourceType": "microsoft.devices/iothubs",
                          "visualization": "barchart",
                          "chartSettings": {
                            "xAxis": "TimeGenerated",
                            "yAxis": [
                              "messages"
                            ],
                            "seriesLabelSettings": [
                              {
                                "seriesName": "diff",
                                "label": "Messages sent"
                              }
                            ],
                            "xSettings": {},
                            "ySettings": {}
                          }
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "latency",
                            "comparison": "isEqualTo"
                          },
                          {
                            "parameterName": "id",
                            "comparison": "isNotEqualTo"
                          }
                        ],
                        "name": "query - 1 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "ParentId: {pid}, qlen: {qlen}, msgCount: {mstCount}, latency: {latency}, id: {id}"
                        },
                        "conditionalVisibility": {
                          "parameterName": "debug",
                          "comparison": "isEqualTo",
                          "value": "true"
                        },
                        "name": "text - 2"
                      }
                    ]
                  },
                  "customWidth": "50",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "id",
                      "comparison": "isNotEqualTo",
                      "value": "<default>"
                    },
                    {
                      "parameterName": "ShowPane",
                      "comparison": "isEqualTo",
                      "value": "messages"
                    },
                    {
                      "parameterName": "messaging-view",
                      "comparison": "isEqualTo",
                      "value": "routing"
                    }
                  ],
                  "name": "messaging-routing",
                  "styleSettings": {
                    "maxWidth": "50%"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let deviceid = '{SelectedDevice}';\nlet data = InsightsMetrics\n| where Name == \"edgehub_messages_sent_total\"\n| extend dimensions=parse_json(Tags)\n| extend device = tostring(dimensions.edge_device)\n| where device  == deviceid\n| extend target = trim_start(@\"[^/]+/\", extractjson(\"$.to\", tostring(dimensions), typeof(string)))\n| extend source = trim_start(@\"[^/]+/\", tostring(dimensions.from))\n| extend messages = toint(Val)\n| extend timeUtc = TimeGenerated\n| extend sourceTarget = strcat(source,\"+\",target) \n| project  timeUtc, device, source, target, sourceTarget,  messages\n| order by sourceTarget, timeUtc\n| serialize | extend nextCount = next(messages, 1) | extend nextSourceTarget= next(sourceTarget, 1)\n| extend diff = iff((messages - nextCount) >= 0, messages - nextCount, messages)\n| where sourceTarget  == nextSourceTarget and diff >= 0\n| project  timeUtc, device, source, target, sourceTarget, messages, diff;\ndata\n| summarize messageCount = sum(diff) by source, target\n| extend id = ''\n| project id, source, target, messageCount\n| union (data\n    | sample-distinct 100 of source\n    | extend id = source\n    | union (data\n        | sample-distinct 100 of target\n        | extend  id = target)\n    | sample-distinct 100 of id\n    | project id);",
                    "size": 0,
                    "timeContext": {
                      "durationMs": 259200000
                    },
                    "timeContextFromParameter": "timeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.devices/iothubs",
                    "visualization": "graph",
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "formatter": 1,
                        "formatOptions": {}
                      },
                      "centerContent": {
                        "columnMatch": "id",
                        "formatter": 12,
                        "formatOptions": {},
                        "numberFormat": {
                          "unit": 0,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "nodeIdField": "id",
                      "sourceIdField": "source",
                      "targetIdField": "target",
                      "edgeLabel": "messageCount",
                      "nodeSize": null,
                      "staticNodeSize": 100,
                      "colorSettings": {
                        "nodeColorField": "id",
                        "type": 1,
                        "colorPalette": "default"
                      },
                      "hivesMargin": 5
                    }
                  },
                  "customWidth": "75",
                  "conditionalVisibilities": [
                    {
                      "parameterName": "SelectedDevice",
                      "comparison": "isNotEqualTo",
                      "value": "default"
                    },
                    {
                      "parameterName": "ShowPane",
                      "comparison": "isEqualTo",
                      "value": "messages"
                    },
                    {
                      "parameterName": "messaging-view",
                      "comparison": "isEqualTo",
                      "value": "graph"
                    }
                  ],
                  "name": "message-graph"
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "mainAction",
                "comparison": "isEqualTo",
                "value": "devicedetails"
              },
              {
                "parameterName": "SelectedDevice",
                "comparison": "isNotEqualTo",
                "value": "default"
              }
            ],
            "name": "devicedetails-group"
          }
        ]
      },
      "name": "device-group",
      "styleSettings": {
        "margin": "-8px 0px"
      }
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}