{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{resource}"
        ],
        "parameters": [
          {
            "id": "e2b5cd30-7276-477f-a6bb-07da25ba5e5f",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "label": "Time Range",
            "type": 4,
            "description": "Filter data by time range",
            "isRequired": true,
            "value": {
              "durationMs": 14400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            }
          },
          {
            "id": "7aa94d19-4c5b-40e2-b14f-e29736a8f90c",
            "version": "KqlParameterItem/1.0",
            "name": "resource",
            "type": 5,
            "isRequired": true,
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.containerservice/managedclusters": true,
                "microsoft.kubernetes/connectedclusters": true,
                "microsoft.operationalinsights/workspaces": true
              },
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::1",
            "value": ""
          },
          {
            "id": "3a3fdabe-6173-4e2b-8658-38c0195fd7e2",
            "version": "KqlParameterItem/1.0",
            "name": "resourceType",
            "type": 7,
            "isRequired": true,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{resource:resourcetype}\\\"\",\"transformers\":null}",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 8
          },
          {
            "id": "9767de49-ba31-4847-9ffc-714c02e7523c",
            "version": "KqlParameterItem/1.0",
            "name": "clusterId",
            "type": 1,
            "description": "Filter workspace by cluster id",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange"
          },
          {
            "id": "cba109cf-db6e-4261-8d3a-fe038593622d",
            "version": "KqlParameterItem/1.0",
            "name": "clusterIdWhereClause",
            "type": 1,
            "description": "Add to queries to filter by cluster id",
            "value": "| where \"a\" == \"a\"",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "resourceType",
                  "operator": "contains",
                  "rightValType": "static",
                  "rightVal": "microsoft.operationalinsights/workspaces",
                  "resultValType": "static",
                  "resultVal": "| where ClusterId =~ '{clusterId}'"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where \"a\" == \"a\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange"
          },
          {
            "id": "ee080bd8-83dc-4fa0-b688-b2f16b956b92",
            "version": "KqlParameterItem/1.0",
            "name": "workloadType",
            "label": "Workload Type",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n| distinct ControllerKind\r\n| where isempty(ControllerKind) == false\r\n| order by ControllerKind asc",
            "crossComponentResources": [
              "{resource}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "",
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "cf611d4b-aa93-4949-a7a1-c1d174af29ca",
            "version": "KqlParameterItem/1.0",
            "name": "workloadKindWhereClause",
            "type": 1,
            "value": "| where ControllerKind in ('DaemonSet','ReplicaSet','StatefulSet')",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (workloadType is not empty ), result = '| where ControllerKind in ({workloadType})'",
                "criteriaContext": {
                  "leftOperand": "workloadType",
                  "operator": "isNotNull",
                  "rightValType": "static",
                  "rightVal": "unset",
                  "resultValType": "static",
                  "resultVal": "| where ControllerKind in ({workloadType})"
                }
              },
              {
                "condition": "else result = '| where \"a\" == \"a\"'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where \"a\" == \"a\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange"
          },
          {
            "id": "034caae5-bee3-4b66-8f80-c120a2a25c77",
            "version": "KqlParameterItem/1.0",
            "name": "namespace",
            "label": "Namespace",
            "type": 2,
            "description": "Filter the workbook by namespace",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n| distinct Namespace\r\n| where isnotempty(Namespace)\r\n| order by Namespace asc",
            "crossComponentResources": [
              "{resource}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1",
                "value::all"
              ],
              "selectAllValue": "",
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "faeee248-e4c3-4fae-b435-ef5fb6dabe3b",
            "version": "KqlParameterItem/1.0",
            "name": "namespaceWhereClause",
            "type": 1,
            "value": "| where Namespace in ('aks-periscope','default','fluentd','gatekeeper-system','kube-system','monitoring')",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (namespace is not empty ), result = '| where Namespace in ({namespace})'",
                "criteriaContext": {
                  "leftOperand": "namespace",
                  "operator": "isNotNull",
                  "rightValType": "static",
                  "rightVal": "unset",
                  "resultValType": "static",
                  "resultVal": "| where Namespace in ({namespace})"
                }
              },
              {
                "condition": "else result = '| where \"a\" == \"a\"'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where \"a\" == \"a\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange"
          },
          {
            "id": "8943e259-1dde-44cd-a00b-e815eea9de34",
            "version": "KqlParameterItem/1.0",
            "name": "workloadName",
            "label": "Workload Name",
            "type": 2,
            "description": "Filter the data for a particular workload",
            "isRequired": true,
            "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n{namespaceWhereClause}\r\n{workloadKindWhereClause}\r\n| distinct ControllerName\r\n| where isnotempty(ControllerName)\r\n| order by ControllerName asc",
            "crossComponentResources": [
              "{resource}"
            ],
            "value": "aks-link-7c88488649",
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "00a9be6c-ab0b-400b-b195-9775a47ecddd",
            "version": "KqlParameterItem/1.0",
            "name": "podStatus",
            "label": "Pod Status",
            "type": 2,
            "description": "Filter by Pod status like Pending/Running/Failed etc.",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n| where ControllerName == '{workloadName}'\r\n| distinct PodStatus\r\n| where isnotempty(PodStatus)\r\n| order by PodStatus asc",
            "crossComponentResources": [
              "{resource}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "",
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "388ea6aa-12d8-485a-8e80-b4d7b8994bd8",
            "version": "KqlParameterItem/1.0",
            "name": "podStatusWhereClause",
            "type": 1,
            "value": "| where PodStatus in ('Running')",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "podStatus",
                  "operator": "isNotNull",
                  "rightValType": "static",
                  "rightVal": "unset",
                  "resultValType": "static",
                  "resultVal": "| where PodStatus in ({podStatus})"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where \"a\" == \"a\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 2592000000
            },
            "timeContextFromParameter": "timeRange"
          },
          {
            "id": "64de23e6-96b5-4105-b65d-36e40f73f4ec",
            "version": "KqlParameterItem/1.0",
            "name": "podName",
            "label": "Pod Name",
            "type": 2,
            "description": "Filter by pod name ",
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n| where ControllerName == '{workloadName:value}'\r\n{podStatusWhereClause}\r\n| summarize arg_max(TimeGenerated, PodStatus) by Name\r\n| project Name\r\n| where isempty(Name) == false\r\n| order by Name asc",
            "crossComponentResources": [
              "{resource}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "",
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 14400000
            },
            "timeContextFromParameter": "timeRange",
            "defaultValue": "value::all",
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "4f7059c2-ebd7-4fc2-86c4-c51e66703582",
            "version": "KqlParameterItem/1.0",
            "name": "podNameWhereClause",
            "type": 1,
            "value": "| where PodName in ('aks-link-7c88488649-wrdhh')",
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "condition": "if (podName is not empty ), result = '| where PodName in ({podName})'",
                "criteriaContext": {
                  "leftOperand": "podName",
                  "operator": "isNotNull",
                  "rightValType": "static",
                  "rightVal": "unset",
                  "resultValType": "static",
                  "resultVal": "| where PodName in ({podName})"
                }
              },
              {
                "condition": "else result = '| where \"a\" == \"a\"'",
                "criteriaContext": {
                  "operator": "Default",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where \"a\" == \"a\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange"
          },
          {
            "id": "e60298ff-36da-485e-acea-73c0692b8446",
            "version": "KqlParameterItem/1.0",
            "name": "workloadNamespaceText",
            "type": 1,
            "description": "For displaying name space of the selected workload",
            "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n| where ControllerName == '{workloadName}'\r\n| take 1 \r\n| project Namespace",
            "crossComponentResources": [
              "{resource}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 0,
            "resourceType": "{resourceType}"
          },
          {
            "id": "9f8d0d65-d7bc-42c9-bc5c-b394288b5216",
            "version": "KqlParameterItem/1.0",
            "name": "workloadTypeText",
            "type": 1,
            "description": "For displaying workload type of the selected workload",
            "query": "KubePodInventory\r\n{clusterIdWhereClause}\r\n| where ControllerName == '{workloadName}'\r\n| take 1 \r\n| project ControllerKind",
            "crossComponentResources": [
              "{resource}"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "timeRange",
            "queryType": 0,
            "resourceType": "{resourceType}"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "{resourceType}"
      },
      "name": "pills"
    },
    {
      "type": 1,
      "content": {
        "json": "Workload: {workloadName} "
      },
      "conditionalVisibility": {
        "parameterName": "workloadName",
        "comparison": "isNotEqualTo",
        "value": ""
      },
      "customWidth": "0",
      "name": "workload-text-box",
      "styleSettings": {
        "margin": "0 0 0 0",
        "padding": "10px",
        "maxWidth": "100",
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "Workload Type: {workloadTypeText} "
      },
      "conditionalVisibility": {
        "parameterName": "workloadTypeText",
        "comparison": "isNotEqualTo",
        "value": ""
      },
      "customWidth": "0",
      "name": "workload-type-text-box",
      "styleSettings": {
        "margin": "0 0 0 0",
        "padding": "10px",
        "maxWidth": "100",
        "showBorder": true
      }
    },
    {
      "type": 1,
      "content": {
        "json": "Namespace: {workloadNamespaceText}"
      },
      "conditionalVisibility": {
        "parameterName": "workloadNamespaceText",
        "comparison": "isNotEqualTo",
        "value": ""
      },
      "customWidth": "0",
      "name": "namespace-text-box",
      "styleSettings": {
        "margin": "0 0 0 0",
        "padding": "10px",
        "maxWidth": "100",
        "showBorder": true
      }
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "d1c4f545-a8ab-4677-bb83-f44f2e4277d7",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "id": "29da903c-be66-4e13-90e8-8b5f6abcd2d1",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Pod/Container Status",
            "subTarget": "Status",
            "style": "link"
          },
          {
            "id": "4dd8babb-5d13-49da-b57a-abfd6517ba55",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Kubernetes Events",
            "subTarget": "Events",
            "style": "link"
          }
        ]
      },
      "name": "tabs"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet capacityCounterName = 'cpuLimitNanoCores';\r\nlet usageCounterName = 'cpuUsageNanoCores';\r\nlet controllerName= '{workloadName}';\r\nKubePodInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n{clusterIdWhereClause}\r\n| where ControllerName in  (controllerName)\r\n| extend InstanceName = strcat(ClusterId, '/', ContainerName),\r\n         ContainerName = strcat(controllerName, '/', tostring(split(ContainerName, '/')[1])),\r\n         PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| distinct Computer, InstanceName, ContainerName\r\n| join hint.strategy=shuffle (\r\n    Perf\r\n    | where TimeGenerated < endDateTime\r\n    | where TimeGenerated >= startDateTime\r\n    | where ObjectName == 'K8SContainer'\r\n    | where CounterName == capacityCounterName\r\n    | summarize LimitValue = max(CounterValue) by Computer, InstanceName, bin(TimeGenerated, trendBinSize)\r\n    | project Computer, InstanceName, LimitStartTime = TimeGenerated, LimitEndTime = TimeGenerated + trendBinSize, LimitValue, limitA=100\r\n) on Computer, InstanceName\r\n| join kind=inner hint.strategy=shuffle (\r\n    Perf\r\n    | where TimeGenerated < endDateTime + trendBinSize\r\n    | where TimeGenerated >= startDateTime - trendBinSize\r\n    | where ObjectName == 'K8SContainer'\r\n    | where CounterName == usageCounterName\r\n    | project Computer, InstanceName, UsageValue = CounterValue, limit=100, TimeGenerated\r\n) on Computer, InstanceName\r\n| where TimeGenerated >= LimitStartTime and TimeGenerated < LimitEndTime\r\n| project  ContainerName, TimeGenerated, UsagePercent = UsageValue * 100.0 / LimitValue \r\n| summarize AggregatedValue=max(UsagePercent) by bin(TimeGenerated, trendBinSize), ContainerName",
              "size": 0,
              "aggregation": 2,
              "showAnalytics": true,
              "title": "Max CPU Usage by Pods",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "{resourceType}",
              "crossComponentResources": [
                "{resource}"
              ],
              "visualization": "timechart",
              "chartSettings": {
                "ySettings": {
                  "unit": 1,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "50",
            "showPin": true,
            "name": "pods-max-cpu-usage-chart",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet capacityCounterName = 'memoryLimitBytes';\r\nlet usageCounterName = 'memoryRssBytes';\r\nlet controllerName= '{workloadName:value}';\r\nKubePodInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n{clusterIdWhereClause}\r\n| where ControllerName == controllerName\r\n| extend InstanceName = strcat(ClusterId, '/', ContainerName),\r\n         ContainerName = strcat(controllerName, '/', tostring(split(ContainerName, '/')[1])),\r\n         PodName=Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| distinct Computer, InstanceName, ContainerName\r\n| join hint.strategy=shuffle (\r\n    Perf\r\n    | where TimeGenerated < endDateTime\r\n    | where TimeGenerated >= startDateTime\r\n    | where ObjectName == 'K8SContainer'\r\n    | where CounterName == capacityCounterName\r\n    | summarize LimitValue = max(CounterValue) by Computer, InstanceName, bin(TimeGenerated, trendBinSize)\r\n    | project Computer, InstanceName, LimitStartTime = TimeGenerated, LimitEndTime = TimeGenerated + trendBinSize, LimitValue\r\n) on Computer, InstanceName\r\n| join kind=inner hint.strategy=shuffle (\r\n    Perf\r\n    | where TimeGenerated < endDateTime + trendBinSize\r\n    | where TimeGenerated >= startDateTime - trendBinSize\r\n    | where ObjectName == 'K8SContainer'\r\n    | where CounterName == usageCounterName\r\n    | project Computer, InstanceName, UsageValue = CounterValue, TimeGenerated\r\n) on Computer, InstanceName\r\n| where TimeGenerated >= LimitStartTime and TimeGenerated < LimitEndTime\r\n| project Computer, ContainerName, TimeGenerated, UsagePercent = UsageValue * 100.0 / LimitValue\r\n| summarize AggregatedValue = max(UsagePercent) by bin(TimeGenerated, trendBinSize) , ContainerName\r\n",
              "size": 0,
              "aggregation": 2,
              "showAnalytics": true,
              "title": "Max Memory Usage by Pods",
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "{resourceType}",
              "crossComponentResources": [
                "{resource}"
              ],
              "visualization": "timechart",
              "chartSettings": {
                "ySettings": {
                  "unit": 1,
                  "min": null,
                  "max": null
                }
              }
            },
            "customWidth": "50",
            "showPin": true,
            "name": "pods-max-memory-usage-chart",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Overview"
      },
      "name": "overview-tab"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let controllerName= '{workloadName}';\r\nlet endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nKubePodInventory\r\n| where TimeGenerated >= startDateTime\r\n| where TimeGenerated < endDateTime\r\n{clusterIdWhereClause}\r\n| where isnotempty(ClusterName)\r\n| where isnotempty(Namespace)\r\n| where ControllerName == controllerName\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| summarize PodStatus = any(PodStatus) by PodName, TimeGenerated\r\n| make-series Trend = dcount(PodName) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step trendBinSize by PodStatus\r\n| extend PodCount=Trend[(arraylength(Trend)-1)]",
              "size": 3,
              "showAnalytics": true,
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "timeRange",
              "exportFieldName": "PodStatus",
              "exportParameterName": "podStatusTileText",
              "exportDefaultValue": "All",
              "exportToExcelOptions": "all",
              "queryType": 0,
              "resourceType": "{resourceType}",
              "crossComponentResources": [
                "{resource}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "PodStatus",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "PodStatus",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "==",
                        "thresholdValue": "Running",
                        "representation": "success",
                        "text": ""
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Pending",
                        "representation": "2",
                        "text": ""
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Failed",
                        "representation": "failed",
                        "text": ""
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Succeeded",
                        "representation": "success",
                        "text": ""
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Unknown",
                        "representation": "unknown",
                        "text": ""
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": ""
                      }
                    ]
                  }
                },
                "rightContent": {
                  "columnMatch": "PodCount",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "none"
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 9,
                  "formatOptions": {
                    "min": 0,
                    "palette": "blue"
                  }
                },
                "showBorder": true
              }
            },
            "showPin": true,
            "name": "pod-status-tiles"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "55cc0c6d-51df-4e58-9543-c8b21bc71e29",
                  "version": "KqlParameterItem/1.0",
                  "name": "podTileStatusWhereClause",
                  "type": 1,
                  "value": null,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "podStatusTileText",
                        "operator": "!=",
                        "rightValType": "static",
                        "rightVal": "All",
                        "resultValType": "static",
                        "resultVal": "| where PodStatus == '{podStatusTileText}'"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "| where \"a\" == \"a\""
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "timeRange"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.containerservice/managedclusters"
            },
            "name": "pod-status-tile-text"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet controllerName= '{workloadName}';\r\nKubePodInventory\r\n| where TimeGenerated >= startDateTime\r\n| where TimeGenerated < endDateTime\r\n{clusterIdWhereClause}\r\n| where isnotempty(ClusterName)\r\n| where isnotempty(Namespace)\r\n| where ControllerName == controllerName\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podTileStatusWhereClause}\r\n{podNameWhereClause}\r\n| summarize PodRestartCount=max(PodRestartCount) by PodName, bin(TimeGenerated, trendBinSize)\r\n| order by PodName asc nulls last, TimeGenerated asc\r\n| serialize \r\n| extend prevValue=iif(prev(PodName) == PodName, prev(PodRestartCount), PodRestartCount)\r\n| extend RestartCount=PodRestartCount - prevValue\r\n| extend RestartCount=iif(RestartCount < 0, 0, RestartCount) \r\n| project TimeGenerated, PodName, RestartCount\r\n| render timechart",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Pod Restart Trend",
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "{resourceType}",
              "crossComponentResources": [
                "{resource}"
              ]
            },
            "customWidth": "50",
            "showPin": true,
            "name": "pod-restart-trend-chart",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet controllerName= '{workloadName:value}';\r\nKubePodInventory\r\n| where TimeGenerated >= startDateTime\r\n| where TimeGenerated < endDateTime\r\n{clusterIdWhereClause}\r\n| where isnotempty(ClusterName)\r\n| where isnotempty(Namespace)\r\n| where ControllerName == controllerName\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podTileStatusWhereClause}\r\n{podNameWhereClause}\r\n| extend ContainerName=tostring(split(ContainerName, '/')[1])\r\n| where isempty(ContainerName) == false\r\n| summarize ContainerRestartCount=sum(ContainerRestartCount) by ContainerName, bin(TimeGenerated, 1tick)\r\n| order by ContainerName asc nulls last, TimeGenerated asc\r\n| serialize \r\n| extend prevValue=iif(prev(ContainerName) == ContainerName, prev(ContainerRestartCount), ContainerRestartCount)\r\n| extend RestartCount=ContainerRestartCount - prevValue\r\n| extend RestartCount=iif(RestartCount < 0, 0, RestartCount) \r\n| project TimeGenerated, ContainerName, RestartCount\r\n| summarize RestartCount=sum(RestartCount) by ContainerName, bin(TimeGenerated, trendBinSize)",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Container restart trend",
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "{resourceType}",
              "crossComponentResources": [
                "{resource}"
              ],
              "visualization": "timechart"
            },
            "customWidth": "50",
            "showPin": true,
            "name": "container-restart-trend-chart",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet controllerName= '{workloadName}';\r\nKubePodInventory\r\n| where TimeGenerated >= startDateTime\r\n| where TimeGenerated < endDateTime\r\n{clusterIdWhereClause}\r\n| where isnotempty(ClusterName)\r\n| where isnotempty(Namespace)\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| where ControllerName == controllerName\r\n| extend InstanceName = strcat(ClusterId, '/', ContainerName),\r\n         ContainerName = strcat(Name, '/', tostring(split(ContainerName, '/')[1]))\r\n| summarize arg_max(TimeGenerated, *) by ContainerName, Name\r\n{podTileStatusWhereClause}\r\n| extend ContainerLastStatus = todynamic(ContainerLastStatus) \r\n| project TimeGenerated, ContainerName, PodStatus, ContainerStatus, LastState=ContainerLastStatus.lastState, LastStateReason=ContainerLastStatus.reason, LastStateStartTime=ContainerLastStatus.startedAt,\r\nLastStateFinishTime=ContainerLastStatus.finishedAt\r\n",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Container Status for Pods",
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "{resourceType}",
              "crossComponentResources": [
                "{resource}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "formatOptions": {},
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "PodStatus",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Running",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Pending",
                          "representation": "pending",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Failed",
                          "representation": "failed",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "ContainerStatus",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Running",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "waiting",
                          "representation": "pending",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "LastState",
                    "formatter": 0,
                    "formatOptions": {},
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal"
                      },
                      "emptyValCustomText": "-"
                    }
                  },
                  {
                    "columnMatch": "LastStateReason",
                    "formatter": 0,
                    "formatOptions": {},
                    "numberFormat": {
                      "unit": 0,
                      "options": {
                        "style": "decimal"
                      },
                      "emptyValCustomText": "-"
                    }
                  },
                  {
                    "columnMatch": "LastStateStartTime",
                    "formatter": 6,
                    "formatOptions": {},
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "LastStateFinishTime",
                    "formatter": 6,
                    "formatOptions": {},
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    }
                  }
                ]
              },
              "sortBy": []
            },
            "showPin": true,
            "name": "container-status-for-pods-chart"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Status"
      },
      "name": "pod-container-status-tab"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let controllerName= '{workloadName}';\r\nlet trendBinSize = {timeRange:grain};\r\nKubePodInventory\r\n{clusterIdWhereClause}\r\n| where ControllerName == controllerName\r\n| join (\r\nKubeEvents \r\n| project KubeEventType, Name\r\n) on Name\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| summarize count() by KubeEventType ",
              "size": 4,
              "showAnalytics": true,
              "title": "Kube Events Types",
              "noDataMessage": "There are no Kube events for the selected criteria",
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "timeRange",
              "exportFieldName": "KubeEventType",
              "exportParameterName": "kubeEventType",
              "exportDefaultValue": "All",
              "queryType": 0,
              "resourceType": "{resourceType}",
              "crossComponentResources": [
                "{resource}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "KubeEventType",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "colors",
                    "thresholdsGrid": [
                      {
                        "operator": "==",
                        "thresholdValue": "Error",
                        "representation": "redBright",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Warning",
                        "representation": "yellow",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Normal",
                        "representation": "green",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "gray",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {},
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "showBorder": false
              }
            },
            "customWidth": "30",
            "showPin": true,
            "name": "kube-event-types-tiles"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "a6b031e3-3d7a-42f2-8cb5-07e8b0f8158c",
                  "version": "KqlParameterItem/1.0",
                  "name": "kubeEventWhereClause",
                  "type": 1,
                  "value": null,
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "kubeEventType",
                        "operator": "!=",
                        "rightValType": "static",
                        "rightVal": "All",
                        "resultValType": "static",
                        "resultVal": "| where KubeEventType == '{kubeEventType}'"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "| where \"a\" == \"a\""
                      }
                    }
                  ],
                  "timeContext": {
                    "durationMs": 14400000
                  },
                  "timeContextFromParameter": "timeRange"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "1",
            "name": "kube-event-where-clause"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let controllerName= '{workloadName}';\r\nlet trendBinSize = {timeRange:grain};\r\nKubePodInventory\r\n{clusterIdWhereClause}\r\n| where ControllerName == controllerName\r\n| join (\r\nKubeEvents\r\n| project Reason, Name\r\n) on Name\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n{kubeEventWhereClause}\r\n| summarize count() by Reason \r\n\r\n",
              "size": 4,
              "showAnalytics": true,
              "title": "Kube Event Reasons",
              "noDataMessage": "There are no Kube events for the selected criteria",
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "timeRange",
              "exportFieldName": "Reason",
              "exportParameterName": "kubeEventReason",
              "exportDefaultValue": "All",
              "exportToExcelOptions": "all",
              "queryType": 0,
              "resourceType": "{resourceType}",
              "crossComponentResources": [
                "{resource}"
              ],
              "visualization": "piechart",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "KubeEventType",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "colors",
                    "thresholdsGrid": [
                      {
                        "operator": "==",
                        "thresholdValue": "Error",
                        "representation": "redBright",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Warning",
                        "representation": "yellow",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Normal",
                        "representation": "green",
                        "text": "{0}{1}"
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "gray",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {},
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "showBorder": false
              }
            },
            "customWidth": "60",
            "showPin": true,
            "name": "kube-event-reasons-piechart"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet controllerName= '{workloadName:value}';\r\nKubePodInventory\r\n| where TimeGenerated >= startDateTime\r\n| where TimeGenerated < endDateTime\r\n{clusterIdWhereClause}\r\n| where isnotempty(ClusterName)\r\n| where isnotempty(Namespace)\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| join (KubeEvents\r\n{kubeEventWhereClause}\r\n| where TimeGenerated >= startDateTime\r\n| where TimeGenerated < endDateTime)\r\non Name, $left.Name == $right.Name\r\n| where ControllerName == controllerName\r\n| extend Priority = iif(isempty(Computer), 1, 0)\r\n| order by Priority desc, TimeGenerated desc\r\n| project TimeGenerated=TimeGenerated1, KubeEventType, PodName=Name,Reason, EventMessage=Message, NodeName=Computer\r\n",
              "size": 0,
              "aggregation": 5,
              "showAnalytics": true,
              "title": "Controller Kube Events",
              "noDataMessage": "There are no Kube events for the selected criteria",
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "{resourceType}",
              "crossComponentResources": [
                "{resource}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 6,
                    "formatOptions": {},
                    "dateFormat": {
                      "showUtcTime": null,
                      "formatName": "shortDateTimePattern"
                    }
                  },
                  {
                    "columnMatch": "KubeEventType",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Warning",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Normal",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Error",
                          "representation": "3",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "more",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "NodeName",
                    "formatter": 5,
                    "formatOptions": {}
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "NodeName"
                  ],
                  "expandTopLevel": true
                }
              }
            },
            "customWidth": "90",
            "showPin": true,
            "name": "controller-kube-events-grid"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Events"
      },
      "name": "kubernetes-events-tab"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}