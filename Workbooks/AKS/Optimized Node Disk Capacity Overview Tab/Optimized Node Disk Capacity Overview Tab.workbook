{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "fc07cb35-856f-44ce-85a6-02397b06aef3",
                  "version": "KqlParameterItem/1.0",
                  "name": "Resource",
                  "type": 5,
                  "isRequired": true,
                  "value": "value::1",
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "resourceTypeFilter": {
                      "microsoft.containerservice/managedclusters": true,
                      "microsoft.kubernetes/connectedclusters": true
                    },
                    "additionalResourceOptions": [
                      "value::1"
                    ]
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "timeRange"
                },
                {
                  "id": "500fc7d9-c197-442a-901c-d82104a8a51b",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceType",
                  "type": 7,
                  "isRequired": true,
                  "query": "project '{Resource:resourcetype}'\r\n| take 1",
                  "value": "value::1",
                  "isHiddenWhenLocked": true,
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::1"
                    ]
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "c4f93b7b-576e-4655-9636-bbddee68c140",
                  "version": "KqlParameterItem/1.0",
                  "name": "clusterId",
                  "type": 1,
                  "isHiddenWhenLocked": true
                },
                {
                  "id": "656b6f7c-d85e-4bf0-b65e-e5f7c5b0373b",
                  "version": "KqlParameterItem/1.0",
                  "name": "clusterIdWhereClause",
                  "type": 1,
                  "value": "| where 'a' == 'a'",
                  "isHiddenWhenLocked": true,
                  "criteriaData": [
                    {
                      "criteriaContext": {
                        "leftOperand": "clusterId",
                        "operator": "isNotNull",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "| where ClusterId ~= '{clusterId}'"
                      }
                    },
                    {
                      "criteriaContext": {
                        "operator": "Default",
                        "rightValType": "param",
                        "resultValType": "static",
                        "resultVal": "| where 'a' == 'a'"
                      }
                    }
                  ],
                  "timeContextFromParameter": "timeRange"
                },
                {
                  "id": "08bdcd8f-68e6-42c1-b82a-7302463d8901",
                  "version": "KqlParameterItem/1.0",
                  "name": "timeRange",
                  "label": "Time Range",
                  "type": 4,
                  "description": "Filter by time range",
                  "isRequired": true,
                  "value": {
                    "durationMs": 21600000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 300000
                      },
                      {
                        "durationMs": 900000
                      },
                      {
                        "durationMs": 1800000
                      },
                      {
                        "durationMs": 3600000
                      },
                      {
                        "durationMs": 14400000
                      },
                      {
                        "durationMs": 43200000
                      },
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 172800000
                      },
                      {
                        "durationMs": 259200000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2419200000
                      },
                      {
                        "durationMs": 2592000000
                      },
                      {
                        "durationMs": 5184000000
                      },
                      {
                        "durationMs": 7776000000
                      }
                    ],
                    "allowCustom": true
                  }
                },
                {
                  "id": "a9d18789-a7eb-4fe4-b679-a26a835615a8",
                  "version": "KqlParameterItem/1.0",
                  "name": "selectedNodes1",
                  "label": "Node",
                  "type": 2,
                  "description": "Filter by node",
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'disk' or Namespace =~ 'container.azm.ms/disk'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| project HostName = tostring(Tags.hostName)\r\n| distinct HostName\r\n| project value = HostName, label = HostName, selected = false\r\n| sort by label asc\r\n",
                  "crossComponentResources": [
                    "{Resource}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 21600000
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "{ResourceType}"
                },
                {
                  "id": "bdb126c9-59e6-46af-b2a4-59a0511b94d3",
                  "version": "KqlParameterItem/1.0",
                  "name": "selectedDevices1",
                  "label": "Device",
                  "type": 2,
                  "description": "Filter by device",
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'disk' or Namespace =~ 'container.azm.ms/disk'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| project HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.device))\r\n| where '*' in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| distinct Device\r\n| project value = Device, label = Device, selected = false\r\n| sort by label asc\r\n",
                  "crossComponentResources": [
                    "{Resource}"
                  ],
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "selectAllValue": "*",
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "timeRange",
                  "queryType": 0,
                  "resourceType": "{ResourceType}"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "{ResourceType}"
            },
            "name": "dropdowns-under-overview-tab"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let usedDiskUnhealthyThreshold = 90;\r\nlet usedDiskCriticalThreshold = 99;\r\nlet data = materialize(InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'disk' or Namespace == 'container.azm.ms/disk'\r\n| where Name == 'used_percent'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| extend HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.device))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where \"*\" in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where \"*\" in ({selectedDevices1}) or Device in ({selectedDevices1})\r\n| summarize UsedDisk = max(Val) by NodeDisk\r\n| extend State = iff(UsedDisk >= usedDiskCriticalThreshold, 'Critical disks', iif((UsedDisk >= usedDiskUnhealthyThreshold and UsedDisk < usedDiskCriticalThreshold), 'Unhealthy disks', 'Healthy disks'))\r\n);\r\ndata\r\n| summarize Count = count(), Disks = makeset(NodeDisk) by State\r\n| union (\r\n    data\r\n    | summarize Count = count(), Disks = dynamic([\"*\"])\r\n    | extend State = 'All disks'\r\n)\r\n| join kind = fullouter (datatable (State: string) ['All disks', 'Critical disks', 'Unhealthy disks', 'Healthy disks']) on State\r\n| extend Count = iff(State == '', 0, Count), Disks = iff(State == '', dynamic([]), Disks)\r\n| order by Count desc\r\n",
              "size": 4,
              "aggregation": 2,
              "title": "💡 Click on a tile to filter by disks in that state",
              "timeContext": {
                "durationMs": 21600000
              },
              "timeContextFromParameter": "timeRange",
              "timeBrushParameterName": "filteredTimeRange",
              "exportFieldName": "Disks",
              "exportParameterName": "DisksOfSelectedState",
              "exportDefaultValue": "[\"*\"]",
              "queryType": 0,
              "resourceType": "{ResourceType}",
              "crossComponentResources": [
                "{Resource}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "State1",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "State1",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "==",
                        "thresholdValue": "Critical disks",
                        "representation": "4",
                        "text": ""
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Unhealthy disks",
                        "representation": "2",
                        "text": ""
                      },
                      {
                        "operator": "==",
                        "thresholdValue": "Healthy disks",
                        "representation": "success",
                        "text": ""
                      },
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": null,
                        "text": ""
                      }
                    ]
                  },
                  "numberFormat": {
                    "unit": 0,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false
                    }
                  }
                },
                "rightContent": {
                  "columnMatch": "Count",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "none"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "maximumFractionDigits": 2
                    }
                  }
                },
                "showBorder": true
              }
            },
            "name": "tiles-under-overview-tab"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "a3f05500-bcb2-4247-b678-e3245ac4dc60",
                  "version": "KqlParameterItem/1.0",
                  "name": "topN",
                  "label": "Show",
                  "type": 2,
                  "description": "Show the top N disks by used disk % in the chart below",
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "jsonData": "[\r\n    { \"value\": 3, \"label\": \"Top 3\", \"selected\": \"true\" },\r\n    { \"value\": 5, \"label\": \"Top 5\", \"selected\": \"false\" },\r\n    { \"value\": 10, \"label\": \"Top 10\", \"selected\": \"false\" },\r\n    { \"value\": 15, \"label\": \"Top 15\", \"selected\": \"false\" },\r\n    { \"value\": 1000, \"label\": \"All\", \"selected\": \"false\" }\r\n]",
                  "value": "5"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 11"
          },
          {
            "type": 1,
            "content": {
              "json": "<h3>{topN:label} Disks by Used Disk %</h3>"
            },
            "name": "text - 12"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let selectedStateDisks = dynamic({DisksOfSelectedState});\r\nlet data = InsightsMetrics\r\n| where Origin == 'container.azm.ms/telegraf'\r\n| where Namespace == 'disk' or Namespace =~ 'container.azm.ms/disk'\r\n| where Name == 'used_percent'\r\n| extend Tags = todynamic(Tags)\r\n| extend ClusterID = tostring(Tags['container.azm.ms/clusterId'])\r\n{clusterIdWhereClause}\r\n| extend HostName = tostring(Tags.hostName), Device = strcat('/dev/', tostring(Tags.device))\r\n| extend NodeDisk = strcat(HostName, Device)\r\n| where \"*\" in ({selectedNodes1}) or HostName in ({selectedNodes1})\r\n| where \"*\" in ({selectedDevices1}) or Device in ({selectedDevices1})\r\n| where NodeDisk in (selectedStateDisks) or '*' in (selectedStateDisks);\r\nlet mostUsedDisks = data\r\n| top-nested {topN} of NodeDisk by MaxVal = max(Val);\r\ndata\r\n| where NodeDisk in (mostUsedDisks)\r\n| make-series ['Used Disk %'] = max(Val) default = 0 on TimeGenerated from {timeRange:start} to {timeRange:end} step {timeRange:grain} by NodeDisk\r\n",
              "size": 0,
              "aggregation": 2,
              "showAnalytics": true,
              "timeContext": {
                "durationMs": 21600000
              },
              "timeContextFromParameter": "timeRange",
              "queryType": 0,
              "resourceType": "{ResourceType}",
              "crossComponentResources": [
                "{Resource}"
              ],
              "visualization": "timechart"
            },
            "showPin": true,
            "name": "top-used-disk-grid"
          }
        ]
      },
      "name": "group - 0"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}