{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscription}"
        ],
        "parameters": [
          {
            "id": "a9f2f311-a9a7-45ae-93d7-f1fe6e07fa02",
            "version": "KqlParameterItem/1.0",
            "name": "WorkloadTag",
            "type": 1,
            "isRequired": true,
            "value": "telegraf",
            "isHiddenWhenLocked": true,
            "label": "Workload tag"
          },
          {
            "id": "1f74ed9a-e3ed-498d-bd5b-f68f3836a117",
            "version": "KqlParameterItem/1.0",
            "name": "Subscription",
            "label": "Subscriptions",
            "type": 6,
            "description": "All subscriptions with virtual machines",
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| project id = tolower(id), subscriptionId\r\n| join kind = leftouter (Resources\r\n    | where type =~ 'microsoft.compute/virtualmachines/extensions' and name =~ 'workload.linuxconfigagent'\r\n    | project Vm = extract(@'(.+)/extensions/.+', 1, tolower(id)), Insight = tostring(tags[\"monitoring-insight\"])\r\n    | where Vm != '' and Insight == '{WorkloadTag}'\r\n    ) on $left.id == $right.Vm\r\n| summarize Onboarded = countif(Vm != ''), All = count() by subscriptionId\r\n| order by Onboarded desc, All desc\r\n| extend Row = row_number()\r\n| project value = subscriptionId, label = subscriptionId, selected = Row == 1\r\n",
            "crossComponentResources": [
              "value::selected"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "f60ea0a0-3703-44ca-a59b-df0246423f41",
            "version": "KqlParameterItem/1.0",
            "name": "Resources",
            "label": "All virtual machines",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| order by name asc\r\n| extend Rank = row_number()\r\n| project value = id, label = name, selected = false, group = resourceGroup",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "5e510131-51a9-40c0-b1a8-328932b5f46e",
            "version": "KqlParameterItem/1.0",
            "name": "OnboardedComputers",
            "label": "Monitored virtual machines",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": " Resources\n| where id in~ ({Resources})\n| project ['Virtual machine'] = tolower(id), Name = name\n| join kind = inner (Resources\n    | where type =~ 'microsoft.compute/virtualmachines/extensions' and name =~ 'workload.linuxconfigagent'\n    | project Vm = extract(@'(.+)/extensions/.+', 1, tolower(id)), Insight = tostring(tags[\"monitoring-insight\"])\n    | where Vm != '' and Insight == '{WorkloadTag}'\n    ) on $left.['Virtual machine'] == $right.Vm\n| project Name\n",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "",
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "4908b8cf-7658-4356-9aa5-5dc5aca7a1aa",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time range",
            "type": 4,
            "value": {
              "durationMs": 14400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            }
          },
          {
            "id": "619bf90b-5093-47cc-83a3-bf009257bc7d",
            "version": "KqlParameterItem/1.0",
            "name": "Workspaces",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\n| where id in~ ({Resources})\n| project ['Virtual machine'] = tolower(id), Name = name, ['Resource group'] = strcat('/subscriptions/', subscriptionId, '/resourceGroups/', resourceGroup), Subscription = subscriptionId, Location = location,  OsType = iff(properties.osProfile.windowsConfiguration == '', 'Linux', 'Windows'), Offer = tostring(properties.storageProfile.imageReference.offer)\n| join kind = inner (Resources\n    | where type =~ 'microsoft.compute/virtualmachines/extensions' and name =~ 'workload.linuxconfigagent'\n    | project Vm = extract(@'(.+)/extensions/.+', 1, tolower(id)), Insight = tostring(tags[\"monitoring-insight\"])\n    | where Vm != '' and Insight == '{WorkloadTag}'\n    ) on $left.['Virtual machine'] == $right.Vm\n| join kind = inner (Resources\n    | where type =~ 'microsoft.compute/virtualmachines/extensions' and properties.type == 'OmsAgentForLinux' and properties.publisher == 'Microsoft.EnterpriseCloud.Monitoring'\n    | project Vm = extract(@'(.+)/extensions/.+', 1, tolower(id)), WorkspaceId = tostring(properties.settings.workspaceId)\n    | where Vm != ''\n    ) on $left.['Virtual machine'] == $right.Vm\n| project-away Vm, Vm1\n| join kind = leftouter (Resources\n| where type =~ 'microsoft.operationalinsights/workspaces'\n| project Workspace = id, location, WorkspaceId = tostring(properties.customerId)) on WorkspaceId\n| summarize by Workspace\n| project value = Workspace, label = Workspace, selected = true\n",
            "crossComponentResources": [
              "value::all"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "e6598941-f9f5-4deb-bd0d-48658ade8297",
            "version": "KqlParameterItem/1.0",
            "name": "OnboardedComputerCount",
            "type": 1,
            "isRequired": true,
            "query": " Resources\n| where id in~ ({Resources})\n| project ['Virtual machine'] = tolower(id), Name = name\n| join kind = inner (Resources\n    | where type =~ 'microsoft.compute/virtualmachines/extensions' and name =~ 'workload.linuxconfigagent'\n    | project Vm = extract(@'(.+)/extensions/.+', 1, tolower(id)), Insight = tostring(tags[\"monitoring-insight\"])\n    | where Vm != '' and Insight == '{WorkloadTag}'\n    ) on $left.['Virtual machine'] == $right.Vm\n| count\n| project Count = tostring(Count)\n",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "label": "Onboarded computer count"
          },
          {
            "id": "bb7b9387-0445-4ee2-9fc7-f52cb9f59e8c",
            "version": "KqlParameterItem/1.0",
            "name": "TotalComputers",
            "type": 1,
            "query": "Resources\n| where type =~ 'microsoft.compute/virtualmachines'\n| count\n| project Count = tostring(Count)",
            "crossComponentResources": [
              "{Subscription}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "label": "Total computers count"
          },
          {
            "id": "73b7e4ff-24da-405c-9ad3-c9f398447f6b",
            "version": "KqlParameterItem/1.0",
            "name": "OnboardingTemplate",
            "label": "Onboarding template",
            "type": 1,
            "isRequired": true,
            "value": "Community-Workbooks/Workloads/Onboard Telegraf monitoring",
            "isHiddenWhenLocked": true
          }
        ],
        "style": "above",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters - 0"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "c04c3e54-9fcb-4d50-8114-eead359d7c29",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "id": "a9e82a07-022f-42ff-b744-3ee6a3dada43",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Clients",
            "subTarget": "Clients",
            "style": "link"
          },
          {
            "id": "c9badf5b-d249-43d4-9f1f-7ec4cca11254",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Statements",
            "subTarget": "Statements",
            "style": "link"
          },
          {
            "id": "cb6c396b-3fdf-4e5f-9302-3c861b15f9b4",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Performance",
            "subTarget": "Performance",
            "style": "link"
          },
          {
            "id": "ca61e585-7aa6-4c92-b1b4-2ccc100c9290",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Activities",
            "subTarget": "Activities",
            "style": "link"
          },
          {
            "id": "50ef1672-b06e-4c83-9be0-8bb953e7edc3",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Explore metrics",
            "subTarget": "Explore metrics",
            "style": "link"
          },
          {
            "id": "6d4f1150-c6f5-4523-8b74-49a6183d530c",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Alerts",
            "subTarget": "Alerts",
            "style": "link"
          },
          {
            "id": "996942f6-508b-408f-ad60-27bb1ba209f2",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Enable monitoring",
            "subTarget": "Enable monitoring",
            "style": "link"
          }
        ]
      },
      "name": "links - 3",
      "styleSettings": {
        "margin": "15px 0 0 0"
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let CPUData = InsightsMetrics\r\n| where (Computer in ({OnboardedComputers}) or '*' in ({OnboardedComputers})) and Namespace == \"Processor\"\r\n| summarize arg_max(TimeGenerated,Val) by Computer, _ResourceId\r\n| project CPU = Val, Computer, Id = _ResourceId;\r\nlet CPUTrendData = InsightsMetrics\r\n| where (Computer in ({OnboardedComputers}) or '*' in ({OnboardedComputers})) and Namespace == \"Processor\"\r\n| make-series CPUTrend = avg(Val) on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Computer;\r\nlet MemData = InsightsMetrics\r\n| where (Computer in ({OnboardedComputers}) or '*' in ({OnboardedComputers})) and Namespace == \"Memory\"\r\n| summarize arg_max(TimeGenerated,Val) by Computer, _ResourceId\r\n| project Memory = Val, Computer, _ResourceId;\r\nlet MemTrendData = InsightsMetrics\r\n| where (Computer in ({OnboardedComputers}) or '*' in ({OnboardedComputers})) and Namespace == \"Memory\"\r\n| make-series MemTrend = avg(Val) on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Computer;\r\nCPUData\r\n| join kind = inner (CPUTrendData) on Computer\r\n| join kind = inner (MemData) on Computer\r\n| join kind = inner (MemTrendData) on Computer\r\n| project Id, CPU, CPUTrend, Memory, MemTrend",
              "size": 0,
              "timeContext": {
                "durationMs": 14400000
              },
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "CPU",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": ">",
                          "thresholdValue": "80",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": ">",
                          "thresholdValue": "95",
                          "representation": "4",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 1,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "CPUTrend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "max": 100,
                      "palette": "greenRed"
                    }
                  },
                  {
                    "columnMatch": "Memory",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal",
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "MemTrend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "Id",
                    "label": "Computer"
                  },
                  {
                    "columnId": "CPU",
                    "label": "CPU %"
                  },
                  {
                    "columnId": "CPUTrend",
                    "label": "CPU % over Time"
                  },
                  {
                    "columnId": "Memory",
                    "label": "Available Memory"
                  },
                  {
                    "columnId": "MemTrend",
                    "label": "Available Memory over Time"
                  }
                ]
              }
            },
            "name": "query - 0"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Overview"
      },
      "name": "Overview"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let data = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"connectedNativeClients_Value\"\r\n| summarize arg_max(TimeGenerated,Val) by Computer, _ResourceId\r\n| project Computer, ['Clients'] = Val, [\"Id\"] =_ResourceId;\r\nlet ClientData = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"connectedNativeClients_Value\"\r\n| make-series ClientsOverTime = avg(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Computer;\r\nlet TimeoutData = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"Timeouts_Count\"\r\n| summarize arg_max(TimeGenerated,Val) by Computer\r\n| project Computer, ['Timeouts'] = Val;\r\nlet TimeoutTrendData = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"Timeouts_Count\"\r\n| make-series TimeoutTrend = avg(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Computer;\r\nlet AvgLatencyData = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"Latency_OneMinuteRate\"\r\n| summarize arg_max(TimeGenerated,Val) by Computer\r\n| project Computer, ['AvgLatency'] = Val;\r\nlet AvgLatencyTrendData = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"Latency_OneMinuteRate\"\r\n| make-series AvgLatencyTrend = avg(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Computer;\r\nlet MaxLatencyData = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"Latency_Max\"\r\n| summarize arg_max(TimeGenerated,Val) by Computer\r\n| project Computer, ['MaxLatency'] = Val;\r\nlet MaxLatencyTrendData = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"Latency_Max\"\r\n| make-series MaxLatencyTrend = avg(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Computer;\r\ndata\r\n| join kind = inner (ClientData) on Computer\r\n| join kind = inner (TimeoutData) on Computer\r\n| join kind = inner (TimeoutTrendData) on Computer\r\n| join kind = inner (AvgLatencyData) on Computer\r\n| join kind = inner (AvgLatencyTrendData) on Computer\r\n| join kind = inner (MaxLatencyData) on Computer\r\n| join kind = inner (MaxLatencyTrendData) on Computer\r\n| project Id, Computer, Clients, ['Clients Over Time'] = ClientsOverTime, Timeouts, ['Timeouts over Time'] = TimeoutTrend, ['Avg Latency'] = AvgLatency, ['Avg Latency over Time'] = AvgLatencyTrend, ['Max Latency'] = MaxLatency, ['Max Latency over Time'] = MaxLatencyTrend",
              "size": 0,
              "showAnalytics": true,
              "title": "Client Activity",
              "timeContext": {
                "durationMs": 86400000
              },
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Computer",
                    "formatter": 5,
                    "formatOptions": {
                      "linkColumn": "Id",
                      "linkTarget": "Resource"
                    }
                  },
                  {
                    "columnMatch": "Clients",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    }
                  },
                  {
                    "columnMatch": "Clients Over Time",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    }
                  },
                  {
                    "columnMatch": "Timeouts",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": ">",
                          "thresholdValue": "0",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Timeouts over Time",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "120px"
                    }
                  },
                  {
                    "columnMatch": "Avg Latency",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": ">",
                          "thresholdValue": "1000",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Avg Latency over Time",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "120px"
                    }
                  },
                  {
                    "columnMatch": "Max Latency",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": ">",
                          "thresholdValue": "1000",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    },
                    "numberFormat": {
                      "unit": 23,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Max Latency over Time",
                    "formatter": 5,
                    "formatOptions": {
                      "customColumnWidthSetting": "120px"
                    }
                  }
                ],
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "Id",
                    "label": "Computer"
                  },
                  {
                    "columnId": "Computer"
                  },
                  {
                    "columnId": "Clients"
                  },
                  {
                    "columnId": "Clients Over Time"
                  },
                  {
                    "columnId": "Timeouts"
                  },
                  {
                    "columnId": "Timeouts over Time"
                  },
                  {
                    "columnId": "Avg Latency"
                  },
                  {
                    "columnId": "Avg Latency over Time"
                  },
                  {
                    "columnId": "Max Latency"
                  },
                  {
                    "columnId": "Max Latency over Time"
                  }
                ]
              }
            },
            "showPin": true,
            "name": "query - 0"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Clients"
      },
      "name": "Clients"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let PreparedData = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"PreparedStatementsExecuted_Count\"\r\n| summarize arg_max(TimeGenerated,Val) by Computer, _ResourceId\r\n| project Computer, ['PreparedStatements'] = Val, _ResourceId;\r\nlet PreparedTrendData = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"PreparedStatementsExecuted_Count\"\r\n| make-series PreparedTrend = avg(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Computer;\r\nlet RegularData = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"RegularStatementsExecuted_Count\"\r\n| summarize arg_max(TimeGenerated,Val) by Computer\r\n| project Computer, ['RegularStatements'] = Val;\r\nlet RegularTrendData = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"RegularStatementsExecuted_Count\"\r\n| make-series RegularTrend = avg(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Computer;\r\nPreparedData\r\n| join kind = inner (PreparedTrendData) on Computer\r\n| join kind = inner (RegularData) on Computer\r\n| join kind = inner (RegularTrendData) on Computer\r\n| project _ResourceId, Computer, ['Prepared Statements'] = PreparedStatements, PreparedTrend, ['Regular Statements'] = RegularStatements, RegularTrend",
              "size": 0,
              "showAnalytics": true,
              "title": "Statements",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Computer",
                    "formatter": 5,
                    "formatOptions": {
                      "linkColumn": "_ResourceId",
                      "linkTarget": "Resource",
                      "linkIsContextBlade": false
                    }
                  },
                  {
                    "columnMatch": "Prepared Statements",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    }
                  },
                  {
                    "columnMatch": "PreparedTrend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    }
                  },
                  {
                    "columnMatch": "Regular Statements",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    }
                  },
                  {
                    "columnMatch": "RegularTrend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    }
                  }
                ],
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "_ResourceId",
                    "label": "Computer"
                  },
                  {
                    "columnId": "Computer"
                  },
                  {
                    "columnId": "Prepared Statements"
                  },
                  {
                    "columnId": "PreparedTrend",
                    "label": "Prepared over Time"
                  },
                  {
                    "columnId": "Regular Statements"
                  },
                  {
                    "columnId": "RegularTrend",
                    "label": "Regular over Time"
                  }
                ]
              }
            },
            "showPin": true,
            "name": "query - 1"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Statements"
      },
      "name": "Statements"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let LoadData = InsightsMetrics\r\n| where (Computer in ({OnboardedComputers}) or '*' in ({OnboardedComputers})) and Namespace contains \"cassandra\"\r\n| where Name == \"Load_Count\"\r\n| order by Computer asc, Name asc, TimeGenerated asc\r\n| extend Value = iff(Computer == prev(Computer) and Name == prev(Name) and Val > prev(Val), Val - prev(Val), real(null))\r\n| where isnull(Value) == false\r\n| summarize arg_max(TimeGenerated,Value) by Computer, _ResourceId\r\n| project ['Load'] = Value, Computer, ['Id'] = _ResourceId;\r\nlet LoadTrendData = InsightsMetrics\r\n| where (Computer in ({OnboardedComputers}) or '*' in ({OnboardedComputers})) and Namespace contains \"cassandra\"\r\n| where Name == \"Load_Count\"\r\n| order by Computer asc, Name asc, TimeGenerated asc\r\n| extend Value = iff(Computer == prev(Computer) and Name == prev(Name) and Val > prev(Val), Val - prev(Val), real(0))\r\n| make-series LoadTrend = avg(Value) on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Computer;\r\nlet CommitData = InsightsMetrics\r\n| where (Computer in ({OnboardedComputers}) or '*' in ({OnboardedComputers})) and Namespace contains \"cassandra\"\r\n| where Name == \"TotalCommitLogSize_Value\"\r\n| summarize arg_max(TimeGenerated,Val) by Computer\r\n| project ['Commits'] = Val, Computer;\r\nlet ExceptionData = InsightsMetrics\r\n| where (Computer in ({OnboardedComputers}) or '*' in ({OnboardedComputers})) and Namespace contains \"cassandra\"\r\n| where Name == \"Exceptions_Count\"\r\n| order by Computer asc, Name asc, TimeGenerated asc\r\n| extend Value = iff(Computer == prev(Computer) and Name == prev(Name) and Val > prev(Val), Val - prev(Val), real(0))\r\n| summarize arg_max(TimeGenerated,Value) by Computer\r\n| project ['Exceptions'] = Value, Computer;\r\nlet HintsData = InsightsMetrics\r\n| where (Computer in ({OnboardedComputers}) or '*' in ({OnboardedComputers})) and Namespace contains \"cassandra\"\r\n| where Name == \"TotalHintsInProgress_Count\"\r\n| summarize arg_max(TimeGenerated,Val) by Computer\r\n| project ['Hints'] = Val, Computer;\r\nlet CompactData = InsightsMetrics\r\n| where (Computer in ({OnboardedComputers}) or '*' in ({OnboardedComputers})) and Namespace contains \"cassandra\"\r\n| where Name == \"BytesCompacted_Count\"\r\n| order by Computer asc, Name asc, TimeGenerated asc\r\n| extend Value = iff(Computer == prev(Computer) and Name == prev(Name) and Val > prev(Val), Val - prev(Val), real(0))\r\n| summarize arg_max(TimeGenerated,Value) by Computer\r\n| project ['Bytes Compacted'] = Value, Computer;\r\nlet MemTableData = InsightsMetrics\r\n| where (Computer in ({OnboardedComputers}) or '*' in ({OnboardedComputers})) and Namespace contains \"cassandra\"\r\n| where Name == \"AllMemtablesLiveDataSize_Value\"\r\n| order by Computer asc, Name asc, TimeGenerated asc\r\n| extend Value = iff(Computer == prev(Computer) and Name == prev(Name) and Val > prev(Val), Val - prev(Val), real(0))\r\n| summarize arg_max(TimeGenerated,Value) by Computer\r\n| project ['Mem Table Size'] = Value, Computer;\r\nLoadData\r\n| join kind = inner (LoadTrendData) on Computer\r\n| join kind = inner (CommitData) on Computer\r\n| join kind = inner (ExceptionData) on Computer\r\n| join kind = inner (HintsData) on Computer\r\n| join kind = inner (CompactData) on Computer\r\n| join kind = inner (MemTableData) on Computer\r\n| project Id, Load, LoadTrend, Commits, Exceptions, ['Bytes Compacted'], ['Mem Table Size']",
              "size": 0,
              "aggregation": 3,
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Id",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Load",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false,
                        "maximumFractionDigits": 1
                      }
                    }
                  },
                  {
                    "columnMatch": "LoadTrend",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue"
                    }
                  },
                  {
                    "columnMatch": "Commits",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "yellow"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal",
                        "useGrouping": false
                      }
                    }
                  },
                  {
                    "columnMatch": "Exceptions",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": ">",
                          "thresholdValue": "0",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Bytes Compacted",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "turquoise"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  },
                  {
                    "columnMatch": "Mem Table Size",
                    "formatter": 8,
                    "formatOptions": {
                      "palette": "gray"
                    },
                    "numberFormat": {
                      "unit": 2,
                      "options": {
                        "style": "decimal"
                      }
                    }
                  }
                ],
                "filter": true,
                "labelSettings": [
                  {
                    "columnId": "Id",
                    "label": "Computer"
                  },
                  {
                    "columnId": "Load"
                  },
                  {
                    "columnId": "LoadTrend"
                  },
                  {
                    "columnId": "Commits",
                    "label": "Commit Log Size"
                  },
                  {
                    "columnId": "Exceptions"
                  },
                  {
                    "columnId": "Bytes Compacted"
                  },
                  {
                    "columnId": "Mem Table Size"
                  }
                ]
              },
              "chartSettings": {
                "ySettings": {
                  "numberFormatSettings": {
                    "unit": 2,
                    "options": {
                      "style": "decimal",
                      "useGrouping": true,
                      "maximumFractionDigits": 1
                    }
                  }
                }
              }
            },
            "name": "query - 0"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Performance"
      },
      "name": "Performance"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let Active = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"ActiveTasks_Value\"\r\n| extend parsed = parse_json(Tags)\r\n| extend scope = tostring(parsed.scope)\r\n| summarize arg_max(TimeGenerated,Val) by scope, Computer, _ResourceId\r\n| project scope, Computer, ['ActiveTasks'] = Val, Id = _ResourceId;\r\nlet ActiveTrend = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"ActiveTasks_Value\"\r\n| extend parsed = parse_json(Tags)\r\n| extend scope = tostring(parsed.scope)\r\n| make-series Actives = avg(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by scope,Computer;\r\nlet Pending = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"PendingTasks_Value\"\r\n| extend parsed = parse_json(Tags)\r\n| extend scope = tostring(parsed.scope)\r\n| summarize arg_max(TimeGenerated,Val) by scope, Computer\r\n| project scope, Computer, ['PendingTasks'] = Val;\r\nlet PendingTrend = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"PendingTasks_Value\"\r\n| extend parsed = parse_json(Tags)\r\n| extend scope = tostring(parsed.scope)\r\n| make-series Pending = avg(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by scope,Computer;\r\nlet Total = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"TotalBlockedTasks_Count\"\r\n| extend parsed = parse_json(Tags)\r\n| extend scope = tostring(parsed.scope)\r\n| summarize arg_max(TimeGenerated,Val) by scope, Computer\r\n| project scope, Computer, ['TotalTasks'] = Val;\r\nlet TotalTrend = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"TotalBlockedTasks_Count\"\r\n| extend parsed = parse_json(Tags)\r\n| extend scope = tostring(parsed.scope)\r\n| make-series Total = avg(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by scope,Computer;\r\nlet Completed = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"CompletedTasks_Value\"\r\n| extend parsed = parse_json(Tags)\r\n| extend scope = tostring(parsed.scope)\r\n| summarize arg_max(TimeGenerated,Val) by scope, Computer\r\n| project scope, Computer, ['CompletedTasks'] = Val;\r\nlet CompletedTrend = InsightsMetrics\r\n| where (Computer in ('aruna-cassandra-2') or '*' in ('aruna-cassandra-2')) and Namespace contains \"cassandra\"\r\n| where Name == \"CompletedTasks_Value\"\r\n| extend parsed = parse_json(Tags)\r\n| extend scope = tostring(parsed.scope)\r\n| make-series Completed = avg(Val) default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by scope,Computer;\r\nActive\r\n| join kind = inner (ActiveTrend) on scope\r\n| join kind = inner (Pending) on scope\r\n| join kind = inner (PendingTrend) on scope\r\n| join kind = inner (Total) on scope\r\n| join kind = inner (TotalTrend) on scope\r\n| join kind = inner (Completed) on scope\r\n| join kind = inner (CompletedTrend) on scope\r\n| project Id, Computer, scope, ['Active Tasks'] = ActiveTasks, ['Active Tasks over Time'] = Actives, ['Pending Tasks'] = PendingTasks, ['Pending Tasks over Time'] = Pending, ['Blocked Tasks'] = TotalTasks, ['Blocked Tasks over Time'] = Total, ['Completed Tasks'] = CompletedTasks, ['Completed Tasks over Time'] = Completed",
              "size": 0,
              "showAnalytics": true,
              "title": "Tasks",
              "timeContext": {
                "durationMs": 0
              },
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspaces}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "$gen_group",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Id",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Computer",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "scope",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Active Tasks",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "aggregation": "Sum"
                    }
                  },
                  {
                    "columnMatch": "Active Tasks over Time",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "aggregation": "Sum"
                    }
                  },
                  {
                    "columnMatch": "Pending Tasks",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "aggregation": "Sum"
                    }
                  },
                  {
                    "columnMatch": "Pending Tasks over Time",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "aggregation": "Sum"
                    }
                  },
                  {
                    "columnMatch": "Blocked Tasks",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "aggregation": "Sum"
                    }
                  },
                  {
                    "columnMatch": "Blocked Tasks over Time",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "aggregation": "Sum"
                    }
                  },
                  {
                    "columnMatch": "Completed Tasks",
                    "formatter": 8,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "aggregation": "Sum"
                    }
                  },
                  {
                    "columnMatch": "Completed Tasks over Time",
                    "formatter": 9,
                    "formatOptions": {
                      "min": 0,
                      "palette": "blue",
                      "aggregation": "Sum"
                    }
                  }
                ],
                "filter": true,
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "Id"
                  ],
                  "expandTopLevel": true,
                  "finalBy": "scope"
                },
                "labelSettings": [
                  {
                    "columnId": "Id",
                    "label": "Computer"
                  },
                  {
                    "columnId": "Computer"
                  },
                  {
                    "columnId": "scope"
                  },
                  {
                    "columnId": "Active Tasks"
                  },
                  {
                    "columnId": "Active Tasks over Time"
                  },
                  {
                    "columnId": "Pending Tasks"
                  },
                  {
                    "columnId": "Pending Tasks over Time"
                  },
                  {
                    "columnId": "Blocked Tasks"
                  },
                  {
                    "columnId": "Blocked Tasks over Time"
                  },
                  {
                    "columnId": "Completed Tasks"
                  },
                  {
                    "columnId": "Completed Tasks over Time"
                  }
                ]
              }
            },
            "showPin": true,
            "name": "query - 0"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Activities"
      },
      "name": "Activities"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/Workloads/Enable monitoring group",
        "items": []
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Enable monitoring"
      },
      "name": "Onboarding group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "167a4f9a-2280-451e-8fb8-4bf3dacdc4ec",
                  "version": "KqlParameterItem/1.0",
                  "name": "SuggestedAlerts",
                  "type": 1,
                  "isRequired": true,
                  "value": "[     {         \"AlertName\": \"host-high-cpu\",         \"AlertDescription\": \"Fires when high CPU usage is detected on the host\",         \"AlertThreshold\": 70,         \"AlertTemplate\": \"https://azmonsolutions.blob.core.windows.net/workloadinsights/Alerts/Host/Cpu/azuredeploy.json\"     },     {         \"AlertName\": \"host-used-memory-percentage\",         \"AlertDescription\": \"Fires when Used Memory percentage on the host exceeds a threshold\",         \"AlertThreshold\": 85,         \"AlertTemplate\": \"https://azmonsolutions.blob.core.windows.net/workloadinsights/Alerts/Host/Memory/azuredeploy.json\"     } ]",
                  "isHiddenWhenLocked": true,
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 0"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "template",
              "loadFromTemplateId": "Community-Workbooks/Workloads/Alerts group",
              "items": []
            },
            "name": "Alert"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Alerts"
      },
      "name": "Alert group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "template",
        "loadFromTemplateId": "Community-Workbooks/Workloads/Explore metrics group",
        "items": []
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Explore metrics"
      },
      "name": "Explore metrics group"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
