{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Subscriptions}"
        ],
        "parameters": [
          {
            "id": "7d3239b1-19a0-44fd-a771-df82340e0d88",
            "version": "KqlParameterItem/1.0",
            "name": "DefaultResource",
            "type": 5,
            "value": "value::1",
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "resourceTypeFilter": {
                "microsoft.resources/subscriptions": true,
                "microsoft.resources/resourcegroups": true
              },
              "additionalResourceOptions": [
                "value::1"
              ]
            }
          },
          {
            "id": "0caf61ec-d776-4642-8553-5293060a62c7",
            "version": "KqlParameterItem/1.0",
            "name": "ContextFree",
            "type": 1,
            "query": "{\"version\":\"1.0.0\",\"content\":\"\\\"{DefaultResource}\\\"\"}",
            "isHiddenWhenLocked": true,
            "queryType": 8,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "6e82c4c1-769e-4549-bd80-b356ef999efa",
            "version": "KqlParameterItem/1.0",
            "name": "Selection",
            "type": 1,
            "query": "take 1\r\n| extend x = split ({DefaultResource:value}, '/')\r\n| project value = tostring(pack('sub', x[2], 'rg', case(x[4] != 'null', x[4], ''), 'vm', case(x[8] != 'null', x[8], '')))",
            "crossComponentResources": [
              "value::selected"
            ],
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 0
            },
            "timeContextFromParameter": "TimeRange",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "604f6d89-c6f9-4bdb-b4ca-483f56a8946c",
            "version": "KqlParameterItem/1.0",
            "name": "Subscriptions",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "where type in~('microsoft.compute/virtualmachines', 'microsoft.compute/virtualmachinescalesets')\r\n| summarize Count = count() by subscriptionId\r\n| order by Count desc\r\n| extend Rank = row_number()\r\n| project value = subscriptionId, label = subscriptionId, selected = iff(subscriptionId =~ todynamic('{Selection}').sub, true, false)",
            "crossComponentResources": [
              "value::selected"
            ],
            "value": [
              "value::1"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "efc388e8-ac7b-4e72-8573-e97cfe370f16",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceGroup",
            "label": "Resource groups",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "where type in~('microsoft.compute/virtualmachines', 'microsoft.compute/virtualmachinescalesets')\r\n| summarize Count = count() by resourceGroup\r\n| order by Count desc\r\n| extend Rank = row_number()\r\n| project value = resourceGroup, label = resourceGroup, selected = iff(resourceGroup =~ todynamic('{Selection}').rg, true, false)\r\n| order by value asc",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ]
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "ff31cd1b-224e-42bd-8d65-f803ca13ce13",
            "version": "KqlParameterItem/1.0",
            "name": "Resources",
            "label": "Virtual machines",
            "type": 5,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources \r\n| where resourceGroup in~({ResourceGroup}) and type in~('microsoft.compute/virtualmachines', 'microsoft.compute/virtualmachinescalesets')\r\n| project id, name, selected=false, group=iff(type =~ \"microsoft.compute/virtualmachines\", \"Virtual machines\", \"Virtual machine scale sets\")",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ]
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "feb5ccab-6fe6-4c5f-9161-ca0e412bd637",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time range",
            "type": 4,
            "value": {
              "durationMs": 86400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            }
          },
          {
            "id": "d643672d-1bc2-497d-a5ce-20f631ee9399",
            "version": "KqlParameterItem/1.0",
            "name": "ResourceScope",
            "type": 7,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "Resources\r\n| take 1\r\n| project x = dynamic([\"microsoft.compute/virtualmachines\", \"microsoft.compute/virtualmachinescalesets\", \"microsoft.resources/resourcegroups\", \"microsoft.resources/subscriptions\"])\r\n| mvexpand x to typeof(string)\r\n| extend jkey = 1\r\n| join kind = inner (Resources \r\n| where id in~ ({Resources})\r\n| summarize Subs = dcount(subscriptionId), resourceGroups = dcount(resourceGroup), resourceCount = count()\r\n| extend jkey = 1) on jkey\r\n| project x, label = 'x', selected = case(x in ('microsoft.compute/virtualmachinescalesets', 'microsoft.compute/virtualmachines') and resourceCount <= 5, true, x == 'microsoft.resources/resourcegroups' and resourceGroups <= 3 and resourceCount > 5, true, x == 'microsoft.resources/subscriptions' and resourceGroups > 3 and resourceCount > 5, true, false)\r\n",
            "crossComponentResources": [
              "{Subscriptions}"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "db9b2f1d-188a-4dda-af4a-b39deeb34da3",
            "version": "KqlParameterItem/1.0",
            "name": "Direction",
            "type": 2,
            "description": "Direction of the network connection from the VMs",
            "isRequired": true,
            "value": "outbound",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    { \"value\":\"inbound\", \"label\":\"Inbound\" },\r\n    { \"value\":\"outbound\", \"label\":\"Outbound\" }\r\n]"
          },
          {
            "id": "56ab6626-c12d-4de1-8a3d-8a6099db3cd3",
            "version": "KqlParameterItem/1.0",
            "name": "Hierarchy",
            "type": 2,
            "description": "Select the level of detail to be shown in the table below",
            "isRequired": true,
            "query": "let outboundTable = datatable (value:string, Display:string)\r\n    [\"0\", \"Computer -> Process -> Remote IP -> Port\",\r\n     \"1\", \"Computer -> Process -> Remote IP\",\r\n     \"2\", \"Computer -> Process\",\r\n     \"3\", \"Computer\"];\r\nlet outbound = outboundTable | extend type = 'outbound';\r\nlet inboundTable = datatable (value:string, Display:string)\r\n    [\"0\", \"Computer -> Process -> Port -> Remote IP\",\r\n     \"1\", \"Computer -> Process -> Port\",\r\n     \"2\", \"Computer -> Process\",\r\n     \"3\", \"Computer\"];\r\nlet inbound = inboundTable | extend type = 'inbound';\r\nlet table = outbound | union inbound;\r\ntable\r\n| where type == iif('{Direction}' == 'outbound', 'outbound', 'inbound')\r\n| project value, Display",
            "crossComponentResources": [
              "{Resources}"
            ],
            "value": "2",
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "5526f711-6d04-469e-8d06-351508f1014e",
            "version": "KqlParameterItem/1.0",
            "name": "TableFilter",
            "type": 2,
            "description": "Filter table based on presence of malicious connections or at least one link failing",
            "multiSelect": true,
            "quote": "",
            "delimiter": "",
            "value": [],
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n    {\r\n        \"label\": \"Only Malicious Connections\",\r\n        \"value\": \" | where MaliciousConnectionsCount >= 1\"\r\n    },\r\n    {\r\n        \"label\": \"Only Links Failed\",\r\n        \"value\": \" | where LinksFailed >= 1\"\r\n    }\r\n]",
            "label": "Table Filter"
          }
        ],
        "style": "above",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters - 2"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Resources}"
        ],
        "parameters": [
          {
            "id": "5e335a1b-7f99-4647-854a-d7b5cb489bb2",
            "version": "KqlParameterItem/1.0",
            "name": "ServiceMapComputers",
            "type": 1,
            "isRequired": true,
            "query": "print(\"let computers = ServiceMapComputer_CL | summarize (TimeGenerated, Properties) = arg_max(TimeGenerated, pack_all()) by Computer;\");",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "c69fbaae-4fd2-4527-acdd-a2c358eebffa",
            "version": "KqlParameterItem/1.0",
            "name": "MaliciousIpData",
            "type": 1,
            "query": "print(\"let maliciousIpData = VMConnection  | where Direction == '{Direction}' | where _ResourceId in~ ({Resources}) | where MaliciousIp != '' | summarize by Computer, ProcessName, MaliciousIp, DestinationPort, RemoteIp, IsActive, IndicatorThreatType, RemoteCountry, RemoteLongitude, RemoteLatitude, Confidence, Severity, FirstReportedDateTime, LastReportedDateTime | project MaliciousIp = strcat(Computer, '-', ProcessName, '-', MaliciousIp), MaliciousPort = strcat(Computer, '-', ProcessName, '-', DestinationPort), MaliciousPortIp = strcat(Computer, '-', ProcessName, '-', DestinationPort, '-', RemoteIp), Computer = Computer, Process = strcat(Computer, '-', ProcessName), MaliciousIpInfo = pack('Malicious IP', MaliciousIp, 'Is Active', IsActive, 'Indicator Threat Type', IndicatorThreatType, 'Remote Country', RemoteCountry, 'Longitude', RemoteLongitude, 'Latitude', RemoteLatitude, 'Confidence', Confidence, 'Severity', Severity, 'First Reported DateTime', FirstReportedDateTime, 'Last Reported DateTime', LastReportedDateTime, 'Destination Port', DestinationPort, 'Remote IP', RemoteIp);\");",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "dd933ac8-1273-48fe-8d09-bd65d857ce83",
            "version": "KqlParameterItem/1.0",
            "name": "ComputerData",
            "type": 1,
            "query": "print(\"let computerData = VMConnection | where Direction == '{Direction}' | where _ResourceId in~ ({Resources}) | summarize Responses = sum(Responses), LinksFailed = sum(LinksFailed), MaxLinksLive = max(LinksLive), TotalBytesSent = sum(BytesSent), TotalBytesReceived = sum(BytesReceived), AverageResponseTime = 1.0 * sum(ResponseTimeSum) / sum(Responses) by Name = strcat('🖥️ ', Computer), ComputerName = Computer, Type = 'Computer', TypeKey = 1, Key = Computer, ParentKey = '---' | join kind=leftouter (maliciousIpData | summarize MaliciousIpInfo = tostring(count()) by Computer) on $left.Key == $right.Computer | project-away Computer | order by Name asc;\");",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "fb879823-c082-4c53-af7e-18d044032f99",
            "version": "KqlParameterItem/1.0",
            "name": "RemoteIpDataInbound",
            "type": 1,
            "query": "print(\"let remoteIpDataInbound = VMConnection | where Direction == 'inbound' | where 'inbound' == 'inbound' | where _ResourceId in~ ({Resources}) | summarize Responses = sum(Responses), LinksFailed = sum(LinksFailed), MaxLinksLive = max(LinksLive), TotalBytesSent = sum(BytesSent), TotalBytesReceived = sum(BytesReceived), AverageResponseTime = 1.0 *  sum(ResponseTimeSum) / sum(Responses) by Computer, ProcessName, RemoteIp, Type = 'Remote Computer', TypeKey = 3, Key = strcat(Computer, '-', ProcessName, '-', tostring(DestinationPort), '-', RemoteIp), ParentKey = strcat(Computer, '-', ProcessName, '-', tostring(DestinationPort)), Id = strcat(Computer, '-', ProcessName, '-', RemoteIp), ComputerName = Computer | join kind=inner     sourcePortData on $left.ParentKey == $right.Key | project-away AverageResponseTime1, Computer1, Key1, LinksFailed1, MaxLinksLive1, ParentKey1, ProcessName1, Responses1, TotalBytesReceived1, TotalBytesSent1, Type1, TypeKey1 | order by Name asc | join kind=leftouter     ipComputerMapping on $left.RemoteIp == $right.Ipv4 | extend Name = iff(RemoteIp == '', 'Unknown',  strcat('🌐 External (', RemoteIp, ')')) | project-away Computer, Ipv4 | order by Name desc | join kind=leftouter     maliciousIpData on $left.Key == $right.MaliciousPortIp | extend MaliciousIpInfo = tostring(MaliciousIpInfo1) | project-away MaliciousIp, Computer, Process, Computer1, MaliciousIpInfo1, Id;\");",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "3ad60c70-b530-49c0-a59b-8df690dffbc8",
            "version": "KqlParameterItem/1.0",
            "name": "ProcessName",
            "type": 1,
            "query": "print(\"let processData = VMConnection | where Direction == '{Direction}' | where _ResourceId in~ ({Resources}) | summarize Responses = sum(Responses), LinksFailed = sum(LinksFailed), MaxLinksLive = max(LinksLive), TotalBytesSent = sum(BytesSent), TotalBytesReceived = sum(BytesReceived), AverageResponseTime = 1.0 *  sum(ResponseTimeSum) / sum(Responses) by Computer, ProcessName, Name = strcat('🎫 ', ProcessName), Type = 'Process', TypeKey = 2, Key = strcat(Computer, '-', ProcessName), ParentKey = Computer, ComputerName = Computer | join kind=inner computerData on $left.ParentKey == $right.Key | project-away Name1, Responses1, LinksFailed1, MaxLinksLive1, TotalBytesSent1, TotalBytesReceived1, AverageResponseTime1, Type1, Key1, ParentKey1 | join kind=leftouter (maliciousIpData | summarize MaliciousIpInfo = tostring(count()) by Process) on $left.Key == $right.Process | project-away Process, MaliciousIpInfo | extend MaliciousIpInfo = tostring(MaliciousIpInfo1) | project-away MaliciousIpInfo1 | order by Name asc;\");",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "c9eea7db-3d14-4fbf-8ae6-b7507ec1d43f",
            "version": "KqlParameterItem/1.0",
            "name": "RemoteIpData",
            "type": 1,
            "isRequired": true,
            "query": "print(\"let remoteIpData = VMConnection | where '{Direction}' == 'outbound' | where Direction == '{Direction}' | where _ResourceId in~ ({Resources}) | extend RemoteIp = iff(Direction == 'outbound', DestinationIp, SourceIp) | summarize Responses = sum(Responses), LinksFailed = sum(LinksFailed), MaxLinksLive = max(LinksLive), TotalBytesSent = sum(BytesSent), TotalBytesReceived = sum(BytesReceived), AverageResponseTime = 1.0 *  sum(ResponseTimeSum) / sum(Responses) by Computer, ProcessName, RemoteIp, Type = 'Remote Computer', TypeKey = 3, Key = strcat(Computer, '-', ProcessName, '-', RemoteIp), ParentKey = strcat(Computer, '-', ProcessName), ComputerName = Computer | join kind=inner processData on $left.ParentKey == $right.Key | project-away Name, Responses1, LinksFailed1, MaxLinksLive1, TotalBytesSent1, TotalBytesReceived1, AverageResponseTime1, Type1, Key1, ParentKey1 | join kind=leftouter maliciousIpData on $left.Key == $right.MaliciousIp | project-away MaliciousIp, Computer, Process, Computer1, Computer2, MaliciousIpInfo | extend MaliciousIpInfo = tostring(MaliciousIpInfo1) | project-away MaliciousIpInfo1 | join kind = leftouter (ipComputerMapping) on $left.RemoteIp == $right.Ipv4 | extend Name = iff(Computer == '', iff(RemoteIp == '127.0.0.1', '🌐 Localhost',  strcat('🌐 External (', RemoteIp, ')')), strcat('🖥️ ', Computer)) | project-away Computer, Ipv4 | order by Name desc;\")",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "4a9ed59b-002e-4c81-b437-8456faeef6a6",
            "version": "KqlParameterItem/1.0",
            "name": "SourcePortData",
            "type": 1,
            "query": "print(\"let sourcePortData = VMConnection | where Direction == '{Direction}' | where '{Direction}' == 'inbound' | where _ResourceId in~ ({Resources}) | summarize Responses = sum(Responses), LinksFailed = sum(LinksFailed), MaxLinksLive = max(LinksLive), TotalBytesSent = sum(BytesSent), TotalBytesReceived = sum(BytesReceived), AverageResponseTime = 1.0 *  sum(ResponseTimeSum) / sum(Responses) by Computer, ProcessName, DestinationIp, DestinationPort, Name = strcat('🔶 ', DestinationPort), Type = 'Remote Port', TypeKey = 4, Key = strcat(Computer, '-', ProcessName, '-', tostring(DestinationPort)), ParentKey = strcat(Computer, '-', ProcessName), ComputerName = Computer | join kind=leftouter maliciousIpData on $left.Key == $right.MaliciousPort | extend MaliciousIpInfo = tostring(MaliciousIpInfo) | project-away Computer1, MaliciousIp, MaliciousPort, MaliciousPortIp, Process; {RemoteIpDataInbound}\");",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions",
            "value": null
          },
          {
            "id": "e31a8d21-e24b-45ec-9806-e6c45bca15aa",
            "version": "KqlParameterItem/1.0",
            "name": "DestinationPortData",
            "type": 1,
            "query": "print(\"let destinationPortData = VMConnection | where Direction == '{Direction}' | where '{Direction}' == 'outbound' | where _ResourceId in~ ({Resources}) | summarize Responses = sum(Responses), LinksFailed = sum(LinksFailed), MaxLinksLive = max(LinksLive), TotalBytesSent = sum(BytesSent), TotalBytesReceived = sum(BytesReceived), AverageResponseTime = 1.0 *  sum(ResponseTimeSum) / sum(Responses) by Computer, ProcessName, DestinationIp, DestinationPort, Name = strcat('🔶 ', DestinationPort), Type = 'Remote Port', TypeKey = 4, Key = strcat(Computer, '-', ProcessName, '-', DestinationIp, '-', tostring(DestinationPort)), ParentKey = strcat(Computer, '-', ProcessName, '-', DestinationIp), ComputerName = Computer | join kind=inner remoteIpData on $left.ParentKey == $right.Key | project-away Name1, Responses1, Type1, Key1, ParentKey1 | order by Name asc;\");",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "a54f3df8-c872-4a19-a280-84b203987ec8",
            "version": "KqlParameterItem/1.0",
            "name": "QueryProject",
            "type": 1,
            "query": "print(\"| extend MaliciousConnectionsCount = iff(MaliciousIpInfo == '', 0, iff(Type == 'Computer' or Type == 'Process' or Type == 'Overall', tolong(MaliciousIpInfo), 1)) | project ComputerName, ProcessName, RemoteIp, DestinationPort, Name = iff(Name == '🎫 ', '🎫 <Unknown>', Name), Type, MaliciousConnections = iff(MaliciousIpInfo == '', '✅ No Malicious Connections', iff(Type == 'Computer' or Type == 'Process' or Type == 'Overall', iff(MaliciousConnectionsCount > 1, strcat('❌ ', MaliciousIpInfo, ' Malicious Connections'), strcat('❌ ', MaliciousIpInfo, ' Malicious Connection')), '❌ Malicious Connection')), Responses, MaxLinksLive, LinksFailed, AverageResponseTime, TotalBytesSent, TotalBytesReceived, Info = iff(MaliciousIpInfo != '', MaliciousIpInfo, ''), Key, ParentKey, TypeKey, MaliciousConnectionsCount | order by TypeKey asc, MaliciousConnectionsCount desc, LinksFailed desc, AverageResponseTime desc, Responses desc, MaxLinksLive desc, Name asc | project-away TypeKey\");",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "9789ead5-eae5-4f52-86c2-ac197da62f30",
            "version": "KqlParameterItem/1.0",
            "name": "Computer_Process_IP_Port",
            "type": 1,
            "query": "print(strcat(\"{ServiceMapComputers}\", \" let ipComputerMapping = computers | project Computer, Ipv4 = todynamic(tostring(Properties.Ipv4Addresses_s)) | mvexpand Ipv4 to typeof(string); \", \"{MaliciousIpData}\", \" let totalMaliciousConnectionsCount = maliciousIpData | summarize MaliciousIpInfo = count() | extend Type = 'Overall'; \", \"{ComputerData}\", \"{ProcessName}\", \"{RemoteIpData}\", \"{DestinationPortData}\", \"{SourcePortData}\", \" let overalldata = VMConnection | where Direction == '{Direction}' | where _ResourceId in~ ({Resources}) | summarize Responses = sum(Responses), LinksFailed = sum(LinksFailed), MaxLinksLive = max(LinksLive), TotalBytesSent = sum(BytesSent), TotalBytesReceived = sum(BytesReceived), AverageResponseTime = 1.0 *  sum(ResponseTimeSum) / sum(Responses) | extend Name = '🔵 Overall', Type = 'Overall', TypeKey = 0, Key = '--Overall--', ParentKey = '----' | join kind=leftouter totalMaliciousConnectionsCount on Type | extend MaliciousIpInfo = iff(MaliciousIpInfo == '0', '', tostring(MaliciousIpInfo)) | project-away Type1; computerData | union processData | union remoteIpData | union destinationPortData | union remoteIpDataInbound | union sourcePortData | union overalldata\t\", \"{QueryProject}\"));",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "0d6a320e-2cef-44fd-ac0b-ad833f8d0c03",
            "version": "KqlParameterItem/1.0",
            "name": "Computer_Process_IP",
            "type": 1,
            "query": "print(strcat(\"{ServiceMapComputers}\", \" let ipComputerMapping = computers | project Computer, Ipv4 = todynamic(tostring(Properties.Ipv4Addresses_s)) | mvexpand Ipv4 to typeof(string); \", \"{MaliciousIpData}\", \" let totalMaliciousConnectionsCount = maliciousIpData | summarize MaliciousIpInfo = count() | extend Type = 'Overall'; \", \"{ComputerData}\", \"{ProcessName}\", \"{RemoteIpData}\", \"{SourcePortData}\", \" let overalldata = VMConnection | where Direction == '{Direction}' | where _ResourceId in~ ({Resources}) | summarize Responses = sum(Responses), LinksFailed = sum(LinksFailed), MaxLinksLive = max(LinksLive), TotalBytesSent = sum(BytesSent), TotalBytesReceived = sum(BytesReceived), AverageResponseTime = 1.0 *  sum(ResponseTimeSum) / sum(Responses) | extend Name = '🔵 Overall', Type = 'Overall', TypeKey = 0, Key = '--Overall--', ParentKey = '----' | join kind=leftouter totalMaliciousConnectionsCount on Type | extend MaliciousIpInfo = iff(MaliciousIpInfo == '0', '', tostring(MaliciousIpInfo)) | project-away Type1;\" ,\" computerData | union processData | union remoteIpData | union sourcePortData | union overalldata \", \"{QueryProject}\"));",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "2de0d685-4382-4822-a8aa-f3583ff11b66",
            "version": "KqlParameterItem/1.0",
            "name": "QueryPadDestinationPortTable",
            "type": 1,
            "isRequired": true,
            "query": "print(\"let destinationPortPadding = datatable (DestinationPort: string) [];\");",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "df8a6322-511e-40e0-a258-fe717099a072",
            "version": "KqlParameterItem/1.0",
            "name": "QueryPadRemoteIpTable",
            "type": 1,
            "isRequired": true,
            "query": "print(\"let remoteIpPadding = datatable (RemoteIp: string) [];\");",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "e8f2c394-18e8-4d6d-8f5e-8453cb67128c",
            "version": "KqlParameterItem/1.0",
            "name": "Computer_Process",
            "type": 1,
            "query": "print(strcat(\"{ServiceMapComputers}\", \" let ipComputerMapping = computers | project Computer, Ipv4 = todynamic(tostring(Properties.Ipv4Addresses_s)) | mvexpand Ipv4 to typeof(string); \", \"{MaliciousIpData}\", \" let totalMaliciousConnectionsCount = maliciousIpData | summarize MaliciousIpInfo = count() | extend Type = 'Overall'; \", \"{ComputerData}\", \"{ProcessName}\", \" let overalldata = VMConnection | where Direction == '{Direction}' | where _ResourceId in~ ({Resources}) | summarize Responses = sum(Responses), LinksFailed = sum(LinksFailed), MaxLinksLive = max(LinksLive), TotalBytesSent = sum(BytesSent), TotalBytesReceived = sum(BytesReceived), AverageResponseTime = 1.0 *  sum(ResponseTimeSum) / sum(Responses) | extend Name = '🔵 Overall', Type = 'Overall', TypeKey = 0, Key = '--Overall--', ParentKey = '----' | join kind=leftouter totalMaliciousConnectionsCount on Type | extend MaliciousIpInfo = iff(MaliciousIpInfo == '0', '', tostring(MaliciousIpInfo)) | project-away Type1;\", \"{QueryPadDestinationPortTable}\", \"{QueryPadRemoteIpTable}\",\" computerData | union remoteIpPadding | union destinationPortPadding | union processData | union overalldata \", \"{QueryProject}\"));",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "084fb5fc-e8e4-42df-8a9f-ac1001950ba2",
            "version": "KqlParameterItem/1.0",
            "name": "QueryPadProcessNameTable",
            "type": 1,
            "isRequired": true,
            "query": "print(\"let processNamePadding = datatable (ProcessName: string) [];\");",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "a4b0e146-7c89-40bb-ade2-ed2e392e9311",
            "version": "KqlParameterItem/1.0",
            "name": "Computer",
            "type": 1,
            "query": "print(strcat(\"{ServiceMapComputers}\", \" let ipComputerMapping = computers | project Computer, Ipv4 = todynamic(tostring(Properties.Ipv4Addresses_s)) | mvexpand Ipv4 to typeof(string); \", \"{MaliciousIpData}\", \" let totalMaliciousConnectionsCount = maliciousIpData | summarize MaliciousIpInfo = count() | extend Type = 'Overall'; \", \"{ComputerData}\", \" let overalldata = VMConnection | where Direction == '{Direction}' | where _ResourceId in~ ({Resources}) | summarize Responses = sum(Responses), LinksFailed = sum(LinksFailed), MaxLinksLive = max(LinksLive), TotalBytesSent = sum(BytesSent), TotalBytesReceived = sum(BytesReceived), AverageResponseTime = 1.0 *  sum(ResponseTimeSum) / sum(Responses) | extend Name = '🔵 Overall', Type = 'Overall', TypeKey = 0, Key = '--Overall--', ParentKey = '----' | join kind=leftouter totalMaliciousConnectionsCount on Type | extend MaliciousIpInfo = iff(MaliciousIpInfo == '0', '', tostring(MaliciousIpInfo)) | project-away Type1;\", \"{QueryPadDestinationPortTable}\", \"{QueryPadRemoteIpTable}\", \"{QueryPadProcessNameTable}\",\" computerData | union remoteIpPadding | union processNamePadding | union destinationPortPadding | union overalldata \", \"{QueryProject}\"));",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "a08757da-e72b-474d-a1d2-65fb7020cc14",
            "version": "KqlParameterItem/1.0",
            "name": "FinalQuery",
            "type": 1,
            "query": "print(strcat(\r\niff({Hierarchy} == 0, \"{Computer_Process_IP_Port}\", \r\niff({Hierarchy} == 1, \"{Computer_Process_IP}\",\r\niff({Hierarchy} == 2, \"{Computer_Process}\",\r\niff({Hierarchy} == 3, \"{Computer}\", \"{Computer}\")))),'{TableFilter:value}'));",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "874eeebe-2ea2-4c04-a3b9-ab3b30e95573",
            "version": "KqlParameterItem/1.0",
            "name": "ConnectionGrid",
            "type": 1,
            "value": "{}",
            "isHiddenWhenLocked": true
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.resources/subscriptions"
      },
      "name": "parameters - 3"
    },
    {
      "type": 1,
      "content": {
        "json": "💡 <em>Select a row from the table below to view connection details for that entry.</em>"
      },
      "name": "text - 4"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{FinalQuery:value}",
        "size": 0,
        "noDataMessage": "No data to be shown for this particular scope combination, please adjust the time range, table filters, etc.",
        "timeContext": {
          "durationMs": 0
        },
        "timeContextFromParameter": "TimeRange",
        "exportParameterName": "ConnectionGrid",
        "queryType": 0,
        "resourceType": "{ResourceScope}",
        "crossComponentResources": [
          "{Resources}"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Computer",
              "formatter": 5,
              "formatOptions": {}
            },
            {
              "columnMatch": "ProcessName",
              "formatter": 5,
              "formatOptions": {}
            },
            {
              "columnMatch": "RemoteIp",
              "formatter": 5,
              "formatOptions": {}
            },
            {
              "columnMatch": "DestinationPort",
              "formatter": 5,
              "formatOptions": {},
              "numberFormat": {
                "unit": 0,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Responses",
              "formatter": 4,
              "formatOptions": {
                "palette": "blueDark"
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "MaxLinksLive",
              "formatter": 4,
              "formatOptions": {
                "palette": "lightBlue"
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "LinksFailed",
              "formatter": 4,
              "formatOptions": {
                "palette": "red"
              },
              "numberFormat": {
                "unit": 17,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "AverageResponseTime",
              "formatter": 4,
              "formatOptions": {
                "palette": "purple"
              },
              "numberFormat": {
                "unit": 23,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "TotalBytesSent",
              "formatter": 4,
              "formatOptions": {
                "palette": "orange"
              },
              "numberFormat": {
                "unit": 2,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "TotalBytesReceived",
              "formatter": 4,
              "formatOptions": {
                "palette": "green"
              },
              "numberFormat": {
                "unit": 2,
                "options": {
                  "style": "decimal"
                }
              }
            },
            {
              "columnMatch": "Info",
              "formatter": 5,
              "formatOptions": {
                "linkTarget": "CellDetails",
                "linkLabel": "ℹ️ Info"
              }
            },
            {
              "columnMatch": "Key",
              "formatter": 5,
              "formatOptions": {}
            },
            {
              "columnMatch": "ParentKey",
              "formatter": 5,
              "formatOptions": {}
            },
            {
              "columnMatch": "MaliciousConnectionsCount",
              "formatter": 5,
              "formatOptions": {}
            }
          ],
          "rowLimit": 10000,
          "filter": true,
          "hierarchySettings": {
            "idColumn": "Key",
            "parentColumn": "ParentKey",
            "treeType": 0,
            "expanderColumn": "Name",
            "expandTopLevel": false
          }
        },
        "tileSettings": {
          "showBorder": false,
          "titleContent": {
            "columnMatch": "Computer",
            "formatter": 1
          },
          "leftContent": {
            "columnMatch": "KPIValue",
            "formatter": 12,
            "formatOptions": {
              "palette": "auto"
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "maximumSignificantDigits": 3,
                "maximumFractionDigits": 2
              }
            }
          }
        }
      },
      "showPin": true,
      "name": "query - 5"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{Resources}"
        ],
        "parameters": [
          {
            "id": "7e4c3d29-2be6-4288-903b-95502ddab577",
            "version": "KqlParameterItem/1.0",
            "name": "ComputerName",
            "type": 1,
            "query": "let row = dynamic({ConnectionGrid});\r\nlet computerName = row.ComputerName;\r\nprint computerName",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "3bda15ac-c4ea-487f-acf5-2c14c8d33038",
            "version": "KqlParameterItem/1.0",
            "name": "ProcessName",
            "type": 1,
            "query": "let row = dynamic({ConnectionGrid});\r\nlet ProcessName = row.ProcessName;\r\nprint ProcessName",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "e424020b-8c6e-4a06-9639-ed696192442a",
            "version": "KqlParameterItem/1.0",
            "name": "RemoteIp",
            "type": 1,
            "query": "let row = dynamic({ConnectionGrid});\r\nlet RemoteIp = row.RemoteIp;\r\nprint RemoteIp",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "a479367c-f99b-4c93-b18c-51f07ce5069d",
            "version": "KqlParameterItem/1.0",
            "name": "DestinationPort",
            "type": 1,
            "query": "let row = dynamic({ConnectionGrid});\r\nlet destinationPort = row.DestinationPort;\r\nprint destinationPort",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "dcf5f274-fbbf-4fb8-8c35-6b528a08cac9",
            "version": "KqlParameterItem/1.0",
            "name": "ShowDetail",
            "type": 1,
            "isRequired": true,
            "query": "print(strcat('{ComputerName}{ProcessName}{RemoteIp}{DestinationPort}' != ''))",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "1ce27926-6842-497b-ac53-70c006e11231",
            "version": "KqlParameterItem/1.0",
            "name": "Heading",
            "type": 1,
            "query": "print(strcat('💻 {ComputerName}',iff('{ProcessName}' != '',' > 🎫 {ProcessName}',''),iff('{Direction}' == 'outbound',strcat(iff('{RemoteIp}' != '',' > 🌐 {RemoteIp}',''),iff('{DestinationPort}' != '',' > 🔸 {DestinationPort}','')),strcat(iff('{DestinationPort}' != '',' > 🔸 {DestinationPort}',''),iff('{RemoteIp}' != '',' > 🌐 {RemoteIp}','')))))",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          },
          {
            "id": "b44edb14-76ad-48b3-9921-b5dfb5a6db60",
            "version": "KqlParameterItem/1.0",
            "name": "QueryFilter",
            "type": 1,
            "query": "print(strcat(' where Computer == \"{ComputerName}\"',iff('{ProcessName}' != '', ' | where ProcessName == \"{ProcessName}\"', ''),iff('{RemoteIp}' != '',' | where RemoteIp == \"{RemoteIp}\"',''),iff('{DestinationPort}' != '',' | where DestinationPort == \"{DestinationPort}\"','')));",
            "crossComponentResources": [
              "{Resources}"
            ],
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.resources/subscriptions"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.resources/subscriptions"
      },
      "name": "parameters - 6"
    },
    {
      "type": 1,
      "content": {
        "json": "<h2 style=\"font-weight:normal;\">{Heading}</h2>"
      },
      "conditionalVisibility": {
        "parameterName": "ShowDetail",
        "comparison": "isEqualTo",
        "value": "True"
      },
      "name": "text - 7"
    },
    {
      "type": 1,
      "content": {
        "json": "### Responses"
      },
      "conditionalVisibility": {
        "parameterName": "ShowDetail",
        "comparison": "isEqualTo",
        "value": "True"
      },
      "customWidth": "25",
      "name": "text - 8"
    },
    {
      "type": 1,
      "content": {
        "json": "### Latency"
      },
      "conditionalVisibility": {
        "parameterName": "ShowDetail",
        "comparison": "isEqualTo",
        "value": "True"
      },
      "customWidth": "25",
      "name": "text - 9"
    },
    {
      "type": 1,
      "content": {
        "json": "### Network"
      },
      "conditionalVisibility": {
        "parameterName": "ShowDetail",
        "comparison": "isEqualTo",
        "value": "True"
      },
      "customWidth": "25",
      "name": "text - 10"
    },
    {
      "type": 1,
      "content": {
        "json": "### Links"
      },
      "conditionalVisibility": {
        "parameterName": "ShowDetail",
        "comparison": "isEqualTo",
        "value": "True"
      },
      "customWidth": "25",
      "name": "text - 11"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let SourceMachineData = VMConnection\r\n| where TimeGenerated {TimeRange}\r\n| where _ResourceId in~ ({Resources})\r\n| {QueryFilter}\r\n| where Direction == '{Direction}'\r\n| summarize Responses = sum(Responses) by bin(TimeGenerated, time('{TimeRange:grain}'));\r\nSourceMachineData",
        "size": 1,
        "queryType": 0,
        "resourceType": "{ResourceScope}",
        "crossComponentResources": [
          "{Resources}"
        ],
        "visualization": "areachart"
      },
      "conditionalVisibility": {
        "parameterName": "ShowDetail",
        "comparison": "isEqualTo",
        "value": "True"
      },
      "customWidth": "25",
      "name": "query - 12"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let SourceMachineData = VMConnection\r\n| where TimeGenerated {TimeRange}\r\n| where _ResourceId in~ ({Resources})\r\n| {QueryFilter}\r\n| where Direction == '{Direction}'\r\n| summarize P50 = percentiles(ResponseTimeSum, 50), P90 = percentiles(ResponseTimeSum, 90), P95 = percentiles(ResponseTimeSum, 95) by bin(TimeGenerated, time('{TimeRange:grain}'));\r\nSourceMachineData",
        "size": 1,
        "aggregation": 3,
        "queryType": 0,
        "resourceType": "{ResourceScope}",
        "crossComponentResources": [
          "{Resources}"
        ],
        "visualization": "linechart"
      },
      "conditionalVisibility": {
        "parameterName": "ShowDetail",
        "comparison": "isEqualTo",
        "value": "True"
      },
      "customWidth": "25",
      "name": "query - 13"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let SourceMachineData = VMConnection\r\n| where TimeGenerated {TimeRange}\r\n| where _ResourceId in~ ({Resources})\r\n| {QueryFilter}\r\n| where Direction == '{Direction}'\r\n| summarize Sent = sum(BytesSent), Received = sum(BytesReceived) by bin(TimeGenerated, time('{TimeRange:grain}'));\r\nSourceMachineData",
        "size": 1,
        "queryType": 0,
        "resourceType": "{ResourceScope}",
        "crossComponentResources": [
          "{Resources}"
        ],
        "visualization": "areachart"
      },
      "conditionalVisibility": {
        "parameterName": "ShowDetail",
        "comparison": "isEqualTo",
        "value": "True"
      },
      "customWidth": "25",
      "name": "query - 14"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "let SourceMachineData = VMConnection\r\n| where TimeGenerated {TimeRange}\r\n| where _ResourceId in~ ({Resources}) \r\n| {QueryFilter}\r\n| where Direction == '{Direction}'\r\n| summarize MaxOpenPorts = max(LinksLive), SumFailed = sum(LinksFailed) by bin(TimeGenerated, time('{TimeRange:grain}'));\r\nSourceMachineData",
        "size": 1,
        "aggregation": 3,
        "queryType": 0,
        "resourceType": "{ResourceScope}",
        "crossComponentResources": [
          "{Resources}"
        ],
        "visualization": "areachart"
      },
      "conditionalVisibility": {
        "parameterName": "ShowDetail",
        "comparison": "isEqualTo",
        "value": "True"
      },
      "customWidth": "25",
      "name": "query - 15"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
